<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gtd | zzamboni.org]]></title>
  <link href="http://zzamboni.github.com/blog/categories/gtd/atom.xml" rel="self"/>
  <link href="http://zzamboni.github.com/"/>
  <updated>2013-04-14T12:23:27-05:00</updated>
  <id>http://zzamboni.github.com/</id>
  <author>
    <name><![CDATA[Diego Zamboni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automatically creating tasks from email in Outlook]]></title>
    <link href="http://zzamboni.github.com/blog/automatically-creating-tasks-from-email-in-ou"/>
    <updated>2011-03-16T01:54:00-06:00</updated>
    <id>http://zzamboni.github.com/blog/automatically-creating-tasks-from-email-in-ou</id>
    <content type="html"><![CDATA[<p><span style="font-size: x-small;"><em><strong>Please note:</strong> I am no longer using Windows nor Outlook, so unfortunately I cannot offer any help with problems you encounter using these scripts and techniques.</em></span></p>


<p>Over the last few days I have been redoing my GTD-under-Outlook setup, based on the instructions available in the "<a href="https://secure.davidco.com/store/product.php?productid=16426&amp;cat=0&amp;page=1">GTD and Outlook</a>" guide from DavidCo (I will write more about my setup later). One of the tricks the guide suggest is creating a mail rule on outgoing mail, which scans the message body for a special tag (/wf or *wf* are suggested) and automatically adds the message to the @WAITING FOR email folder. </p>


<p></p>


<p> This is a very nice idea, and I am a fan of automating things as much as possible, so it really strikes a cord with me. Unfortunately, I am not using a @WAITING FOR email folder, instead I have just my @WAITING FOR task category. As strange as it sounds, Outlook does not have an email filter rule for automatically creating a task from an outgoing or incoming email message. For incoming messages there is a rule for flagging the message for "Follow up", which creates a "to do" item but not a Task in itself (this is very confusing). This would be fine except that Follow-Up items are not synchronized to <a href="http://toodledo.com/">Toodledo</a> by the <a href="http://www.chromadrake.com/ChromaticDragon/software/ToodledoSyncInfo.aspx">ToodleDoSync application</a>, and hence not synchronized to my iPhone. <p></p> So, evidently I had to solve this, and here is how I did it. <p></p> I noticed that there is an email action for "running a script". It turns out the "script" <a href="http://support.microsoft.com/kb/306108">must be a subroutine written in VisualBasic for Applications</a> (VBA) from inside Outlook. A Google search for "<a href="http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=outlook+automatically+create+task+from+email">outlook create task from email</a>" yielded a few good hits, including <a href="http://www.outlookcode.com/codedetail.aspx?id=959">this one</a>. It does pretty much what I want, except that the text and attachments of the message are copied into the task body, which I don't like because (1) most formatting from the original email is lost, and (2) in my testing, some messages with attachments produced VBA errors. So I modified it to just attach a copy of the original message into the task, which preserves both its formatting and attachments identically. I made the rule it so that the tasks are created based on incoming mail because <a href="http://blog.zzamboni.org/automatically-cc-myself-in-outlook">I copy myself automatically on all messages I send</a> (in fact I have disabled saving messages to the "Sent Items" folder), and this makes it possible to create tasks by emailing my Exchange account from other locations.</p>

<p>As a bonus, I modified the script so that any text you type after the /wf tag becomes the title of the newly-created task (if you don't type anything, the subject of the email message is used). This makes it easier to give your @WAITING FOR items a good, descriptive title upfront.</p>


<p>So here are the detailed steps of what you need to do: </p>


<p></p>


<p> (these instructions are based on Outlook 2010 which is what I use, if you use 2007 or prior you'll have to find by yourself where the different options and menus are, which shouldn't be all that difficult) <p></p></p>

<ol>
<li>In the Developer tab, click on "Visual Basic", which opens the VBA development environment, and unless you already have other macros installed, should give you a blank window. <br><div class="p_embed p_image_embed">
<img alt="Vba" height="126" src="http://zzamboni.github.com/images/2011/03/16/automatically-creating-tasks-from-email-in-ou/23077308-vba.png" width="422">
</div>
</li>
<li>Paste the code:<br>{% gist 868510 outlook_MakeWaitingForTaskWithAttachmentFromCurrentMessage.bas %}</li>
<li>The code includes both the "script" to use in an email rule (which receives the email message as argument) and a macro (without arguments) so that you can run it manually from the Macros menu (also in the Developer tab). Try it out - select an email message, choose the macro from the Macros menu, and check that a new task in the @WAITING FOR category is created, with the original message as an attachment. </li>
<li>If needed, modify the category to which the task is assigned (or leave it empty to create an uncategorized task). </li>
<li>The code by default adds the recipient of the message to the beginning of the task title, separated by a colon (of the form "recipient: subject"). This makes it easier to see pending items per person (and, if you use the 2Do iPhone app, it automatically groups entries by the text before the colon, which makes it even easier to process. If you don't want this, modify the value of addRecipient to "False".</li>
<li>To ensure that the macros run correctly after restarting Outlook, you have to sign it digitally, following the instructions here: <a href="http://office.microsoft.com/en-us/outlook-help/digitally-sign-a-macro-project-HA001231781.aspx">http://office.microsoft.com/en-us/outlook-help/digitally-sign-a-macro-project...</a>. Create a self-signed certificate and use it for signing the macro package. I had to restart Outlook for the digital signature to take proper effect. </li>
<li>Create the rule that will invoke the new subroutine on appropriate incoming email message(to create a new rule open the Home tab, then the Rules menu, then "Manage Rules and Alerts", create a blank rule for incoming messages, choose the appropriate criteria, and click on the underlined parts to define the parameters). These are the criteria I used: my rule operates on incoming mail from any of my accounts (so that only I can create Waiting For tasks for myself) and that contains "/wf" or "/*wf*/" in the body (in practice I always use /wf). I choose to automatically move the message to a local Outlook file (I have a pretty restrictive server quota), but you may want to skip this step. I also mark the message as read automatically, and of course I invoke the script created in the previous steps. <div class="p_embed p_image_embed">
<a href="http://zzamboni.github.com/images/2011/03/16/automatically-creating-tasks-from-email-in-ou/23077311-rule.png"><img alt="Rule" height="123" src="http://zzamboni.github.com/images/2011/03/16/automatically-creating-tasks-from-email-in-ou/23077311-rule.png" width="500"></a>
</div>
</li>
<li>Test it out. Send a message to yourself that contains /wf in the body. What I do in practice is that I include the /wf at the end of the message, and make it 1-point font and white so it's invisible to most people, but still detectable by the filter. After the message arrives you should see the new task appear in the appropriate category, containing the original message as an attachment. If you want to give the task a custom title instead of using the email subject, type it after the /wf, like this: "/wf Response about foo bar". The email recipient will still be added when you specify a custom title, unless you have disabled it in the code (see step 5).</li>
</ol>


<p>Of course, when using this to flag messages sent to other people, you need to make sure you either automatically cc yourself (if you have created the rule on incoming mail), or that you create it on outgoing mail. I have not tested this case, but the "run a script" option is there as well for outgoing messages, so I don't see a reason why it should not work. </p>


<p></p>


<p> Have fun.</p>

<p> </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Overhauling my GTD system under Windows]]></title>
    <link href="http://zzamboni.github.com/blog/overhauling-my-gtd-system-under-windows"/>
    <updated>2011-03-14T00:09:00-06:00</updated>
    <id>http://zzamboni.github.com/blog/overhauling-my-gtd-system-under-windows</id>
    <content type="html"><![CDATA[<p>As you may know, I'm a reluctant switcher from Mac to Windows. I am also a fan of <a href="http://en.wikipedia.org/wiki/Getting_Things_Done">GTD</a>. I had been using <a href="http://jello-dashboard.net/">Jello Dashboard</a> (JD) to implement GTD under Outlook. JD is a very nice system, the developer is friendly and responsive, and I had even written several patches to adapt it to my way of working. I was even in the process of drafting a series of blog posts titled "My GTD under Outlook setup".</p>


<p>However, a couple of months ago JD stopped working for me. Not in the technical sense, mind you, but in the GTD sense. I stopped processing my Inbox, I stopped updating my lists, and of course I stopped checking them for getting my next actions. It didn't happen all at once, but over time I stopped having confidence in my system.</p>


<p>What happened?</p>


<p>I have come to the conclusion that the main reason I stopped using and trusting JD was what <a href="http://www.davidco.com/david_allen.php">David Allen</a> calls "friction". A system that has a lot of friction, Allen says, will eventually become unused and untrusted (I am paraphrasing, but the message is there in his books and articles). JD, as nice as it is, requires you to switch to a different "mode" within Outlook to use it, since it is essentially a web application that runs inside Outlook (it is all written in Javascript). This means that as I am processing my mailbox, for example, and encounter an actionable email, I cannot simply create an actionable task at that point. I have to (1) switch to JD, (2) find the email in JD's view of my Inbox, which is different than the one in Outlook Mail, (3) mark it as actionable, tag it and file it, and (4) go back to my Outlook Inbox to continue processing it. Friction.</p>


<p>What is supposed to happen, I guess, is that you do all the processing from inside JD. But JD's mail viewer is not nearly as nice as the native Outlook one (for example, it shows all messages as plain text), it is slower, and does not have a threaded message view, among many other differences. The result was that my mode of operation, while I was still using JD, was to read my mail in Outlook, archive or delete non-actionable messages, and then switch to JD just to file the remaining ones as actions. Of course, as my workload increased, I stopped doing the switch as frequently, due to the mental friction of having to deal with the "not as nice" environment and losing time and momentum in the process.</p>


<p>And slowly, over time, I fell back into old bad habits: keeping things in my Inbox because I would need them later, and working off it. As a years-old GTD practitioner, I can tell you that the difference was noticeable. I started missing commitments and forgetting things, I became crankier and more stressed, and both my personal and professional lives suffered.</p>


<p>But the nice thing about GTD is that it is very forgiving. If you "fall off the wagon", all you have to do is do a good mind sweep and review, start recapturing stuff, and be on your way.</p>


<p>But first, I had to overhaul my system. I was sure that if I started capturing stuff into JD again, I would eventually encounter the same problem. So I went back to the basics: I signed up for a free <a href="http://gtdconnect.com/">GTD Connect</a> trial (GTD Connect is an amazing resource, too bad I cannot at the moment spend USD$50-a-month on it), downloaded the "GTD and Outlook 2007" guide and the Outlook 2010 supplement, and got to work. Followed the instructions, removed all my categories (JD uses categories for projects as well and for all its tags, so I had over a hundred of them), set it up with the minimum recommended set, and got to work on processing all my accumulated stuff.</p>


<p>I am not done yet, mind you, since I have literally hundreds of old tasks and emails, but I am making steady progress. I feel calmer than I was only a few days ago, because I am again slowly capturing all my stuff in a system that I hope can become trusted. For the first time in months I am decreasing my pile instead of increasing it constantly. The amount of things to do remains the same, but the pile of amorphous "stuff" that is there giving me the creeps has decreased. Eventually I need to get to the point where I can continue maintaining my system in cruise control, keeping things under control. I will blog more details about my specific setup later.</p>


<p>My conclusion is this: if you fall off the GTD wagon, just get back in! And don't be afraid to throw away your old system if you realize it is not working for you. The beauty of GTD is that it is not tied to a specific toolset, and if the tools you use do not support your good habits, you can easily switch them for others that do.</p>


<p>Reduce the friction, and it will improve your life.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a global hotkey to add tasks to Outlook]]></title>
    <link href="http://zzamboni.github.com/blog/setting-up-a-global-hotkey-to-add-tasks-to-ou"/>
    <updated>2010-12-23T12:14:00-06:00</updated>
    <id>http://zzamboni.github.com/blog/setting-up-a-global-hotkey-to-add-tasks-to-ou</id>
    <content type="html"><![CDATA[<p>One thing I missed since I moved from a Mac (using The Hit List for GTD) to Outlook (using Jello Dashboard for GTD) was the availability of a global hot key that I could use to bring up a text entry box which I could use to quickly add things into my electronic Inbox, for later processing.</p>


<p>I have found a way to achieve this, and here is the setup I am using now:</p>


<p>The first component is <a href="http://www.leeholmes.com/blog/2007/03/01/getting-things-done-%E2%80%93-outlook-task-automation-with-powershell/">this PowerShell script</a> written by Lee Holmes, which takes as arguments the title of the task to add, and adds it to Outlook. I saved it as <code>Documents/Add-OutlookTask.ps1</code> in my home directory.</p>


<p>The second component is the ever-useful and amazing <a href="http://www.autohotkey.com/">AutoHotkey</a>. I added the following lines to my <code>Documents/AutoHotKey.ahk</code> file:</p>


<p></p>


<p>{% gist 753333  %}</p>


<p>This snippet assigns Win-space to open an input box, and uses whatever is typed in it as the task title to the Add-OutlookTask script. The task will be placed without any categories in the task list, so it appears automatically the next time I open my Jello Dashboard inbox. Here it is in action:</p>


<p></p>


<div class="p_embed p_image_embed">
<img alt="Addtask" height="107" src="http://zzamboni.github.com/images/2010/12/23/setting-up-a-global-hotkey-to-add-tasks-to-ou/19022076-AddTask.png" width="391">
</div>




<p>I find this extremely useful, since I can press Win-space to add new tasks from any application, without having to switch to Outlook first. At some point I would like to explore the idea of making it smarter, like the quick-add keys in Things or THL for the Mac. This would include, for example, using some information from the currently-active application to prefill the task information. Examples would include using the subject line if an Outlook email is selected or the title of the current web page if a browser is open. Also nice would be to include any selected text automatically in the notes for the task, and maybe a link to the original item.</p>


<p> </p>


<p> </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GTD tip: clean up physical clutter using ziploc bags]]></title>
    <link href="http://zzamboni.github.com/blog/gtd-tip-clean-up-physical-clutter-using-ziplo"/>
    <updated>2010-12-20T17:46:34-06:00</updated>
    <id>http://zzamboni.github.com/blog/gtd-tip-clean-up-physical-clutter-using-ziplo</id>
    <content type="html"><![CDATA[<p>If you are like me, you carry in your backpack, bag or briefcase all sorts of physical stuff, other than documents, papers or magazines. You know the type: phone chargers, USB cables, power adapters, network cables, USB sticks and other small gadgets or accessories. Over time these things accumulate and it becomes harder and harder to find them and to keep them organized. <p></p> I have been using a low-tech tool for organizing these things: ziploc bags. I now carry two large ziploc bags in my backpack, labeled "frequent use" and "infrequent use". The first one has the things that I would most likely need to use every time I sit down to work: my iPhone USB cable, my laptop power adapter, etc. The other one includes all other things that I need every once in a while so I want to have them handy, but I don't need them every day. This includes a USB cable for my camera, a two-to-three prong adapter for when I find myself in old buildings that don't have grounded outlets, a couple of USB sticks, etc. <p></p> I find that this simple tip helps me keep the physical clutter under control, and makes it easy to review things periodically to check if I still need everything I'm carrying around.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GTD Tip: one-key opening of INBOX notebook in OneNote]]></title>
    <link href="http://zzamboni.github.com/blog/gtd-tip-one-key-opening-of-inbox-notebook-in"/>
    <updated>2010-09-05T17:15:13-05:00</updated>
    <id>http://zzamboni.github.com/blog/gtd-tip-one-key-opening-of-inbox-notebook-in</id>
    <content type="html"><![CDATA[<pre><code>  One of the most useful applications I have discovered since I had to switch to Windows as my main OS is OneNote, a really great note-taking application which I use for pretty much every data-storing and note-taking need. I use a OneNote notebook as part of my GTD inbox. Today's very simple tip is how to assign a keystroke for opening my Inbox notebook from anywhere in the system. Here are the steps:&lt;br&gt;&lt;ol&gt;
</code></pre>

<p><li>Download and install <a href="http://www.autohotkey.com/">AutoHotKey</a>, if you don't have it already (it's a really useful free application, well worth exploring).</li> <li>Add the following line to your default AutoHotKey.ahk file (normally in ~/Documents/AutoHotKey.ahk):<br><p>{% gist 566376  %}</p></p>

<br>


<p></li> <li>Re-run AutoHotKey so it re-reads the config file.</li> </ol> Make sure you change the path of the file you want to open, and also the key to which you bind it, if don't like Win-i.<p></p>  Of course, this is useful for one-key opening of any file you want.</p>
]]></content>
  </entry>
  
</feed>
