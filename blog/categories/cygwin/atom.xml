<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cygwin | zzamboni.org]]></title>
  <link href="http://zzamboni.github.com/blog/categories/cygwin/atom.xml" rel="self"/>
  <link href="http://zzamboni.github.com/"/>
  <updated>2014-12-08T23:38:12-08:00</updated>
  <id>http://zzamboni.github.com/</id>
  <author>
    <name><![CDATA[Diego Zamboni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing latex2html under Win7 with cygwin]]></title>
    <link href="http://zzamboni.github.com/blog/installing-latex2html-under-win7-with-cygwin"/>
    <updated>2011-01-19T13:28:00-08:00</updated>
    <id>http://zzamboni.github.com/blog/installing-latex2html-under-win7-with-cygwin</id>
    <content type="html"><![CDATA[<div class="posterous_bookmarklet_entry">
      <blockquote class="posterous_short_quote">I got latex2html to install on the latest cygwin, however to get the
configure to pass I had to alter the configure to recognize cygwin as
a UNIX.</blockquote>

<div class="posterous_quote_citation">via <a href="http://www.mail-archive.com/latex2html@tug.org/msg01458.html">mail-archive.com</a>
</div>
    <p>Using this patch I was able to properly configure and install latex2html under cygwin in Windows 7.</p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making cygwin, Windows and emacs understand the same symlinks]]></title>
    <link href="http://zzamboni.github.com/blog/making-cygwin-windows-and-emacs-understand-th"/>
    <updated>2010-09-28T07:39:00-07:00</updated>
    <id>http://zzamboni.github.com/blog/making-cygwin-windows-and-emacs-understand-th</id>
    <content type="html"><![CDATA[<p>Today I ran into the problem that symlinks created under cygwin using "ln -s" are not understood by Windows, and of course Windows shortcuts are seen by cygwin as regular files. Happily, this is a <strong>(semi-)</strong>solved problem. For reference, this is what needs to be done:</p>


<p></p>


<p></p>

<ol>
<li>Add "<a href="http://www.cygwin.com/cygwin-ug-net/using-effectively.html#using-shortcuts">winsymlinks</a>" to your CYGWIN environment variable. For example, in my .bashrc I have the following:<p></p>  <tt>export CYGWIN="nodosfilewarning winsymlinks"<br></tt><br> This makes cygwin create symlinks differently, in a form that is understood both by it and by Windows.<br> This is the main step, and the only one if you just need access from the shell and from the Windows explorer. However, emacs still sees those symlinks as regular .lnk files. To fix this, follow the next step.<p></p>  </li>
<li>Install the <a href="http://centaur.maths.qmw.ac.uk/emacs/files/w32-symlinks.el">w32-symlinks.el </a>package, and add the following to your .emacs file:<p></p>  <tt>(require 'w32-symlinks)</tt><p></p>  </li>
<li>Run <tt>M-x customize-option</tt> and enter <tt>w32-symlinks-handle-shortcuts </tt>as the variable to customize. Turn it on, save it for future sessions, and you are all set. The new symlinks should be properly understood by the cygwin shell, Windows explorer, and emacs. Of course, you will have to re-create any symlinks or shortcuts that you created prior to setting the winsymlinks option, for them to be created in the new format.<p></p>
<strong>Update: </strong>so this doesn't quite work on my system. I am using Emacs 23.1, and apparently w32-symlinks does not work properly in this version. If you have an older version (I hear Emacs 21 works well), then this might work for you. </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing cfengine on Windows 7 under cygwin]]></title>
    <link href="http://zzamboni.github.com/blog/installing-cfengine-on-windows-7-under-cygwin"/>
    <updated>2010-08-22T22:14:00-07:00</updated>
    <id>http://zzamboni.github.com/blog/installing-cfengine-on-windows-7-under-cygwin</id>
    <content type="html"><![CDATA[<p><strong>Update (2011/09/05): Updated the instructions for cfengine 3.2.0, cygwin 1.7.9, and tested them on a clean cygwin install.</strong></p>


<p>Installing the <a href="http://cfengine.org/">cfengine community edition</a> under Windows (the <a href="http://cfengine.com/nova"> commercial version</a> includes native Windows support) is fairly easy under <a href="http://cygwin.com/"> cygwin</a>, you just need to have the appropriate dependencies installed. Here’s how I did it.</p>


<p><span style="font-size: large;"><strong>Versions  </strong></span></p>


<ul>
<li>cfengine: <a href="https://cfengine.com/source_code">3.2.0</a>
</li>
<li>Windows 7 Enterprise SP1/64bit</li>
<li>cygwin: <a href="http://cygwin.com/">1.7.9-1</a>
</li>
</ul>


<p><span style="font-size: large;"><strong>Additional cygwin packages needed</strong></span> </p>


<p>To install these, run cygwin’s setup.exe, search for each packages in turn, and install them. Make sure you agree to install any additional packages that are listed as dependencies (setup.exe will ask you about it).</p>


<ul>
<li>make</li>
<li>gcc</li>
<li>libdb4.5</li>
<li>libdb4.5-devel</li>
<li>openssl-devel</li>
<li>libpcre-devel</li>
<li>bison (will install m4 as a dependency, say "Yes")</li>
<li>flex</li>
</ul>


<p><span style="font-size: large;"><strong>How to compile and install</strong></span></p>


<ol>
<li>Unpack cfengine-3.2.0.tar.gz: <code>tar zxvf cfengine-3.2.0.tar.gz</code>
</li>
<li><code>cd cfengine-3.2.0</code></li>
<li><code>./configure</code></li>
<li><code>make</code></li>
<li><code>make install</code></li>
</ol>


<p>That should be it. Remember that there is some functionality missing in the community edition under Windows (for example, userexists() does not return correct results). If you want full Windows support (including native features like registry editing, etc.) you have to use the commercial edition of cfengine. But for most purposes, the community edition works just fine.</p>


<p>If you have different experiences, or with different versions of Windows, please let me know! I'll update these instructions as needed.</p>


<p> </p>


<ol></ol>

]]></content>
  </entry>
  
</feed>
