%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: main.dvi
%%Pages: 16
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic Helvetica-Bold
%%+ Courier
%%EndComments
%DVIPSCommandLine: /p/TeX/dvips -o main.ps main.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.02.21:1458
%%BeginProcSet: fix-lj4si-ps-bug.pro
/fixcurrentmatrix {
    statusdict /product known {
        statusdict /product get (HP LaserJet 4Si) eq {
            /version where {
                /version get (2011.110) eq {
                    matrix currentmatrix
                    dup dup 0 get 32768 mul round 32768 div 0 exch put
                    dup dup 3 get 32768 mul round 32768 div 3 exch put
                    systemdict /setmatrix get exec
                } if
            } if
        } if 
    } if
} bind def

/setmatrix {
    systemdict /setmatrix get exec
    fixcurrentmatrix
} bind def
%%EndProcSet
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (main.dvi)
@start /Fa 138[45 45 45 45 1[45 1[45 1[45 2[45 45 2[45
1[45 1[45 13[45 45 23[45 10[45 45 46[{}17 75.000000 /Courier
rf /Fb 78[37 2[37 51[29 33 1[50 33 37 21 29 29 1[37 37
37 54 21 33 21 21 37 37 21 33 37 33 37 37 7[42 46 62
46 54 42 37 46 1[46 1[50 62 42 1[33 25 54 54 46 1[54
50 46 46 7[37 1[37 37 37 1[37 37 37 37 21 19 25 19 4[25
58 38[{}61 75.000000 /Times-Italic rf /Fc 78[37 2[42
51[33 37 1[54 37 37 21 29 25 1[37 37 37 58 21 37 21 21
37 37 25 33 37 33 37 33 3[25 1[25 46 54 1[71 54 54 46
42 50 1[42 54 54 66 46 54 29 25 54 54 42 46 54 50 50
54 6[21 37 37 37 37 37 37 37 37 37 37 1[19 25 19 2[25
25 25 58 38[{}70 75.000000 /Times-Roman rf /Fd 134[60
5[60 4[60 1[60 60 1[60 21[60 83[{}7 100.000000 /Courier
rf /Fe 1 49 df<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A2
5A123EA35AA3127812F8A25A12100D1E7D9F13>48 D E /Ff 1 16
df<EB0FE0EB7FFC497E0003EBFF804814C04814E04814F04814F8A24814FCA3B612FEA8
6C14FCA36C14F8A26C14F06C14E06C14C06C1480C6EBFE006D5AEB0FE01F207BA42A>15
D E /Fg 3 62 df<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D
7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A
5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B4913034848
1400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>50
D<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>
58 D<007FB812F8B912FCA3CCFCAEB912FCA36C17F836167B9F41>61
D E /Fh 134[50 4[50 50 2[50 50 50 1[50 50 1[50 3[50 50
50 50 14[50 83[{}14 83.333336 /Courier rf /Fi 4 122 df<EC3FC0ECFFF89038
07E07C90380F801FD93F00EB800C017E130F49903807C01C4848ECE018485A4848010313
38000FEDF0305B001F16704848156017E0007F16C090C713F1178016F34816004815F716
FE5EA2485D5EA4007E1407150F003E91381DF818003F14796C02E11338270F8007C01330
3B07E03F007CF02601FFF8EB3FC026003FC0EB0F802E267DA435>11
D<ED01FC923807FF8092381E07C092387801E003E013F0913901C000F84A5A4AC7FC020E
14FC5C5C143002701301026014F814E05C010114034A14F0130391C7EA07E017C049140F
0106EC1F809238FFBF00D90E0113FC90390C0381F8EDFFFE0200131F011C010013800118
140F17C0A213380130EC07E0A2160F13701360A301E0141F4915C0A30001153F1780A2EE
7F00120316FE5E6D495AD80760495AD80670495A6D495A6D495AD80E0E49C7FC390C0780
FC903801FFF09038007F80001C90C9FC1218A312381230A312701260A312E05AA22E4B7E
BA2F>I<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F80
3A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123F
A292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C
00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F0
29267EA42F>120 D<13F8D803FE1470D8070F14F8000EEB8001121C1218003814030030
15F0EA701F1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F00011580
5BA2153F000315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB
0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C48
5A381E07C06CB4C8FCEA01FC25367EA429>I E /Fj 81[33 54[44
2[18 26 26 2[33 33 48 18 2[18 33 33 1[29 33 29 33 33
7[37 4[37 33 2[41 1[44 10[44 67[{}23 66.666664 /Times-Italic
rf /Fk 69[29 10[37 37 3[29 47[29 33 1[48 33 33 18 26
22 1[33 33 33 52 18 33 1[18 33 33 22 29 33 29 33 29 7[48
1[63 2[41 37 44 1[37 1[48 2[48 1[22 5[44 1[48 18[17 22
17 2[22 22 40[{}43 66.666664 /Times-Roman rf /Fl 2 51
df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E /Fm 4 52 df<140EB3A2B812E0A3C700
0EC8FCB3A22B2B7DA333>43 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A2
15267BA521>49 D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F
80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0
EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F
01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801
FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00
705B6C5B381F01F03807FFC0C690C7FC19277DA521>I E /Fn 3
122 df<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12
C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11
287DA617>105 D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813
E1123015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF8
7E39F06F03803970C70700383F83FE381F01F81D1B7D9926>120
D<EA03E0486C1370D80C7813F8EA187C0030EB01F0A2126013F800C0EB03E0A2EA01F0A2
EC07C0EA03E0A33907C00F80A4EC1F00A25C00035B3801E0FE3800FFBEEB3F3E13005C12
1E003F5B5C387E01E0383C03C038300780D81C1FC7FCEA0FFCEA07F01D267D9922>I
E /Fo 69[42 11[51 3[42 48[46 1[65 46 51 28 46 32 1[51
51 51 74 23 46 1[23 51 51 28 46 51 46 51 46 12[51 55
60 1[55 65 60 1[51 60 1[23 60 65 51 55 60 60 60 60 6[28
46 46 46 46 46 46 46 46 46 46 1[23 28 23 2[28 28 6[28
33[{}59 83.333336 /Helvetica-Bold rf /Fp 81[46 52[42
42 60 42 46 28 32 37 1[46 42 46 69 23 46 1[23 46 42 1[37
46 37 46 42 7[60 4[55 46 60 1[51 65 60 78 1[65 1[32 65
65 51 55 60 60 1[60 6[28 4[42 42 42 42 42 2[21 28 21
44[{}49 83.333336 /Times-Bold rf /Fq 81[51 51[41 1[46
66 46 51 30 36 41 1[51 46 51 76 25 51 1[25 51 46 30 41
51 41 51 46 12[61 51 66 1[56 71 1[86 3[36 2[56 61 66
66 1[66 9[46 46 46 46 46 46 46 2[23 30 45[{}45 91.666664
/Times-Bold rf /Fr 47[83 21[37 10[46 46 3[37 47[37 42
42 60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42 42
28 37 42 37 42 37 3[28 1[28 1[60 1[78 60 60 51 46 55
1[46 60 60 74 51 60 1[28 60 60 46 51 60 55 55 60 5[23
23 42 42 42 42 42 42 42 42 42 42 23 21 28 21 47 1[28
28 28 39[{}75 83.333336 /Times-Roman rf /Fs 80[42 42
51[32 37 37 55 37 42 23 32 32 42 42 42 42 60 23 37 1[23
42 42 23 37 42 37 42 42 7[46 4[46 42 51 1[51 60 55 4[28
2[51 51 1[55 20[21 28 21 2[28 28 28 39[{}44 83.333336
/Times-Italic rf /Ft 47[100 88[72 50 55 33 39 44 1[55
50 55 83 28 55 1[28 55 50 33 44 55 44 55 50 7[72 4[66
55 72 1[61 1[72 94 3[39 2[61 2[72 66 72 8[50 50 50 50
50 50 50 50 2[25 46[{}43 100.000000 /Times-Bold rf /Fu
2 104 df<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495A
A2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D
7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>
102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E80
6E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2
495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I
E /Fv 78[50 54[44 50 2[50 50 28 39 33 1[50 50 50 78 28
50 1[28 50 50 33 44 50 44 50 44 6[61 2[94 72 72 61 55
2[55 72 72 89 61 72 1[33 72 72 1[61 72 66 1[72 92 6[50
50 50 2[50 50 1[50 50 1[25 1[25 44[{}52 100.000000 /Times-Roman
rf /Fw 134[60 2[60 1[40 47 53 2[60 66 1[33 66 1[33 2[40
53 1[53 1[60 12[80 66 2[73 11[86 86 1[86 65[{}20 119.999947
/Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 708 374 a Fw(Analysis)30 b(of)f(a)h(Denial)h(of)e(Service)i
(Attack)f(on)g(TCP)805 690 y Fv(Christoph)24 b(L.)g(Schuba,)h(Ivan)g(V)
-13 b(.)25 b(Krsul,)f(Markus)h(G.)f(Kuhn,)690 806 y(Eugene)h(H.)f(Spaf)
n(ford,)i(Aurobindo)d(Sundaram,)i(Diego)g(Zamboni)1483
922 y(COAST)h(Laboratory)1193 1039 y(Department)e(of)h(Computer)f
(Sciences)1516 1155 y(Purdue)h(University)1080 1271 y(1398)g
(Department)f(of)h(Computer)f(Sciences)1242 1387 y(W)-8
b(est)25 b(Lafayette,)g(IN)g(47907\2611398)660 1504 y
Fu(f)p Fv(schuba,krsul,kuhn,spaf,sundaram,zamboni)p Fu(g)p
Fv(@cs.purdue.edu)617 1854 y Ft(Abstract)-83 2057 y Fs(This)15
b(paper)e(analyzes)h(a)g(network-based)e(denial)h(of)h(service)h(at-)
-182 2157 y(tack)24 b(for)i(IP)f(\()p Fr(Internet)e(Protocol)p
Fs(\))h(based)g(networks.)41 b(It)26 b(is)g(popu-)-182
2257 y(larly)21 b(called)g Fr(SYN)h(\257ooding)p Fs(.)28
b(It)21 b(works)h(by)f(an)g(attacker)g(sending)-182 2356
y(many)h(TCP)j(\()p Fr(T)m(ransmission)d(Control)g(Protocol)p
Fs(\))g(connection)g(r)m(e-)-182 2456 y(quests)d(with)g(spoofed)f(sour)
m(ce)h(addr)m(esses)g(to)g(a)h(victim')-11 b(s)19 b(machine.)-182
2556 y(Each)31 b(r)m(equest)g(causes)h(the)g(tar)m(geted)f(host)h(to)g
(instantiate)f(data)-182 2655 y(structur)m(es)16 b(out)g(of)g(a)g
(limited)g(pool)f(of)i(r)m(esour)m(ces.)25 b(Once)16
b(the)g(tar)m(get)-182 2755 y(host')-11 b(s)17 b(r)m(esour)m(ces)h(ar)m
(e)g(exhausted,)e(no)h(mor)m(e)g(incoming)g(TCP)h(con-)-182
2854 y(nections)g(can)g(be)h(established,)e(thus)i(denying)e(further)i
(legitimate)-182 2954 y(access.)-83 3058 y(The)36 b(paper)e
(contributes)h(a)g(detailed)f(analysis)h(of)h(the)f(SYN)-182
3158 y(\257ooding)25 b(attack)j(and)f(a)h(discussion)f(of)i(existing)e
(and)g(pr)m(oposed)-182 3257 y(countermeasur)m(es.)46
b(Furthermor)m(e,)28 b(we)g(intr)m(oduce)e(a)h(new)g(solu-)-182
3357 y(tion)g(appr)m(oach,)f(explain)g(its)i(design,)g(and)f(evaluate)f
(its)i(perfor)n(-)-182 3456 y(mance.)33 b(Our)23 b(appr)m(oach)d
(offers)j(pr)m(otection)f(against)f(SYN)j(\257ood-)-182
3556 y(ing)e(for)h(all)f(hosts)h(connected)e(to)i(the)f(same)h(local)f
(ar)m(ea)g(network,)-182 3656 y(independent)g(of)j(their)h(operating)d
(system)j(or)g(networking)e(stack)-182 3755 y(implementation.)39
b(It)25 b(is)h(highly)e(portable,)h(con\256gurable,)f(exten-)-182
3855 y(sible,)e(and)f(r)m(equir)m(es)i(neither)e(special)h(har)m(dwar)m
(e,)g(nor)g(modi\256ca-)-182 3955 y(tions)e(in)g(r)m(outers)h(or)f(pr)m
(otected)g(end)f(systems.)-182 4299 y Ft(1)o(.)25 b(Intr)n(oduction)-83
4528 y Fr(Since)34 b(September)f(1996,)j(several)e(dozen)f(sites)i(on)e
(the)i(In-)-182 4628 y(ternet)g(have)g(been)f(subjected)h(to)h(a)g
(denial)f(of)g(service)g(attack,)-182 4727 y(popularly)26
b(called)j Fs(SYN)g(Flooding)e Fr([4)o(,)i(5,)g(20)o(].)52
b(The)29 b(attack)f(ex-)-182 4827 y(ploits)14 b(weaknesses)h(in)g(the)f
(TCP/IP)i(\()p Fs(T)-5 b(ransmission)15 b(Contr)m(ol)f(Pr)m(o-)-182
4926 y(tocol)p Fr(/)p Fs(Internet)20 b(Pr)m(otocol)p
Fr(\))h(protocol)f(suite.)32 b(This)23 b(cannot)d(be)i(cor)n(-)-182
5026 y(rected)39 b(without)g(signi\256cant)g(modi\256cations)f(to)i
(its)h(protocols.)-182 5126 y(These)25 b(denial)h(of)g(service)g
(attacks)g(can)g(be)g(launched)e(with)i(little)-182 5225
y(ef)o(fort.)34 b(Presently)-5 b(,)23 b(it)h(is)g(dif)o(\256cult)e(to)i
(trace)f(an)g(attack)g(back)g(to)g(its)-182 5325 y(originator)-5
b(.)2073 1854 y(Several)26 b(possible)g(solutions)g(to)g(this)g(attack)
g(have)g(been)f(pro-)1974 1954 y(posed)h(by)h(others,)i(and)d(some)i
(implemented.)46 b(W)-7 b(e)28 b(have)f(devel-)1974 2053
y(oped)22 b(an)h Fs(active)f(monitoring)g Fr(tool)h(that)g
(classi\256es)h(IP)f(source)g(ad-)1974 2153 y(dresses)h(with)g(high)f
(probability)f(as)j(being)d(falsi\256ed)i(or)g(genuine.)1974
2252 y(Our)18 b(approach)f(\256nds)h(connection)f(establishment)g
(protocol)g(mes-)1974 2352 y(sages)26 b(that)f(are)g(coming)f(from)g
(for)o(ged)f(IP)j(addresses,)g(and)f(takes)1974 2452
y(actions)33 b(to)h(ensure)f(that)h(the)f(resulting)g(illegitimate)g
(half-open)1974 2551 y(connections)18 b(are)i(reset)h(immediately)-5
b(.)2073 2652 y(This)25 b(paper)f(is)h(or)o(ganized)e(as)i(follows.)40
b(Section)24 b(2)h(describes)1974 2752 y(background)10
b(material,)k(such)f(as)h(the)f(IP)h(and)f(TCP)h(protocols.)23
b(Sec-)1974 2851 y(tion)16 b(3)g(explains)f(the)h(SYN)g(\257ooding)f
(attack.)25 b(Section)16 b(4)g(discusses)1974 2951 y(existing)26
b(approaches)e(to)j(solve)g(this)g(problem,)f(such)g(as)h(con\256g-)
1974 3051 y(uration)d(improvements)e(and)j(\256rewall-based)f
(approaches.)40 b(The)1974 3150 y(technical)18 b(details)h(of)f(our)g
(approach)e(are)j(described)e(in)i(Section)f(5,)1974
3250 y(followed)28 b(by)h(a)h(performance)c(evaluation)i(in)i(Section)f
(6.)54 b(Sec-)1974 3350 y(tions)19 b(7)g(and)g(8)g(outline)g(future)f
(work)g(issues)i(and)f(present)g(conclu-)1974 3449 y(sions.)1974
3686 y Ft(2.)24 b(Backgr)n(ound)2073 3906 y Fr(W)-7 b(e)22
b(will)f(provide)e(a)i(brief)f(description)f(of)h(the)h(features)f(of)g
(the)1974 4005 y(TCP/IP)j(protocol)d(suite)i(that)g(facilitate)g(this)h
(attack.)32 b(For)22 b(further)1974 4105 y(details)e(see)h([2)o(,)g(16)
o(,)f(17)o(].)1974 4316 y Fq(2.1)o(.)j(Inter)o(net)e(Pr)n(otocol)2073
4528 y Fr(The)50 b Fs(Internet)f(Pr)m(otocol)f Fr(\(IP\))h(is)i(the)e
(standard)g(network)1974 4628 y(layer)31 b(protocol)e(of)j(the)f
(Internet)f(that)i(provides)e(an)h(unreliable,)1974 4727
y(connection-less,)23 b(best-ef)o(fort)e(packet)j(delivery)e(service.)
38 b(IP)25 b(de-)1974 4827 y(\256nes)j(the)f(basic)h(unit)f(of)h(data)f
(transfer)g(used)g(throughout)d(an)k(IP)1974 4926 y(network,)23
b(called)h(a)g Fs(datagram)p Fr(.)37 b(The)24 b(service)f(is)i
Fs(unr)m(eliable)p Fr(,)f(be-)1974 5026 y(cause)30 b(the)g(delivery)e
(of)i(datagrams)e(is)j(not)f(guaranteed.)53 b(Data-)1974
5126 y(grams)21 b(may)h(be)g(lost,)h(duplicated,)d(delayed,)h(or)h
(delivered)f(out)g(of)1974 5225 y(order)-5 b(.)33 b(IP)23
b(is)h Fs(connection-less)p Fr(,)d(because)h(each)g(packet)g(is)i
(treated)1974 5325 y(independently)h(of)i(others)h(\320)g(each)f(may)h
(travel)f(over)g(dif)o(ferent)p eop
%%Page: 2 2
2 1 bop -182 83 a Fr(paths)24 b(and)g(some)g(may)g(be)g(lost)h(while)f
(others)g(are)h(delivered.)38 b(IP)-182 183 y(provides)27
b Fs(best-effort)i Fr(delivery)-5 b(,)30 b(because)e(packets)h(are)g
(not)g(dis-)-182 282 y(carded)i(unless)j(resources)e(are)h(exhausted)e
(or)i(underlying)d(net-)-182 382 y(works)20 b(fail.)30
b(Datagrams)21 b(are)g(routed)f(towards)g(their)h(destination.)-182
482 y(A)j(set)h(of)f(rules)g(characterize)e(how)i(hosts)g(and)f
(gateways)h(should)-182 581 y(process)j(packets,)j(how)e(and)g(when)f
(error)g(messages)i(should)e(be)-182 681 y(generated,)18
b(and)h(when)h(packets)g(should)f(be)h(discarded.)-182
883 y Fq(2.2)o(.)i(T)-7 b(ransmission)21 b(Contr)n(ol)i(Pr)n(otocol)-83
1086 y Fr(T)-6 b(o)25 b(ensure)e(reliable)h(communications)e(for)i
(applications)f(and)-182 1186 y(services)d(that)g(need)g(them,)g(the)g
Fs(T)-5 b(ransmission)21 b(Contr)m(ol)f(Pr)m(otocol)-182
1285 y Fr(\(TCP\))26 b(is)i(available.)46 b(It)26 b(resides)h(between)f
(IP)h(and)f(the)h(applica-)-182 1385 y(tion)13 b(layer)-5
b(.)24 b(TCP)14 b(provides)e(a)i(reliable,)g(connection-oriented)9
b(data)-182 1485 y(stream)20 b(delivery)g(service.)29
b(As)21 b(long)g(as)g(there)g(is)h(link)e(layer)h(com-)-182
1584 y(munication)33 b(between)h(two)h(communicating)d(endpoints,)37
b(TCP)-182 1684 y(guarantees)13 b(that)h(datagrams)f(will)i(be)g
(delivered)d(in)j(order)m(,)f(without)-182 1783 y(errors,)g(and)f
(without)g(duplication.)23 b(It)15 b(provides)d(these)i(services)g(by)
-182 1883 y(using)k(\257ow)i(control)e(mechanisms,)g(such)h(as)h(the)f
(sliding)g(window)-182 1983 y(protocol,)f(and)h(adaptive)g
(retransmission)h(techniques.)-182 2201 y Fp(2.2.1)81
b(Thr)o(ee-way)19 b(Handshake)-23 3111 y @beginspecial
9 @llx 694 @lly 207 @urx 783 @ury 1980 @rwi @setspecial
%%BeginDocument: topology.epsi
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		}{}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 612 792 0 1 2 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 765 M
 48.9 778.55 38.55 763.93 37.71 758.5 D
 37.69 758.38 30.43 750.03 33.31 743.5 D
 38.2 732.42 41.05 724.86 54.5 724.02 D
 75.65 722.7 57.33 760.69 76 745.35 D
 83.79 738.94 88.9 761.41 86.5 763.21 D
 75.6 771.39 65.74 758.58 54.5 764 D
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 12 Q
(A) 13.5 770.5 T
9 765 27 783 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(S) 13.5 725.5 T
0 9.6 Q
(1) 20.17 722.5 T
9 720 27 738 R
N
0 12 Q
(D) 166.5 752.5 T
162 747 180 765 R
N
(G) 94.5 752.5 T
90 747 108 765 R
N
(M) 130.5 752.5 T
126 747 144 765 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 774 36 756 2 L
N
27 729 35.5 738.75 2 L
N
90 756 86.25 756 2 L
N
(A - attack) 63 720.8 T
(er) 110.2 720.8 T
(S) 63 708.8 T
0 9.6 Q
(i) 69.67 705.8 T
0 12 Q
( - source) 72.34 708.8 T
(D - destination) 63 696.8 T
(M - monitor) 144 707.6 T
(G - g) 144 695.6 T
(ate) 168.6 695.6 T
(w) 182.29 695.6 T
(ay) 190.84 695.6 T
90 738 207 738 2 L
N
(S) 193.5 752.5 T
0 9.6 Q
(2) 200.17 749.5 T
189 747 207 765 R
N
198 747 198 738 2 L
N
171 747 171 738 2 L
N
135 747 135 738 2 L
N
99 747 99 738 2 L
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 106 3376 a Fo(Figure)k(1.)g(Generic)h(netw)n(ork)e
(topology)-83 3571 y Fr(Before)f(data)g(can)g(be)g(transmitted)f
(between)g(a)i(source)e(host)i(S)1759 3583 y Fn(i)-182
3671 y Fr(and)g(a)h(destination)e(host)i(D,)g(TCP)h(needs)e(to)h
(establish)f(a)i(connec-)-182 3770 y(tion)h(between)g(S)322
3782 y Fn(i)376 3770 y Fr(and)g(D)h(\(see)f(Figure)g(1\).)43
b(The)25 b(connection)f(es-)-182 3870 y(tablishment)d(process)h(is)h
(called)f(the)g Fs(thr)m(ee-way)g(handshake)e Fr(\(see)-182
3970 y(Figure)c(2\).)25 b(The)17 b(\256rst)g(step)h(in)f(the)f(process)
h(is)h(a)f(SYN)1373 3939 y Fm(1)1428 3970 y Fr(packet)f(that)-182
4069 y(is)j(sent)g(from)e(S)271 4081 y Fn(i)317 4069
y Fr(to)i(D.)g(The)f(second)f(message,)h(from)g(D)g(to)h(S)1608
4081 y Fn(i)1636 4069 y Fr(,)g(has)-182 4169 y(both)e(the)g(SYN)i(and)e
(ACK)i(\257ags)f(set)h(indicating)d(that)i(D)g(acknowl-)-182
4268 y(edges)k(the)h(SYN)g(and)g(is)h(continuing)c(the)j(handshake.)33
b(The)23 b(third)-182 4368 y(message,)c(from)f(S)367
4380 y Fn(i)414 4368 y Fr(to)i(D)g(has)f(its)h(ACK)g(bit)g(set,)g(and)e
(is)j(an)e(indica-)-182 4468 y(tion)d(to)g(D)h(that)f(both)g(hosts)g
(agree)g(that)g(a)h(connection)d(has)j(been)f(es-)-182
4567 y(tablished.)24 b(The)14 b(third)h(message)f(may)h(contain)e(user)
i(payload)e(data.)-83 4667 y(The)32 b(three-way)e(handshake)g(also)j
(initializes)f(the)g(sequence)-182 4767 y(numbers)17
b(for)i(a)g(new)g(connection)e(between)i(S)1181 4779
y Fn(i)1228 4767 y Fr(and)g(D.)g(Sequence)-182 4866 y(numbers)h(are)i
(needed)f(by)g(the)h(TCP)h(protocol)d(to)i(enable)f(reliable)p
-182 4932 788 4 v -97 4986 a Fl(1)-63 5010 y Fk(TCP)h(packet)j(types)f
(are)f(distinguished)j(by)d(\257ag)g(bits)h(\(e.g.,)f(SYNchronize,)-182
5088 y(ACKnowledgment,)15 b(ReSeT\))d(set)h(in)f(the)h(TCP)f(header)h
(code)h(\256eld.)21 b(In)12 b(the)h(remain-)-182 5167
y(der)j(of)g(the)g(paper)i(we)d(will)i(abbreviate)i(TCP)d(control)h
(packets)h(by)e(referring)i(to)e(the)-182 5246 y(\257ags)e(set)h(in)f
(their)i(code)f(\256eld,)g(e.g.,)f Fj(SYN)g Fk(instead)j(of)d
Fj(TCP)f(contr)n(ol)j(datagram)f(with)-182 5325 y(the)i(SYN)g(bit)h
(set)g(in)f(its)g(code)h(\256eld)p Fk(.)2033 1175 y @beginspecial
0 @llx 0 @lly 222 @urx 131 @ury 2220 @rwi @setspecial
%%BeginDocument: three-way-handshake.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 151.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 150 600 m 150 600 l gs col-1 s gr
% Polyline
gs  clippath
2857 1154 m 2973 1197 l 2851 1214 l 3012 1231 l 3018 1172 l  cp clip
n 300 900 m 3000 1200 l gs col-1 s gr gr

% arrowhead
n 2857 1154 m 2973 1197 l 2851 1214 l  col-1 s
% Polyline
gs  clippath
449 1739 m 326 1722 l 443 1679 l 282 1697 l 288 1756 l  cp clip
n 3000 1425 m 300 1725 l gs col-1 s gr gr

% arrowhead
n 449 1739 m 326 1722 l 443 1679 l  col-1 s
% Polyline
gs  clippath
2856 2212 m 2972 2255 l 2850 2272 l 3011 2289 l 3017 2230 l  cp clip
n 299 1958 m 2999 2258 l gs col-1 s gr gr

% arrowhead
n 2856 2212 m 2972 2255 l 2850 2272 l  col-1 s
% Polyline
n 3000 600 m 3000 2500 l gs col-1 s gr 
% Polyline
n 300 600 m 300 2500 l gs col-1 s gr 
/Times-Roman ff 120.00 scf sf
3075 825 m
gs 1 -1 sc (LISTEN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 900 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 1950 m
gs 1 -1 sc (ACK) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1125 975 m
gs 1 -1 sc (x) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1125 1500 m
gs 1 -1 sc (y) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1650 1500 m
gs 1 -1 sc (x+1) col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 1425 m
gs 1 -1 sc (SYN  , ACK) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 1560 m
gs 1 -1 sc (SYN_RECVD) col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 450 m
gs 1 -1 sc (S) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3075 450 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 2280 m
gs 1 -1 sc (CONNECTED) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1125 2025 m
gs 1 -1 sc (y+1) col-1 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 2336 1440 a Fo(Figure)23 b(2.)g(Three-wa)n(y)g(Handshake)
1974 1716 y Fr(packet)i(delivery)f(and)h(retransmission.)42
b(S)3256 1728 y Fn(i)3310 1716 y Fr(sends)26 b(an)g(initial)g(se-)1974
1816 y(quence)j(number)g Fi(x)i Fr(with)g(the)f(\256rst)h(datagram:)46
b(SYN)3620 1828 y Fn(x)3662 1816 y Fr(.)58 b(In)30 b(the)1974
1915 y(second)j(message)g(D)h(acknowledges)e(the)h(\256rst)i(datagram)d
(with)1974 2015 y(ACK)2149 2027 y Fn(x)p Fm(+1)2297 2015
y Fr(and)21 b(sends)h(its)g(own)f(sequence)g(number)e
Fi(y)s Fr(:)30 b(SYN)3776 2027 y Fn(y)3816 2015 y Fr(.)i(S)3915
2027 y Fn(i)1974 2114 y Fr(acknowledges)20 b(D')-5 b(s)24
b(packet)d(in)i(the)f(\256nal)h(message)f(of)h(the)f(three-)1974
2214 y(way)e(handshake:)25 b(ACK)2709 2226 y Fn(y)r Fm(+1)2833
2214 y Fr(.)1974 2458 y Fp(2.2.2)81 b(TCP)21 b(Data)e(Structur)o(es)
1974 2622 y Fr(For)29 b(any)f(TCP)i(connection,)f(under)f(BSD)i(style)f
(network)f(code,)1974 2721 y(there)39 b(are)g(three)g(memory)f
(structures)g(that)i(need)f(to)g(be)g(allo-)1974 2821
y(cated)h(by)g(both)g(endpoints)f(\(See)h([19)o(]\).)87
b(The)40 b(socket)h(struc-)1974 2921 y(ture)29 b(\()p
Fh(socket)p Fr(\))f(holds)h(information)e(related)i(to)h(the)f(local)h
(end)1974 3020 y(of)g(the)h(communication)c(link:)48
b(protocol)28 b(used,)33 b(state)e(informa-)1974 3120
y(tion,)41 b(addressing)36 b(information,)j(connection)c(queues,)40
b(buf)o(fers)1974 3219 y(and)34 b(\257ags.)72 b(TCP)35
b(uses)h(the)f(Internet)e(protocol)g(control)h(block)1974
3319 y(structure)17 b(\()p Fh(inpcb)p Fr(\))f(at)j(the)f(transport)e
(layer)i(to)g(hold)f(information)1974 3419 y(such)i(as)h(TCP)h(state)f
(information,)d(IP)j(address)f(information,)e(port)1974
3518 y(numbers,)k(IP)i(header)e(prototype)f(and)i(options,)f(and)h(a)h
(pointer)e(to)1974 3618 y(the)e(routing)e(table)h(entry)g(for)h(the)f
(destination)g(address.)26 b(The)18 b(TCP)1974 3718 y(Control)i(Block)g
(structure)f(\()p Fh(tcpcb)p Fr(\))h(contains)f(TCP)j(speci\256c)e(in-)
1974 3817 y(formation)j(such)i(as)h(timer)f(information,)f(sequence)g
(number)f(in-)1974 3917 y(formation,)28 b(\257ow)g(control)f(status,)k
(and)c(out-of-band)e(data.)51 b(The)1974 4016 y(combined)15
b(size)j(of)f(these)h(data)f(structures)g(for)g(a)h(single)f(TCP)h
(con-)1974 4116 y(nection)h(may)h(typically)f(exceed)g(280)h(bytes.)
2073 4220 y(Dif)o(ferent)27 b(versions)g(of)g(Unix)g(use)h(dif)o
(ferent)e(data)i(structures)1974 4320 y(and)15 b(schemes)g(of)f
(allocation,)h(but)g(for)g(the)g(purpose)f(of)h(this)g(discus-)1974
4419 y(sion,)h(it)g(is)h(suf)o(\256cient)e(to)g(understand)f(that)h
(every)g(TCP)h(connection)1974 4519 y(establishment)23
b(requires)g(an)h(allocation)f(of)g(signi\256cant)h(memory)1974
4618 y(resources.)1974 4863 y Fp(2.2.3)81 b(TCP)21 b(Connection)e
(Establishment)1974 5026 y Fr(When)h(a)h(SYN)g(arrives)f(at)g(a)h(port)
f(on)g(which)g(a)g(TCP)h(server)f(is)i(lis-)1974 5126
y(tening,)30 b(the)f(above-mentioned)c(data)k(structures)f(are)h
(allocated.)1974 5225 y(There)23 b(is)j(a)e(limit)h(on)f(the)g(number)f
(of)h(concurrent)e(TCP)j(connec-)1974 5325 y(tions)e(that)f(can)h(be)f
(in)h(a)g(half-open)d(connection)h(state,)j(called)e(the)p
eop
%%Page: 3 3
3 2 bop -182 3 1778 4 v -184 103 4 100 v -133 73 a Fr(Operating)19
b(System)p 554 103 V 141 w(Backlog)p 931 103 V 98 w(Backlog)h(+)g
(Grace)p 1594 103 V -182 106 1778 4 v -184 206 4 100
v -133 176 a(FreeBSD)h(2.1.5)p 554 206 V 398 w(n.a.)p
931 206 V 537 w(128)p 1594 206 V -184 306 V -133 276
a(Linux)f(1.2.x)p 554 306 V 545 w(10)p 931 306 V 578
w(10)p 1594 306 V -184 405 V -133 375 a(Solaris)h(2.4)p
554 405 V 617 w(5)p 931 405 V 543 w(n.a.)p 1594 405 V
-184 505 V -133 475 a(Solaris)g(2.5.1)p 554 505 V 513
w(32)p 931 505 V 542 w(n.a.)p 1594 505 V -184 604 V -133
575 a(SunOS)f(4.x)p 554 604 V 613 w(5)p 931 604 V 621
w(8)p 1594 604 V -184 704 V -133 674 a(W)m(indows)g(NT)-6
b(s)21 b(3.51)p 554 704 V 333 w(6)p 931 704 V 621 w(6)p
1594 704 V -184 804 V -133 774 a(W)m(indows)f(NT)-6 b(w)21
b(4.0)p 554 804 V 347 w(6)p 931 804 V 621 w(6)p 1594
804 V -182 807 1778 4 v -83 959 a Fo(T)-7 b(ab)o(le)39
b(1.)g(Bac)n(klogs)f(f)n(or)h(some)f(Operating)f(Sys-)-83
1058 y(tems)-182 1391 y Fr(SYN)p -11 1391 25 4 v 30 w(RECVD)14
b(state)h(\(i.e.,)g(SYN)f(received)f(\320)i(see)f(Appendix)e(A\).)-182
1491 y(Not)24 b(enforcing)d(this)k(limit)f(would)f(lead)h(to)g(a)h(dif)
o(ferent)d(denial)h(of)-182 1591 y(service)i(attack:)39
b(an)26 b(attacker)g(could)f(request)g(so)h(many)g(connec-)-182
1690 y(tions)k(that)h(the)g(tar)o(get)f(machine')-5 b(s)30
b(memory)f(is)i(completely)e(ex-)-182 1790 y(hausted)14
b(by)h(allocating)g(data)g(structures)g(for)g(half-open)e(TCP)k(con-)
-182 1889 y(nections.)25 b(When)16 b(the)h(maximum)e(number)g(of)i
(half-open)e(connec-)-182 1989 y(tions)k(per)g(port)g(is)i(reached)d
(\(see)i(T)-6 b(able)20 b(1,)f([6)o(]\),)h(TCP)g(discards)f(all)-182
2089 y(new)e(incoming)e(connection)g(requests)i(until)g(it)h(has)g
(either)f(cleared)-182 2188 y(or)27 b(completed)g(some)h(of)g(the)g
(half-open)e(connections.)48 b(Overall)-182 2288 y(system)26
b(resources)f(are)h(usually)g(suf)o(\256cient)f(for)g(several)h(ports)g
(to)-182 2388 y(be)20 b(\257ooded.)-83 2487 y(The)31
b(TCP)g(connection)d(establishment)i(process)g(can)h(be)f(de-)-182
2587 y(scribed)19 b(as)i(a)g(state)g(machine.)27 b(Detailed)20
b(below)g(is)h(what)f(happens)-182 2686 y(from)f(the)h(point)f(of)h
(view)g(of)g(the)h(destination)e(machine)g(\(server\):)-79
2869 y(1.)41 b(A)21 b(packet)f(arrives)h(at)g(the)g(destination)e
(machine)h(when)g(the)25 2968 y(TCP)h(state)g(machine)e(is)i(in)g(the)f
(LISTEN)f(state.)-79 3134 y(2.)41 b(If)18 b(the)f(datagram)f(checksum)g
(is)i(incorrect,)f(the)g(packet)g(will)25 3234 y(be)23
b(discarded,)e(and)i(the)f(client)h(is)h(expected)d(to)i(retransmit)25
3333 y(it.)-79 3499 y(3.)41 b(The)297 b Fh(tcpcb)g Fr(associated)h
(with)25 3599 y(the)24 b(connection)e(is)i(searched)f(for)-5
b(.)37 b(If)24 b(it)g(is)h(not)e(found,)g(the)25 3698
y(server)j(will)g(discard)g(the)g(packet)f(and)h(will)g(send)g(an)g
(RST)25 3798 y(\(i.e.,)21 b(inform)e(the)i(client)g(that)g(it)h(reset)f
(the)g(connection\).)27 b(If)25 3898 y(the)18 b Fh(tcpcb)f
Fr(exists,)h(but)g(the)f(TCP)h(state)h(machine)d(is)j(not)e(in)25
3997 y(the)23 b(LISTEN)g(state,)h(the)f(server)f(will)i(discard)e(the)h
(packet,)25 4097 y(but)18 b(will)g(not)f(send)h(an)g(RST)g(\(this)g
(would,)f(for)g(example,)g(be)25 4196 y(the)f(case)g(when)g(the)g
(server)f(is)i(just)f(coming)f(up,)h(but)f(has)h(not)25
4296 y(yet)k(started)g(listening\).)-79 4462 y(4.)41
b(If)27 b(the)g(SYN)h(packet)e(arrives)h(for)f(a)i(socket)e(that)i(is)g
(in)f(the)25 4561 y(LISTEN)j(state,)k(the)d(above)f(mentioned)f(data)i
(structures)25 4661 y(will)23 b(be)f(allocated.)32 b(However)m(,)21
b(the)h(server)f(will)i(also)g(set)f(a)25 4761 y(\257ag)g(indicating)d
(that)j(it)g(will)g(destroy)e(the)h(connection)e(and)25
4860 y(associated)c(memory)e(structures)h(if)h(it)h(encounters)d(an)i
(error)-5 b(.)25 4960 y(If)26 b(the)f(backlog)f(queue)h(is)h(full,)h
(the)f(server)f(will)h(consider)25 5060 y(this)21 b(an)f(error)f(and)h
(will)h(terminate)e(the)h(connection.)-79 5225 y(5.)41
b(The)21 b(packet)e(will)j(be)f(ignored)d(if)j(it)h(contains)e(an)g
(RST)-6 b(.)22 b(If)e(it)25 5325 y(contains)14 b(an)h(ACK,)g(it)h(will)
g(be)e(discarded)g(and)g(an)h(RST)h(sent)2181 83 y(to)23
b(the)g(other)f(side.)35 b(The)23 b(packet)f(will)i(be)e(discarded)g
(if)h(the)2181 183 y(SYN)18 b(bit)f(is)h(not)f(set.)26
b(Otherwise,)17 b(the)g(server)g(copies)f(infor)n(-)2181
282 y(mation,)21 b(such)h(as)g(the)g(client')-5 b(s)22
b(address)f(information,)e(into)2181 382 y(a)h(buf)o(fer)m(,)c
(connects)i(its)i Fh(tcpcb)e Fr(to)h(the)g(client,)g(and)f(initial-)
2181 482 y(izes)j(its)g(initial)g(send)f(sequence)f(\(ISS\))h(number)e
Fi(y)s Fr(.)2078 642 y(6.)40 b(The)f(server)g(now)g(sends)g(the)g
(second)f(message)h(of)g(the)2181 741 y(three-way)e(handshake)f(\(SYN)
3135 753 y Fn(x)p Fm(+1)3299 741 y Fr(and)h(ACK)3632
753 y Fn(y)3672 741 y Fr(\))h(to)g(the)2181 841 y(client.)56
b(The)29 b(state)h(changes)f(to)h(SYN)p 3348 841 V 30
w(RECVD.)g(A)g(con-)2181 941 y(nection)i(establishment)g(timer)h(is)h
(started)f(for)f(this)i(half-)2181 1040 y(open)40 b(connection.)85
b(The)40 b(connection)e(remains)i(in)g(the)2181 1140
y(SYN)p 2352 1140 V 30 w(RECVD)d(state)f(until)f(either)g(an)g(ACK)h
(\(the)f(third)2181 1240 y(message)f(of)f(the)g(handshake\))e(is)k
(received)d(or)h(until)g(the)2181 1339 y(timer)19 b(expires.)26
b(This)19 b(timer)g(is)h(usually)e(set)i(to)f(75)g(seconds.)2181
1439 y(During)g(this)h(period)e(of)h(time)h(retransmissions)f(of)g(the)
g(\256rst)2181 1538 y(and)f(second)g(message)g(of)h(the)f(three-way)f
(handshake)g(may)2181 1638 y(occur)-5 b(.)26 b(When)19
b(the)f(timer)h(expires,)f(all)h(memory)e(structures)2181
1738 y(associated)30 b(with)h(the)f(connection)e(are)i(deallocated,)h
(and)2181 1837 y(the)21 b(server)e(goes)h(back)g(to)g(the)g(LISTEN)g
(state.)1974 2064 y Ft(3.)k(The)i(SYN)g(Flooding)e(Attack)1974
2274 y Fq(3.1)o(.)f(The)f(Attack)2073 2476 y Fr(As)c(mentioned)d
(above,)h(TCP)i(implementations)d(are)h(designed)1974
2575 y(with)23 b(a)h(small)g(limit)g(on)f(how)g(many)g(half-open)e
(connections)h(per)1974 2675 y(port)16 b(are)i(possible)f(at)g(any)g
(given)f(time.)26 b(An)18 b(attacker)e(A)i(initiates)g(a)1974
2775 y(SYN)24 b(\257ooding)d(attack)i(by)g(sending)e(many)i(connection)
e(requests)1974 2874 y(with)14 b(spoofed)e(source)i(addresses)f(to)i
(the)f(victim)f(machine)g(D.)h(That)1974 2974 y(causes)20
b(D)g(to)g(allocate)g(resources)f(as)i(explained)d(in)i(Section)g
(2.2.3)1974 3073 y(and,)25 b(once)f(the)h(limit)g(of)g(half-open)d
(connections)h(is)j(reached,)e(to)1974 3173 y(refuse)f(all)i
(successive)f(connection)e(establishment)h(attempts)h(\320)1974
3273 y(in)d(particular)f(legitimate)g(attempts)h(\(see)g(Figure)f(3\).)
29 b(It)21 b(is)h(impor)n(-)1974 3372 y(tant)28 b(to)g(note)g(that)g
(neither)g(outgoing)e(connection)g(attempts)i(nor)1974
3472 y(connections)18 b(that)i(are)f(already)g(established)g(are)h(af)o
(fected)e(by)i(this)1974 3572 y(attack.)1987 4749 y @beginspecial
0 @llx 0 @lly 233 @urx 120 @ury 2330 @rwi @setspecial
%%BeginDocument: attack-scenario.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-13.0 145.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawSplineSection {
	/y3 exch def
	/x3 exch def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/xa x1 x2 x1 sub 0.666667 mul add def
	/ya y1 y2 y1 sub 0.666667 mul add def
	/xb x3 x2 x3 sub 0.666667 mul add def
	/yb y3 y2 y3 sub 0.666667 mul add def
	x1 y1 lineto
	xa ya xb yb x3 y3 curveto
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 300 600 m 300 2400 l gs col-1 s gr 
% Polyline
gs  clippath
3162 1442 m 3273 1494 l 3150 1501 l 3309 1532 l 3321 1474 l  cp clip
n 300 900 m 3300 1500 l gs col-1 s gr gr

% arrowhead
n 3162 1442 m 3273 1494 l 3150 1501 l  col-1 s
% Polyline
n 3300 600 m 3300 2400 l gs col-1 s gr 
% Polyline
gs  clippath
1188 2262 m 1064 2254 l 1177 2203 l 1018 2233 l 1029 2292 l  cp clip
n 3291 1824 m 1038 2260 l gs col-1 s gr gr

% arrowhead
n 1188 2262 m 1064 2254 l 1177 2203 l  col-1 s
% Polyline
gs  clippath
3165 1953 m 3276 2005 l 3153 2012 l 3312 2043 l 3324 1985 l  cp clip
n 303 1411 m 3303 2011 l gs col-1 s gr gr

% arrowhead
n 3165 1953 m 3276 2005 l 3153 2012 l  col-1 s
% Open spline
gs n 1050.0 2250.0 m 1087.5 2287.5 l
	1087.5 2287.5 1125.0 2325.0 1087.5 2325.0 DrawSplineSection
	1087.5 2325.0 1050.0 2325.0 1087.5 2362.5 DrawSplineSection
	1087.5 2362.5 1125.0 2400.0 1087.5 2400.0 DrawSplineSection
	1050.0 2400.0 l  gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (A) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 2325 m
gs 1 -1 sc (Port flooding occurs) col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 975 m
gs 1 -1 sc (Nonexistent spoofed SYN) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3375 1500 m
gs 1 -1 sc (SYN_RECVD) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3375 750 m
gs 1 -1 sc (LISTEN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 2100 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 2332 5015 a Fo(Figure)i(3.)i(A)f(system)g(under)g(attac)n
(k)2073 5225 y Fr(This)34 b(condition)d(exists)i(until)g(either)g(the)g
(timer)f(expires,)j(or)1974 5325 y(some)26 b(connections)f(are)i
(completed)e(or)h(reset.)47 b(If)26 b(the)h(timer)g(ex-)p
eop
%%Page: 4 4
4 3 bop -182 83 a Fr(pires)20 b(for)g(a)h(particular)f(half-open)e
(connection,)g(the)j(host)g(will)g(re-)-182 183 y(set)g(the)f
(connection)e(and)h(release)i(all)f(resources)g(allocated)f(for)h(it.)
-83 290 y(If)e(a)g(spoofed)e(SYN)i(packet)f(contains)g(the)g(source)g
(address)g(of)g(a)-182 390 y(reachable)j(IP)h(host)g(S)459
402 y Fn(i)487 390 y Fr(,)h(that)f(host)h(will)g(receive)e(the)i
(second)e(mes-)-182 489 y(sage)27 b(of)g(the)g(three-way)f(handshake)g
(generated)f(by)i(D.)h(Not)f(ex-)-182 589 y(pecting)g(a)i(SYN+ACK)g
(without)e(having)g(requested)g(a)i(connec-)-182 688
y(tion,)15 b(S)30 700 y Fn(i)73 688 y Fr(will)h(send)e(a)i(RST)f
(packet)f(to)h(D,)g(and)f(consequently)f(cause)-182 788
y(D)19 b(to)f(reset)h(the)g(connection.)24 b(It)19 b(is)g(therefore)e
(in)i(the)f(interest)h(of)f(an)-182 888 y(attacker)c(to)i(for)o(ge)d
(source)i(addresses)f(that)i(do)f(not)f(belong)g(to)i(hosts)-182
987 y(that)k(are)g(reachable)f(from)g(the)h(victim)g(D.)-83
1095 y(If)29 b(the)h(attacker)e(wants)i(the)f(denial)g(of)g(service)g
(condition)f(to)-182 1194 y(last)16 b(longer)f(than)g(the)h(timeout)g
(period,)f(he)h(needs)f(to)h(continuously)-182 1294 y(keep)k
(requesting)g(new)i(connections)d(from)i(the)g(victim)g(machine.)-182
1394 y(The)e(amount)f(of)h(CPU)h(and)f(network)f(bandwidth)f(required)h
(by)h(an)-182 1493 y(attacker)g(for)h(a)g(sustained)g(attack)g(is)h
(negligible.)-83 1600 y(The)35 b(basis)h(of)f(the)g(attack)g(is)h(that)
g(TCP/IP)g(does)f(not)g(of)o(fer)-182 1700 y(strong)26
b(authentication)f(on)i(its)i(control)d(packets.)48 b(Furthermore,)-182
1800 y(there)15 b(is)i(a)g(requirement)d(for)h(an)h(inappropriately)d
(burdensome)h(al-)-182 1899 y(location)h(of)h(memory)f(and)g
(computation)f(resources)i(on)f(the)i(tar)o(get)-182
1999 y(side.)-182 2230 y Fq(3.2)o(.)22 b(Differ)n(ent)i(Attack)e(Modes)
-83 2460 y Fr(T)-6 b(ypical)24 b(SYN)i(\257ooding)d(attacks)i(can)g
(vary)f(several)g(parame-)-182 2560 y(ters:)h(the)14
b(number)g(of)g(SYN)i(packets)e(per)h(source)f(address)g(sent)h(in)g(a)
-182 2659 y(batch)i(\()p Fg(=:)h Fs(batch-size)p Fr(\),)f(the)h(delay)g
(between)f(successive)h(batches)-182 2759 y(\()p Fg(=:)26
b Fs(delay)p Fr(\),)g(and)g(the)g(mode)f(of)h(source)f(address)h
(allocation)f(\()p Fg(=:)-182 2859 y Fs(mode)p Fr(\).)-83
2966 y(W)-7 b(e)26 b(consider)d(only)h(source)f(addresses)i(of)f(hosts)
g(that)h(are)f(not)-182 3066 y(reachable)16 b(from)h(D,)i(be)f(it)h
(because)e(the)h(addresses)g(are)g(not)g(yet)g(al-)-182
3165 y(located,)d(assigned,)g(or)f(the)h(associated)g(hosts)g(are)g
(very)f(slow)h(in)g(re-)-182 3265 y(sponse,)24 b(virtually)g(or)g
(physically)f(disconnected,)h(or)g(down.)39 b(W)-7 b(e)-182
3364 y(classify)24 b(three)g(possible)g(modes)g(of)g(source)g(address)g
(allocation:)-182 3464 y(The)17 b(attacker)g(can)g(be)h(using)f(a)h
(single)g(address,)f(a)h(short)f(list)i(of)e(ad-)-182
3564 y(dresses,)j(or)g(no)g(list)h(at)g(all)579 3534
y Fm(2)616 3564 y Fr(.)-182 3777 y Fp(Single)f(addr)o(ess:)41
b Fr(The)22 b(attack)g(scripts)h(published)d(in)j(the)f(hacker)25
3877 y(magazines)d(Phrack)g([6)o(])h(and)g(2600)e([8)o(])j(take)e(as)i
(a)f(parame-)25 3976 y(ter)g(a)h(single)f(spoofed)f(address)g(that)i
(is)g(used)f(as)g(the)h(source)25 4076 y(address)d(of)g(all)h(SYN)f
(packets.)26 b(In)18 b(the)g(absence)g(of)g(any)f(de-)25
4176 y(fense,)24 b(this)f(mode)g(of)g(attack)g(is)h(as)g(ef)o(fective)e
(as)h(the)h(other)25 4275 y(three)c(modes)f(described.)-182
4472 y Fp(Short)h(list:)41 b Fr(An)34 b(attacker)f(can)g(generate)g(a)h
(small)g(pool)f(of)g(ad-)25 4572 y(dresses)22 b(and)f(use)g(them)g(as)h
(source)f(addresses)g(to)g(generate)25 4671 y(SYN)g(packets.)-182
4868 y Fp(No)f(list:)41 b Fr(The)25 b(attacker)g(can)g(use)h(a)f(dif)o
(ferent,)g(randomly)e(gener)n(-)25 4968 y(ated)17 b(source)g(address)g
(for)f(each)h(successive)h(batch)e(of)h(SYN)25 5067 y(packets.)p
-182 5169 788 4 v -97 5223 a Fl(2)-63 5246 y Fk(W)-5
b(e)17 b(list)i(the)g(\252single)g(address\272)h(mode)e(separately)l(,)
i(because)g(it)e(represents)i(an)-182 5325 y(important)e(special)i
(case)d(of)g(the)h(\252list)g(of)f(addresses\272)i(mode.)1974
83 y Ft(4.)24 b(Solutions)2073 300 y Fr(In)18 b(our)e(opinion)g(a)i
(good)e(solution)h(should)f(have)h(the)h(following)1974
400 y(characteristics:)2098 568 y Ff(\017)41 b Fr(independence)18
b(of)j(operating)e(system)i(and)f(network)g(stack)2181
667 y(implementation)e(of)i(the)g(protected)f(end)h(systems)2098
835 y Ff(\017)41 b Fr(no)20 b(requirement)e(for)i(IP)g(or)g(TCP)h
(protocol)e(modi\256cations)2098 1003 y Ff(\017)41 b
Fr(capability)21 b(to)h(protect)f(sets)h(of)g(machines,)f(and)g(not)g
(only)g(a)2181 1103 y(single)f(machine)2098 1271 y Ff(\017)41
b Fr(no)20 b(special)g(hardware)f(requirements)2098 1439
y Ff(\017)41 b Fr(portability)2098 1607 y Ff(\017)g Fr(extensibility)
2098 1776 y Ff(\017)g Fr(con\256gurability)2073 1943
y(The)18 b(countermeasures)e(described)h(in)h(this)h(section)e(have)h
(been)1974 2043 y(proposed)26 b(by)h(others)h(to)g(date.)50
b(None)27 b(of)g(these)i(proposals)d(pro-)1974 2142 y(vides)20
b(all)h(the)f(characteristics)f(we)i(are)f(looking)f(for)-5
b(.)1974 2351 y Fq(4.1)o(.)23 b(Con\256guration)e(Optimization)2073
2561 y Fr(There)c(are)g(several)f(ways)i(of)e(reducing)g(the)h
(likelihood)e(and)h(ef-)1974 2660 y(fects)k(of)g(an)f(attack)h(that)g
(involve)f(changes)g(in)h(the)g(con\256gurations)1974
2760 y(of)g(end)f(systems)i(and)f(routers.)1974 2983
y Fp(4.1.1)81 b(System)20 b(Con\256guration)f(Impr)o(ovements)1974
3140 y Fr(T)-6 b(o)16 b(defend)e(against)i(the)g(exhaustion)e(of)i
(resources)f(in)h(the)g(systems)1974 3239 y(under)h(attack,)h(an)g
(obvious)e(approach)g(is)j(to)f(increase)g(the)g(number)1974
3339 y(of)k(resources)g(devoted)f(to)i(half-open)d(TCP)k(connections,)d
(and)h(to)1974 3438 y(reduce)h(the)i(timeouts.)39 b(These)24
b(measures)g(have)g(been)g(suggested)1974 3538 y(by)c(dif)o(ferent)e
(sources)h([1)m(1)o(],)h(and)g(can)g(be)g(summarized)f(as:)2078
3723 y(1.)40 b(Reduce)20 b(the)g(timeout)f(period)f(from)h(the)h
(default)f(to)h(a)h(short)2181 3822 y(time,)34 b(e.g.,)e(10)e(seconds.)
58 b(This)31 b(helps)f(in)h(pruning)e(half-)2181 3922
y(open)20 b(connections)e(from)h(the)h(TCP)h(queue.)2078
4090 y(2.)40 b(Signi\256cantly)17 b(increase)f(the)h(length)g(of)g(the)
g(backlog)e(queue)2181 4190 y(from)i(the)g(default)f(\(see)i(T)-6
b(able)17 b(1\).)25 b(This)18 b(makes)f(the)g(system)2181
4289 y(able)25 b(to)h(cope)e(with)h(more)f(simultaneous)g(half-open)f
(con-)2181 4389 y(nections)d(than)g(before.)2078 4557
y(3.)40 b(Disable)49 b(non-essential)e(services,)55 b(thus)48
b(reducing)e(the)2181 4657 y(number)19 b(of)h(ports)g(that)g(can)g(be)g
(attacked.)2073 4841 y(These)33 b(measures)g(help)f(in)h(dealing)f
(with)h(attacks,)j(but)d(also)1974 4941 y(have)19 b(severe)h
(shortcomings:)2078 5126 y(1.)40 b(Lowering)13 b(the)i(timeouts)f(may)g
(deny)f(legitimate)i(access)g(for)2181 5225 y(machines)31
b(to)h(which)f(the)h(round)e(trip)h(times)h(exceed)f(the)2181
5325 y(timeout)20 b(period.)p eop
%%Page: 5 5
5 4 bop -79 83 a Fr(2.)41 b(Increasing)17 b(the)h(backlog)f(leads)i(to)
f(a)h(potential)f(increase)g(in)25 183 y(resource)23
b(usage.)40 b(One)24 b(vendor)e(recommends)h(upgrading)25
282 y(systems)15 b(to)f(a)h(minimum)d(of)i(128)f(MB)i(RAM)g(to)f(allow)
g(them)25 382 y(to)21 b(cope)e(with)h(attacks.)-182 609
y Fp(4.1.2)81 b(Router)19 b(Con\256guration)g(Impr)o(ovements)-182
767 y Fr(The)d(measures)h(proposed)d(in)k(the)f(\256rst)g(reactions)f
(to)h(the)g(recent)g(at-)-182 867 y(tacks)22 b([4)o(],)h(as)g(well)f
(as)h(several)f(other)f(sources)h([1)o(,)h(9)o(],)g(attempt)f(to)-182
966 y(make)g(it)i(dif)o(\256cult)e(for)h(packets)g(with)g(spoofed)f
(source)g(addresses)-182 1066 y(to)g(traverse)g(routers.)33
b(The)22 b(solutions)g(proposed)e(can)i(be)h(summa-)-182
1166 y(rized)c(as)i(follows:)-79 1353 y(1.)41 b(Con\256gure)j(external)
h(interfaces)g(on)g(routers)f(to)i(block)25 1453 y(packets)25
b(that)g(have)f(source)h(addresses)g(from)f(the)h(internal)25
1552 y(network.)-79 1723 y(2.)41 b(Con\256gure)24 b(internal)h(router)f
(interfaces)h(to)h(block)e(packets)25 1823 y(to)17 b(the)g(outside)f
(that)h(have)f(source)f(addresses)i(from)f(outside)25
1923 y(the)21 b(internal)f(network.)26 b(This)21 b(limits)g(the)g
(ability)f(to)h(launch)25 2022 y(a)c(SYN)h(\257ooding)d(attack)i(from)f
(that)h(network,)f(because)g(the)25 2122 y(attacker)22
b(would)g(only)f(be)i(able)f(to)h(generate)e(packets)h(with)25
2222 y(internal)e(addresses.)-83 2409 y(These)14 b(measures)f(can)h(be)
g(ef)o(fective,)f(but)g(only)h(if)g(taken)f(in)h(lar)o(ge)-182
2509 y(scale.)32 b(As)22 b(more)f Fs(Internet)g(Service)h(Pr)m(oviders)
g Fr(\(ISPs\))g(con\256gure)-182 2608 y(their)h(routers)f
(appropriately)-5 b(,)21 b(the)j(fertile)f(ground)e(for)i(launching)
-182 2708 y(SYN)j(\257ooding)e(attacks)i(may)f(be)h(reduced.)42
b(It)26 b(should)f(be)h(noted)-182 2808 y(that)f(in)g(mobile)g(IP)g
(situations)g(can)g(be)h(created)e(in)h(which)g(legiti-)-182
2907 y(mate)e(addresses)g(appear)f(at)i(an)f(apparently)e(wrong)h
(interface,)h(in)-182 3007 y(particular)h(if)j(a)f(mobile)g(node)f
(retains)h(its)h(IP)g(identity)e(while)h(far)-182 3107
y(away)20 b(from)f(home.)-182 3318 y Fq(4.2)o(.)j(Infrastructur)n(e)f
(Impr)n(o)o(v)o(ements)-83 3529 y Fr(Router)36 b(con\256gurations)d
(can)j(be)g(improved)d(if)j(the)g(address)-182 3629 y(spaces)30
b(reachable)f(over)h(their)g(various)f(interfaces)h(are)g(disjoint)-182
3728 y(and)f(well-de\256ned)f([9)o(].)56 b(This)30 b(is)h(the)f(case)g
(for)f(routers)g(that)h(at-)-182 3828 y(tach)23 b(an)g(or)o(ganization)
d(or)j(a)h(local)f(ISP)h(to)g(a)g(backbone)d(network.)-182
3928 y(The)c(address)g(pre\256xes)g(separate)g(the)h
Fs(inside)g Fr(and)f(the)g Fs(outside)p Fr(.)26 b(An)-182
4027 y(example)20 b(where)i(this)g(scheme)f(is)i(deployed)d(is)j(the)f
(international)-182 4127 y(telephone)12 b(system.)26
b(Phone)13 b(number)g(assignment)g(is)j(based)e(on)g(the)-182
4227 y(geographical)j(location)i(of)h(the)h(end)e(system.)-83
4327 y(Currently)-5 b(,)20 b(there)g(are)i(practical)e(problems)g(for)g
(this)i(approach)-182 4427 y(to)15 b(work:)24 b(in)15
b(general,)g(routers)f(in)h(lar)o(ge)f(backbone)f(networks)h(with)-182
4527 y(complex)21 b(topology)f(cannot)h(make)h(a)h(clear)f(distinction)
g(between)-182 4626 y(inbound)h(and)i(outbound)f(traf)o(\256c.)43
b(Packets)26 b(are)f(routed)g(in)h(back-)-182 4726 y(bones)i(based)h
(on)f(current)g(link)h(availability)f(and)h(load)g(and)f(can)-182
4826 y(take)15 b(numerous)e(possible)i(paths)h(through)d(the)i
(network.)24 b(Genuine)-182 4925 y(packets)18 b(from)f(the)h(same)h
(source)f(address)f(can)i(reach)e(a)i(backbone)-182 5025
y(router)g(legitimately)g(over)g(various)g(interfaces.)-83
5126 y(As)36 b(long)e(as)i(a)f(signi\256cant)g(number)e(of)h(sites)i
(can)f(transmit)-182 5225 y(packets)20 b(into)g(the)h(backbone)e
(networks)g(without)h(any)g(source)g(ad-)-182 5325 y(dress)e(checking,)
e(hosts)i(are)g(still)h(subject)e(to)h(untraceable)e(attacks.)1974
83 y(Therefore,)22 b(additional)g(backbone)f(mechanisms)h(should)h(be)g
(im-)1974 183 y(plemented)16 b(to)i(cope)e(with)i(a)g(lar)o(ge)f
(number)e(of)j(network)e(based)h(at-)1974 282 y(tacks.)2073
386 y(The)d(implementation)d(and)i(deployment)e(of)i(a)h(scheme)f(to)g
(cryp-)1974 486 y(tographically)19 b(sign)i(IP)h(source)e(addresses)h
(of)g(all)h(packets)f(would)1974 586 y(allow)14 b(tracing)f(the)i
(physical)e(transmission)h(path)g(of)g(any)f(IP)i(packet)1974
685 y(to)k(its)i(source.)k(Although)18 b(this)i(wouldn)e(not)h(prevent)
e(SYN)j(\257ood-)1974 785 y(ing,)e(the)h(threat)f(of)h(tracing)e(and)h
(subsequent)g(prosecution)e(should)1974 885 y(serve)25
b(as)h(a)g(deterrent)e(to)i(at)g(least)g(casual)g(attacks.)43
b(In)25 b(this)h(case,)1974 984 y(online)c(tracing)f(mechanisms)h(are)h
(especially)f(useful,)h(because)f(a)1974 1084 y(successful)g(SYN)h
(\257ooding)e(attack)h(requires)g(sustained)g(network)1974
1183 y(activity)-5 b(.)25 b(The)17 b(Internet)g(infrastructure)e(lacks)
j(basic)g(mechanisms)1974 1283 y(that)28 b(have)f(been)g(present)f(and)
i(successfully)f(used)g(in)h(telephone)1974 1383 y(networks)19
b(for)h(a)g(long)g(time.)1974 1604 y Fq(4.3)o(.)j(Connection)e
(Establishment)h(Impr)n(o)o(v)o(ements)2073 1825 y Fr(This)e(solution)e
(addresses)h(the)g(fact)g(that)h(TCP)g(imposes)f(asym-)1974
1924 y(metric)28 b(memory)f(and)g(computation)f(requirements)h(on)h
(the)g(two)1974 2024 y(endpoints)35 b(during)g(each)h(connection)f
(establishment)h(process.)1974 2124 y(The)24 b(destination)f(host)i
(needs)f(to)g(allocate)g(lar)o(ge)g(data)g(structures)1974
2223 y(in)18 b(response)e(to)i(any)f(SYN)h(packet,)f(without)g(any)g
(guarantee)f(of)h(its)1974 2323 y(authenticity)-5 b(.)2073
2427 y(The)21 b(three-way)f(handshake)f(requires)i(the)g(sequence)f
(number)1974 2527 y Fi(y)i Fr(to)d(match)g(between)f(the)h(second)f
(and)h(third)f(message)h(to)g(protect)1974 2626 y(against)e
(accidentally)g(reopened)f(old)h(connections)f(and)h(unautho-)1974
2726 y(rized)29 b(access)h(\(see)f([3]\).)54 b(The)29
b(destination)f(therefore)g(needs)h(to)1974 2825 y(either)24
b(store)h(its)h(ISS)f Fi(y)j Fr(between)c(sending)g(the)g(second)g
(message)1974 2925 y(and)f(receiving)e(the)j(third)f(message,)g(or)g
(be)h(able)f(to)g(regenerate)f Fi(y)1974 3025 y Fr(at)f(the)g(time)f
(the)h(third)f(message)h(of)f(the)h(three-way)e(handshake)f(is)1974
3124 y(received.)41 b(If)25 b(there)f(were)i(no)e(mechanism)g(to)i
(regenerate)d Fi(y)29 b Fr(and)1974 3224 y(the)15 b(destination)g
(didn')o(t)f(store)i Fi(y)s Fr(,)g(any)f(host)h(could)e(establish)i(a)g
(con-)1974 3324 y(nection)j(by)h(sending)f(only)g(the)h(third)g
(message.)2073 3428 y(One)f(such)g(mechanism)e(is)j(to)f(calculate)g
Fi(y)j Fr(as)d(a)g(cryptographic)1974 3527 y(hash)32
b(value)g(of)g(source)g(and)g(destination)f(IP)i(addresses,)i(ports,)
1974 3627 y(the)22 b(source')-5 b(s)23 b(ISS)g Fi(x)p
Fr(,)h(and)e(a)h(destination)e(speci\256c)i(secret)g(key)-5
b(.)33 b(D)1974 3726 y(would)14 b(calculate)i Fi(y)i
Fr(in)e(that)f(manner)g(and)f(use)i(it)g(in)g(its)g(SYN+ACK)1974
3826 y(message.)44 b(At)26 b(the)g(time)g(D)h(received)d(the)i(third)g
(message)f(of)h(the)1974 3926 y(three-way)16 b(handshake)g(it)i(can)f
(recalculate)g Fi(y)3312 3896 y Fe(0)3353 3926 y Fr(by)g(using)g(its)i
(secret)1974 4025 y(key)-5 b(,)17 b(sequence)h(number)m(,)e(the)j
(addresses,)f(and)g(the)g(ports)g(found)f(in)1974 4125
y(that)c(message.)25 b(If)13 b Fi(y)2553 4095 y Fe(0)2590
4125 y Fr(matches)g(the)g Fi(y)k Fr(in)d(ACK)3303 4137
y Fn(y)r Fm(+1)3427 4125 y Fr(,)h(the)e(connection)1974
4225 y(is)20 b(legitimate,)e(otherwise)g(it)i(is)g(not.)26
b(Note)19 b(that)f(this)i(solution)e(also)1974 4324 y(provides)k(some)h
(protection)e(against)i(sequence)f(number)f(predic-)1974
4424 y(tion)g(\([3)o(]\),)h(because)f(of)g(the)h(statistical)h
(properties)d(of)h(good)f(hash)1974 4524 y(functions.)2073
4628 y(Although)29 b(this)i(approach)e(prevents)g(the)i(SYN)g
(\257ooding)e(at-)1974 4727 y(tack,)23 b(it)g(has)g(considerable)e
(drawbacks.)33 b(This)22 b(solution)g(requires)1974 4827
y(the)g(modi\256cation)e(of)h(the)h(TCP)h(standard)e(and)g
(consequently)f(ev-)1974 4926 y(ery)31 b(TCP)h(implementation.)57
b(It)32 b(is)g(impossible)e(to)i(provide)d(the)1974 5026
y(fault)c(tolerance)e(that)i(TCP)h(currently)d(of)o(fers)h(without)g
(the)h(desti-)1974 5126 y(nation)c(keeping)f(state)i(about)f(each)g
(half-open)e(connection.)29 b(Fur)n(-)1974 5225 y(thermore,)13
b(this)h(mechanism)f(makes)h(it)g(impossible)g(for)f(the)h(source)1974
5325 y(to)22 b(include)f(data)h(in)g(the)g(third)f(message)h(of)g(the)g
(three-way)f(hand-)p eop
%%Page: 6 6
6 5 bop -182 83 a Fr(shake,)27 b(because)f Fi(x)h Fr(needs)f(to)g(be)h
(part)f(of)g(the)g(hash)g(function)f(ar)n(-)-182 183
y(gument.)h(As)21 b(there)f(are)h(only)e Fg(2)749 153
y Fm(32)840 183 y Fr(TCP)i(sequence)f(numbers,)e(this)-182
282 y(technique)d(introduces)h(a)i(small)g(probability)d(that)j(an)f
(old)g(or)g(a)h(sin-)-182 382 y(gle)27 b(for)o(ged)e(packet)h(might)h
(open)f(a)i(connection.)45 b(Section)27 b(4.4.1)-182
482 y(discusses)20 b(an)g(extension)f(of)h(this)h(approach.)-182
693 y Fq(4.4)o(.)h(Fir)n(ewall)h(A)n(ppr)n(oach)-83 904
y Fr(As)16 b(many)d(sites)j(connected)c(to)j(the)f(Internet)g(are)g
(already)f(some-)-182 1003 y(what)k(protected)f(by)h(\256rewalls,)i(it)
f(makes)f(sense)h(to)g(try)f(to)h(use)g(\256re-)-182
1103 y(walls)f(to)h(protect)e(against)g(SYN)i(\257ooding.)24
b(Several)17 b(\256rewall)g(ven-)-182 1203 y(dors)22
b(have)f(already)h(made)g(products)f(available)g(to)i(increase)f(pro-)
-182 1302 y(tection)15 b(against)g(the)h(attacks)g([14)n(,)g(15)o(],)h
(and)e(some)h(other)e(solutions)-182 1402 y(have)19 b(been)h(proposed.)
-83 1503 y(Firewall-based)30 b(protection)g(approaches)f(are)i(based)g
(on)g(the)-182 1602 y(idea)22 b(that)h(every)f(packet)g(destined)h(to)g
(a)g(host)g(inside)g(the)g(\256rewall)-182 1702 y(has)g(to)g(be)g
(examined)f(by)g(the)h(\256rewall)h(\256rst,)g(and)e(thus)h(decisions)
-182 1802 y(can)e(be)h(made)g(on)f(its)j(authenticity)c(and)i(actions)f
(can)h(be)g(taken)g(to)-182 1901 y(protect)13 b(the)i(internal)f
(hosts.)25 b(This)14 b(can)h(be)f(ef)o(fective)f(if,)j(apart)e(from)
-182 2001 y(the)25 b(normal)g(blocking)e(done)i(by)g(the)h(\256rewall,)
h(some)e(other)g(spe-)-182 2101 y(cialized)20 b(mechanism)g(is)i(put)f
(in)g(place)g(to)g(deal)g(with)g(SYN)h(\257ood-)-182
2200 y(ing.)-83 2301 y(The)38 b(drawbacks)f(of)h(this)h(approach)d(are)
i(delays)g(on)g(every)-182 2401 y(packet)25 b(for)g(additional)g
(processing.)43 b(Not)26 b(every)f(\256rewall)i(prod-)-182
2500 y(uct)d(is)i(capable)d(of)h(adding)f(functionality)-5
b(,)23 b(such)h(as)i(a)f(module)e(to)-182 2600 y(protect)c(against)h
(SYN)h(\257ooding.)-83 2701 y(The)f(two)g(main)g(approaches)e(are)i
(described)f(below)-5 b(.)-182 2928 y Fp(4.4.1)81 b(Fir)o(ewall)19
b(as)i(a)f(Relay)-182 3086 y Fr(In)26 b(this)i(approach,)f(when)f(a)i
(packet)e(for)h(an)g(internal)f(host)h(is)h(re-)-182
3185 y(ceived)j(the)g(\256rewall)h(answers)g(on)f(its)i(behalf.)60
b(Only)32 b(after)f(the)-182 3285 y(three-way)k(handshake)g(is)j
(successfully)f(completed)e(does)i(the)-182 3384 y(\256rewall)20
b(contact)g(the)g(host)g(and)g(establish)g(a)g(second)g(connection.)-79
3572 y(1.)41 b(In)17 b(the)h(case)g(of)g(an)f(attack)g(\(see)h(Figure)f
(4\),)h(the)g(\256rewall)f(an-)25 3672 y(swers)27 b(to)g(the)g(SYN)g
(sent)g(by)f(the)h(attacker)-5 b(.)46 b(Because)27 b(the)25
3771 y(\256nal)i(ACK)g(never)e(arrives,)j(the)e(\256rewall)h
(terminates)f(the)25 3871 y(connection,)16 b(and)h(the)h(host)g(never)f
(receives)g(the)h(datagram.)25 3970 y(This)c(mode)e(of)h(protection)f
(is)i(only)f(ef)o(fective)f(if)h(the)h(\256rewall)25
4070 y(itself)21 b(is)g(not)f(vulnerable)e(to)i(SYN)h(\257ooding.)-79
4241 y(2.)41 b(In)17 b(the)g(case)g(of)g(a)h(legitimate)e(connection)f
(\(Figure)h(5\),)h(after)25 4341 y(the)26 b(\256rewall)g(receives)f
(the)h(\256nal)g(ACK,)g(it)h(creates)f(a)g(new)25 4440
y(connection)21 b(to)j(the)g(internal)e(host)i(on)f(behalf)f(of)h(the)h
(orig-)25 4540 y(inal)j(client.)48 b(This)27 b(makes)g(the)g(protected)
e(machines)i(vul-)25 4639 y(nerable)e(to)h(the)g(new)g(degradation)d
(of)j(service)g(attack)f(de-)25 4739 y(scribed)g(in)h(Section)f(2.2.3.)
42 b(Once)26 b(the)f(connection)f(is)j(es-)25 4839 y(tablished,)h(the)f
(\256rewall)h(has)f(to)g(keep)g(acting)f(as)i(a)g(proxy)25
4938 y(to)23 b(translate)f(the)h(sequence)e(numbers)g(in)h(the)h
(packets)f(that)25 5038 y(\257ow)f(between)e(the)h(client)g(and)g(the)g
(server)-5 b(.)-83 5225 y(This)17 b(method)e(has)h(the)h(drawback)d(of)
i(introducing)e(new)i(delays)-182 5325 y(for)23 b(legitimate)h
(connections.)36 b(Delays)24 b(are)g(introduced)e(by)h(extra)2183
925 y @beginspecial 212 @llx 347 @lly 398 @urx 448 @ury
1860 @rwi @setspecial
%%BeginDocument: firewall-relay-1.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
198.0 472.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawSplineSection {
	/y3 exch def
	/x3 exch def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/xa x1 x2 x1 sub 0.666667 mul add def
	/ya y1 y2 y1 sub 0.666667 mul add def
	/xb x3 x2 x3 sub 0.666667 mul add def
	/yb y3 y2 y3 sub 0.666667 mul add def
	x1 y1 lineto
	xa ya xb yb x3 y3 curveto
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1800 600 m 1800 2100 l gs col-1 s gr 
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 3300 600 m 3300 2100 l gs col-1 s gr 
% Polyline
gs  clippath
1662 1142 m 1773 1194 l 1650 1201 l 1809 1232 l 1821 1174 l  cp clip
n 300 900 m 1800 1200 l gs col-1 s gr gr

% arrowhead
n 1662 1142 m 1773 1194 l 1650 1201 l  col-1 s
% Polyline
gs  clippath
1050 1655 m 926 1645 l 1040 1596 l 880 1623 l 890 1682 l  cp clip
n 1800 1500 m 900 1650 l gs col-1 s gr gr

% arrowhead
n 1050 1655 m 926 1645 l 1040 1596 l  col-1 s
% Polyline
n 300 600 m 300 2100 l gs col-1 s gr 
% Open spline
gs n 900.0 1650.0 m 937.5 1687.5 l
	937.5 1687.5 975.0 1725.0 937.5 1725.0 DrawSplineSection
	937.5 1725.0 900.0 1725.0 937.5 1762.5 DrawSplineSection
	937.5 1762.5 975.0 1800.0 937.5 1800.0 DrawSplineSection
	900.0 1800.0 l  gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
900 975 m
gs 1 -1 sc (SYN x) col-1 sh gr
/Times-Roman ff 180.00 scf sf
675 1500 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (Firewall) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
225 525 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial 2073 1190 a Fo(Figure)g(4.)g(Attac)n(k)g(scenario)g(with)e
(a)i(rela)n(y-\256re)o(wall)2073 1290 y(pr)n(otection)1974
1607 y Fr(processing)14 b(done)g(at)h(the)g(\256rewall,)i(both)d(at)h
(connection)e(establish-)1974 1706 y(ment)29 b(time)g(and)g(for)f(each)
h(data)g(packet.)53 b(The)29 b(obvious)f(advan-)1974
1806 y(tage)17 b(is)h(that)g(the)f(destination)f(host)i(never)e
(receives)h(spoofed)f(SYN)1974 1906 y(packets.)2073 2006
y(An)21 b(alternative)f(approach)f(in)i(which)g(the)g(\256rewall)g
(could)f(pre-)1974 2105 y(dict)c(the)g(sequence)f(number)f(that)i(is)h
(going)d(to)i(be)g(used)g(by)f(the)h(host)1974 2205 y(\(see)g(Section)g
(4.3\))f(would)h(allow)g(the)g(\256rewall)h(to)f(intervene)f(in)h(the)
1974 2304 y(same)i(manner)f(when)g(establishing)h(the)g(connection,)e
(without)h(the)1974 2404 y(need)g(for)h(translating)f(sequence)g
(numbers)g(for)g(each)h(data)g(packet.)1974 2626 y Fp(4.4.2)81
b(Fir)o(ewall)19 b(as)i(a)f(Semi-transpar)o(ent)f(Gateway)1974
2782 y Fr(In)f(this)h(approach,)e(the)h(\256rewall)h(lets)g(SYN)g(and)f
(ACK)i(packets)e(go)1974 2882 y(through,)d(but)h(monitors)f(the)h(traf)
o(\256c)g(and)g(reacts)g(to)h(it.)26 b(W)-7 b(e)18 b(call)f(this)1974
2981 y(the)j Fs(semi-transpar)m(ent)f(gateway)g Fr(approach.)2073
3081 y(The)37 b(\256rewall)h(passes)g(SYN)f(packets)g(destined)g(to)g
(internal)1974 3181 y(hosts.)45 b(When)26 b(the)h(host)f(responds)f
(with)h(a)h(SYN+ACK)g(packet,)1974 3280 y(the)d(\256rewall)f(forwards)g
(it,)i(but)e(reacts)h(by)f(generating)f(and)h(send-)1974
3380 y(ing)17 b(an)g(ACK)h(packet)f(that)g(seems)h(to)f(come)g(from)f
(the)h(client.)26 b(This)1974 3480 y(has)e(the)f(ef)o(fect)g(of)g
(moving)f(the)h(connection)f(out)h(of)g(the)h(backlog)1974
3579 y(queue)c(in)h(the)h(host,)f(thus)g(freeing)f(the)i(resources)e
(that)h(were)g(allo-)1974 3679 y(cated)f(for)f(the)i(half-open)c
(connection.)2078 3863 y(1.)40 b(In)22 b(the)f(case)h(of)f(an)g(attack)
g(\(see)h(Figure)f(6\),)g(when)g(the)g(host)2181 3962
y(sends)33 b(the)f(SYN+ACK,)h(the)g(gateway)e(lets)j(it)f(pass)g(and)
2181 4062 y(generates)g(and)h(sends)g(the)g(ACK)h(that)f(moves)f(the)h
(con-)2181 4162 y(nection)24 b(out)f(of)h(the)g(backlog)f(queue.)37
b(If)24 b(the)h(\256rewall)f(has)2181 4261 y(not)17 b(received)e(the)i
(legitimate)f(ACK)i(after)e(some)h(\(ar)o(guably)2181
4361 y(short\))24 b(period)f(of)h(time,)h(it)g(will)g(send)f(a)h(RST)g
(packet,)f(ter)n(-)2181 4460 y(minating)19 b(the)i(connection.)2078
4628 y(2.)40 b(In)25 b(the)g(case)h(of)e(a)i(legitimate)f(connection)d
(\(Figure)i(7\))h(the)2181 4727 y(\256rewall)h(generates)f(and)g(sends)
g(an)h(ACK)g(packet.)42 b(When)2181 4827 y(the)21 b(legitimate)g(ACK)h
(packet)e(arrives,)g(the)h(\256rewall)h(lets)f(it)2181
4926 y(pass,)29 b(and)d(the)h(\252duplicate\272)e(ACK)i(packet)f
(arrives)g(at)h(the)2181 5026 y(host.)48 b(TCP)28 b(is)g(designed)d(to)
j(cope)e(with)h(duplicate)f(pack-)2181 5126 y(ets,)19
b(so)e(the)h(duplicate)e(packet)g(is)i(silently)g(discarded.)24
b(Now)2181 5225 y(data)15 b(can)g(\257ow)h(freely)e(in)h(both)f
(directions,)h(without)g(further)2181 5325 y(\256rewall)21
b(intervention.)p eop
%%Page: 7 7
7 6 bop 27 2125 a @beginspecial 212 @llx 275 @lly 398
@urx 520 @ury 1860 @rwi @setspecial
%%BeginDocument: firewall-relay-2.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
197.5 544.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 180.00 scf sf
2175 3975 m
gs 1 -1 sc (Sequence) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2175 4140 m
gs 1 -1 sc (number) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2175 4305 m
gs 1 -1 sc (conversion) col-1 sh gr
7.500 slw
 [15 50.0] 50.0 sd
1 slc
% Ellipse
n 1792 3410 233 640 0 360 DrawEllipse gs col-1 s gr
 [] 0 sd
0 slc
% Polyline
n 1800 600 m 1800 4500 l gs col-1 s gr 
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 3300 600 m 3300 4500 l gs col-1 s gr 
% Polyline
n 300 600 m 300 4500 l gs col-1 s gr 
% Polyline
gs  clippath
1657 1006 m 1773 1047 l 1651 1065 l 1812 1081 l 1818 1022 l  cp clip
n 300 900 m 1800 1050 l gs col-1 s gr gr

% arrowhead
n 1657 1006 m 1773 1047 l 1651 1065 l  col-1 s
% Polyline
gs  clippath
446 1335 m 323 1317 l 440 1276 l 279 1292 l 285 1351 l  cp clip
n 1797 1170 m 297 1320 l gs col-1 s gr gr

% arrowhead
n 446 1335 m 323 1317 l 440 1276 l  col-1 s
% Polyline
gs  clippath
1656 1696 m 1772 1737 l 1650 1755 l 1811 1771 l 1817 1712 l  cp clip
n 299 1590 m 1799 1740 l gs col-1 s gr gr

% arrowhead
n 1656 1696 m 1772 1737 l 1650 1755 l  col-1 s
% Polyline
gs  clippath
3160 2026 m 3276 2067 l 3154 2085 l 3315 2101 l 3321 2042 l  cp clip
n 1803 1920 m 3303 2070 l gs col-1 s gr gr

% arrowhead
n 3160 2026 m 3276 2067 l 3154 2085 l  col-1 s
% Polyline
gs  clippath
1948 2325 m 1825 2307 l 1942 2266 l 1781 2282 l 1787 2341 l  cp clip
n 3299 2160 m 1799 2310 l gs col-1 s gr gr

% arrowhead
n 1948 2325 m 1825 2307 l 1942 2266 l  col-1 s
% Polyline
gs  clippath
3161 2694 m 3277 2735 l 3155 2753 l 3316 2769 l 3322 2710 l  cp clip
n 1804 2588 m 3304 2738 l gs col-1 s gr gr

% arrowhead
n 3161 2694 m 3277 2735 l 3155 2753 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
1661 2919 m 1777 2960 l 1655 2978 l 1816 2994 l 1822 2935 l  cp clip
n 304 2813 m 1804 2963 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 1661 2919 m 1777 2960 l 1655 2978 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3154 3211 m 3270 3252 l 3148 3270 l 3309 3286 l 3315 3227 l  cp clip
n 1797 3105 m 3297 3255 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3154 3211 m 3270 3252 l 3148 3270 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
1949 3690 m 1826 3672 l 1943 3631 l 1782 3647 l 1788 3706 l  cp clip
n 3300 3525 m 1800 3675 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 1949 3690 m 1826 3672 l 1943 3631 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
449 3990 m 326 3972 l 443 3931 l 282 3947 l 288 4006 l  cp clip
n 1800 3825 m 300 3975 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 449 3990 m 326 3972 l 443 3931 l  col-1 s
% Polyline
gs  clippath
2010 3965 m 1901 3906 l 2025 3907 l 1868 3867 l 1853 3925 l  cp clip
n 2175 3975 m 1875 3900 l gs col-1 s gr gr

% arrowhead
n 2010 3965 m 1901 3906 l 2025 3907 l  col-1 s
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (Firewall) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (S) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 900 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
675 1500 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 1875 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
2400 1950 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2100 2475 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2250 2850 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 2850 m
gs 1 -1 sc (Data) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2625 3150 m
gs 1 -1 sc (Data) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2250 3525 m
gs 1 -1 sc (Data) col-1 sh gr
/Times-Roman ff 180.00 scf sf
675 3825 m
gs 1 -1 sc (Data) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial -83 2390 a Fo(Figure)26 b(5.)g(Legitimate)g(connection)f
(with)g(a)h(rela)n(y-)-83 2490 y(\256re)o(wall)d(pr)n(otection)-83
2809 y Fr(The)i(main)h(advantage)d(of)j(this)g(approach)d(over)i(the)g
(previous)-182 2908 y(one)f(is)h(that)g(no)f(delays)g(are)g(introduced)
f(for)g(legitimate)i(connec-)-182 3008 y(tions)e(once)g(they)g(are)h
(established.)37 b(The)23 b(price)g(to)h(pay)f(is)i(a)f(lar)o(ge)-182
3108 y(number)14 b(of)i(illegitimate)g(open)f(connections)f(at)i(the)h
(destination)e(if)-182 3207 y(it)j(is)h(under)d(attack.)26
b(However)m(,)16 b(the)i(limit)g(on)g(the)g(number)d(of)j(open)-182
3307 y(connections)d(is)j(much)d(higher)h(on)h(most)g(systems)g(\(in)g
(the)g(order)e(of)-182 3406 y(thousands,)20 b(limited)h(only)g(by)g
(the)h(CPU)g(and)f(memory)f(resources)-182 3506 y(available)h(at)h(the)
g(host\),)g(so)g(it)g(is)h(an)f(extra)f(load)h(that)g(most)g(server)
-182 3606 y(class)15 b(systems)g(can)f(withstand)f(without)h(many)f
(problems.)24 b(Again,)-182 3705 y(this)k(approach)d(requires)i(the)g
(timeout)g(period)f(to)i(be)g(very)e(care-)-182 3805
y(fully)f(selected,)j(so)e(as)h(to)g(not)e(deny)h(access)g(to)h
(legitimate)f(hosts)-182 3905 y(with)20 b(long)f(response)h(times.)-182
4116 y Fq(4.5)90 b(Acti)o(v)o(e)23 b(Monitoring)-83 4327
y Fr(This)38 b(category)e(of)i(solutions)f(consists)i(of)e(using)h
(software)-182 4427 y(agents)21 b(to)h(continuously)e(monitor)h(TCP/IP)
h(traf)o(\256c)g(in)g(a)g(network)-182 4527 y(at)g(a)g(given)e(place.)
31 b(An)22 b(agent)f(can)h(collect)f(communication)e(con-)-182
4626 y(trol)26 b(information)e(to)j(generate)e(a)i(view)g(of)f(all)h
(connections)e(that)-182 4726 y(can)h(be)h(observed)e(on)h(a)h
(monitored)e(network.)45 b(Furthermore,)25 b(it)-182
4826 y(can)18 b(watch)h(for)f(certain)h(conditions)e(to)i(arise)g(and)g
(react)f(appropri-)-182 4925 y(ately)-5 b(.)38 b(This)24
b(category)f(of)o(fers)f(a)j(general)e(approach)f(to)i(detecting)-182
5025 y(and)i(reacting)g(to)i(a)g(lar)o(ge)e(class)i(of)f(network)f
(based)h(attempts)g(to)-182 5124 y(breach)19 b(security)-5
b(.)-83 5225 y(The)25 b(approach)d(is)k(attractive,)f(because)g(of)f
(its)i(low)f(costs)g(and)-182 5325 y(high)20 b(\257exibility)-5
b(.)30 b(It)22 b(neither)e(requires)h(new)g(hardware)f(to)h(be)h(pur)n
(-)2187 1375 y @beginspecial 213 @llx 320 @lly 398 @urx
475 @ury 1850 @rwi @setspecial
%%BeginDocument: firewall-stg-1.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
198.0 499.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawSplineSection {
	/y3 exch def
	/x3 exch def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/xa x1 x2 x1 sub 0.666667 mul add def
	/ya y1 y2 y1 sub 0.666667 mul add def
	/xb x3 x2 x3 sub 0.666667 mul add def
	/yb y3 y2 y3 sub 0.666667 mul add def
	x1 y1 lineto
	xa ya xb yb x3 y3 curveto
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1800 600 m 1800 3000 l gs col-1 s gr 
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 300 600 m 300 3000 l gs col-1 s gr 
% Polyline
gs  clippath
3157 1156 m 3273 1197 l 3151 1215 l 3312 1231 l 3318 1172 l  cp clip
n 300 900 m 3300 1200 l gs col-1 s gr gr

% arrowhead
n 3157 1156 m 3273 1197 l 3151 1215 l  col-1 s
% Polyline
n 3300 600 m 3300 3000 l gs col-1 s gr 
% Polyline
gs  clippath
1351 1605 m 1228 1587 l 1345 1545 l 1184 1562 l 1190 1621 l  cp clip
n 3305 1379 m 1202 1590 l gs col-1 s gr gr

% arrowhead
n 1351 1605 m 1228 1587 l 1345 1545 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3161 1887 m 3275 1933 l 3152 1946 l 3313 1969 l 3321 1909 l  cp clip
n 1799 1726 m 3302 1937 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3161 1887 m 3275 1933 l 3152 1946 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3160 2551 m 3276 2592 l 3154 2610 l 3315 2626 l 3321 2567 l  cp clip
n 1803 2445 m 3303 2595 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3160 2551 m 3276 2592 l 3154 2610 l  col-1 s
% Polyline
gs  clippath
1755 2328 m 1725 2448 l 1695 2328 l 1695 2490 l 1755 2490 l  cp clip
1695 1872 m 1725 1752 l 1755 1872 l 1755 1710 l 1695 1710 l  cp clip
n 1725 1725 m 1725 2475 l gs col-1 s gr gr

% arrowhead
n 1695 1872 m 1725 1752 l 1755 1872 l  col-1 s
% arrowhead
n 1755 2328 m 1725 2448 l 1695 2328 l  col-1 s
% Open spline
gs n 1200.0 1575.0 m 1237.5 1612.5 l
	1237.5 1612.5 1275.0 1650.0 1237.5 1650.0 DrawSplineSection
	1237.5 1650.0 1200.0 1650.0 1237.5 1687.5 DrawSplineSection
	1237.5 1687.5 1275.0 1725.0 1237.5 1725.0 DrawSplineSection
	1200.0 1725.0 l  gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (Firewall) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (A) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
2400 2775 m
gs 1 -1 sc (RST) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2625 2100 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1650 2400 m
gs 1 -1 sc  90.0 rot (Timeout) col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 900 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 1500 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial 2073 1640 a Fo(Figure)32 b(6.)f(Attac)n(k)g(with)g
(semi-transparent)g(gate-)2073 1740 y(wa)n(y)24 b(\256re)o(wall)f(pr)n
(otection)1974 2059 y Fr(chased)13 b(and)h(installed,)g(such)g(as)h(a)f
(certain)f(\256rewall)h(router)f(product)1974 2158 y(with)22
b(the)g(desired)g(functionality)-5 b(,)20 b(nor)h(does)h(it)h(demand)e
(software)1974 2258 y(modi\256cations)16 b(to)i(the)f(protected)g(end)g
(systems.)26 b(On)18 b(typical)f(mul-)1974 2357 y(tiple)23
b(access)g(local)f(area)g(networks)g(such)g(a)h(tool)f(can)g(only)g(be)
g(re-)1974 2457 y(active)f(in)g(character)m(,)e(because)i(it)g(has)h
(no)e(capability)g(of)h(blocking)1974 2557 y(any)e(\252of)o
(fensive\272)f(traf)o(\256c)i(as)h(a)f(\256rewall)h(does.)2073
2657 y(At)15 b(the)e(time)h(of)f(this)h(writing,)g(we)g(know)e(of)h
(one)g(publicly)g(avail-)1974 2757 y(able)24 b(tool)f([12)o(])h(that)g
(is)h(claimed)f(to)g(perform)e(active)i(monitoring)1974
2857 y(\(other)f(than)h(our)f(tool)h(called)g Fh(synkill)p
Fr(\).)38 b(According)22 b(to)i(user)n(-)1974 2956 y(de\256nable)k
(parameters,)i(the)f(program)e(monitors)g(the)i(local)h(net-)1974
3056 y(work)g(for)h(SYN)h(packets)e(that)i(are)f(not)g(acknowledged)d
(after)j(a)1974 3155 y(certain)22 b(period)g(of)h(time,)h(and)f(frees)g
(the)g(allocated)f(resources)h(by)1974 3255 y(sending)e(matching)h(RST)
h(packets.)34 b(Our)22 b(tool)g(called)h Fh(synkill)1974
3355 y Fr(falls)15 b(into)f(the)h(same)g(category)e(and)h(is)h
(explained)e(in)i(the)g(following)1974 3454 y(Section)20
b(5.)1974 3689 y Ft(5.)k(Active)h(Monitor)h(\320)e Fd(synkill)2073
3908 y Fr(W)-7 b(e)16 b(have)e(developed)e(a)j(software)f(tool)h(that)f
(can)h(lessen)g(the)f(im-)1974 4008 y(pact)22 b(of)h(SYN)g(\257ooding)e
(attacks,)i(and)f(in)h(many)f(cases)h(defeat)f(at-)1974
4107 y(tacks)17 b(completely)-5 b(.)24 b(It)17 b(provides)f(all)h
(characteristics)g(as)g(described)1974 4207 y(in)j(Section)g(4.)1974
4417 y Fq(5.1)o(.)j(Description)2073 4628 y Fr(The)30
b(program)e(requires)h(the)i(ability)f(to)g(monitor)f(and)g(inject)1974
4727 y(network)g(traf)o(\256c)h(to)h(and)f(from)f(the)i(machines)e(it)j
(is)f(protecting.)1974 4827 y(Ethernet)14 b(is)j(an)f(example)f(for)g
(a)h(networking)e(technology)f(that)j(sat-)1974 4926
y(is\256es)i(this)f(requirement.)24 b(The)16 b(program)f(is)i(called)g
(a)g Fs(monitor)p Fr(,)g(be-)1974 5026 y(cause)g(it)h(reads)g(and)e
(examines)h(all)h(TCP)g(packets)f(on)g(the)h(LAN)f(af-)1974
5126 y(ter)d(setting)h(its)g(network)f(interface)f(into)h(promiscuous)f
(mode.)24 b(The)1974 5225 y(program)16 b(is)k(called)e
Fs(active)p Fr(,)h(because)f(it)h(can)f(generate)g(TCP)h(pack-)1974
5325 y(ets)26 b(in)g(response)e(to)h(observed)f(traf)o(\256c)h(and)g
(inject)g(them)g(into)g(the)p eop
%%Page: 8 8
8 7 bop 27 1525 a @beginspecial 212 @llx 311 @lly 398
@urx 484 @ury 1860 @rwi @setspecial
%%BeginDocument: firewall-stg-2.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
197.5 508.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
gs  clippath
3157 1156 m 3273 1197 l 3151 1215 l 3312 1231 l 3318 1172 l  cp clip
n 300 900 m 3300 1200 l gs col-1 s gr gr

% arrowhead
n 3157 1156 m 3273 1197 l 3151 1215 l  col-1 s
% Polyline
gs  clippath
446 1631 m 323 1612 l 440 1571 l 279 1587 l 285 1646 l  cp clip
n 3300 1329 m 297 1615 l gs col-1 s gr gr

% arrowhead
n 446 1631 m 323 1612 l 440 1571 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3156 1763 m 3272 1805 l 3150 1822 l 3311 1839 l 3317 1780 l  cp clip
n 1800 1650 m 3299 1808 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3156 1763 m 3272 1805 l 3150 1822 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3153 2461 m 3270 2502 l 3148 2521 l 3309 2536 l 3315 2477 l  cp clip
n 293 2223 m 3297 2505 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3153 2461 m 3270 2502 l 3148 2521 l  col-1 s
% Polyline
gs  clippath
3163 2074 m 3279 2116 l 3157 2134 l 3318 2150 l 3324 2091 l  cp clip
n 309 1805 m 3306 2119 l gs col-1 s gr gr

% arrowhead
n 3163 2074 m 3279 2116 l 3157 2134 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
451 3037 m 328 3017 l 446 2977 l 284 2991 l 290 3051 l  cp clip
n 3308 2749 m 302 3020 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 451 3037 m 328 3017 l 446 2977 l  col-1 s
% Polyline
n 3300 600 m 3300 3300 l gs col-1 s gr 
% Polyline
n 1800 600 m 1800 3300 l gs col-1 s gr 
% Polyline
n 300 600 m 300 3300 l gs col-1 s gr 
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (Firewall) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 975 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (S) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
450 1500 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2925 1725 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1425 1875 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 2475 m
gs 1 -1 sc (Data) col-1 sh gr
/Times-Roman ff 180.00 scf sf
900 3225 m
gs 1 -1 sc (Data) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial -83 1790 a Fo(Figure)41 b(7.)g(Legitimate)g(connection)f
(with)g(semi-)-83 1890 y(transparent)23 b(gate)o(wa)n(y)g(\256re)o
(wall)g(pr)n(otection)-182 2201 y Fr(network.)h(In)18
b(the)g(following)f(sections)h(we)h(will)g(refer)e(to)i(the)f(algo-)
-182 2300 y(rithm,)h(and)h(its)h(implementation)d(as)j
Fh(synkill)p Fr(.)-182 2519 y Fp(5.1.1)81 b(Algorithm)-182
2675 y Fr(The)21 b Fh(synkill)h Fr(algorithm)e(classi\256es)j(the)g
(source)e(IP)h(addresses)-182 2774 y(of)k(TCP)i(packets)e(as)i(never)e
(seen)h(\()p Fg(=:)f Fs(null)p Fr(\),)i(belonging)c(to)j(cor)n(-)-182
2874 y(rectly)21 b(behaving)f(\()p Fg(=:)i Fs(good)p
Fr(\))f(hosts,)h(as)h(potentially)e(spoofed)f(ad-)-182
2974 y(dresses)32 b(\()p Fg(=:)f Fs(new)p Fr(\),)j(or)e(as)g(most)g
(certainly)e(spoofed)g(addresses)-182 3073 y(\()p Fg(=:)22
b Fs(bad)p Fr(\).)34 b(This)23 b(classi\256cation)g(is)h(based)f(on)f
(observed)f(network)-182 3173 y(traf)o(\256c)j(and)h(administratively)f
(supplied)h(input.)42 b(Addresses)25 b(that)-182 3273
y(are)14 b(administratively)f(con\256gured)f(as)k Fs(good)d
Fr(\()p Fs(bad)p Fr(\))g(are)h(called)h Fs(per)n(-)-182
3372 y(fect)20 b Fr(\()p Fs(evil)p Fr(\).)-83 3472 y
Fh(Synkill)32 b Fr(performs)e(several)i(processing)f(steps)i(on)f
(every)-182 3571 y(TCP)22 b(packet)f(that)h(is)h(observed)d(on)h(the)h
(local)f(area)h(network,)e(and)-182 3671 y(handles)k(asynchronous)f
(events,)k(such)e(as)h(administrative)f(input)-182 3771
y(and)k(timer)h(expirations.)56 b(TCP)31 b(packet)f(processing)f(can)h
(be)g(di-)-182 3870 y(vided)19 b(into:)-58 4030 y Ff(\017)41
b Fr(address)22 b(pre\256ltering,)e(where)i(the)g(program)e
(classi\256es)j(the)25 4130 y(observed)30 b(address)h(as)h(impossible,)
i(unassigned,)e(or)f(ad-)25 4229 y(ministratively)23
b(con\256gured)f(as)k Fs(perfect)e Fr(or)g Fs(evil)h
Fr(\(see)g(Sec-)25 4329 y(tion)20 b(5.1.2\))-58 4492
y Ff(\017)41 b Fr(a)22 b(decision)f(process)g(based)h(on)f(a)h(state)g
(machine)f(to)g(deter)n(-)25 4592 y(mine)i(correct)f(state)i
(membership)d(and)i(actions)f(\(see)i(Sec-)25 4691 y(tion)c(5.1.3\).)
-83 4851 y(The)g(program)e(can)i(take)g(two)g(possible)g(actions:)-58
5026 y Ff(\017)41 b Fh(Synkill)27 b Fr(sends)g(RST)h(packets)f
(whenever)f(it)i(observes)25 5126 y(connection)f(establishment)h
(attempts)g(from)g(impossible,)25 5225 y Fs(bad)p Fr(,)21
b(or)h Fs(evil)g Fr(IP)h(addresses)e(or)h(networks)f(\(See)h(Figures)f
(8,)25 5325 y(9,)31 b(and)d(1)m(1\).)50 b(The)29 b(purpose)e(of)h(this)
h(action)f(is)h(to)g(release)2187 1075 y @beginspecial
213 @llx 338 @lly 398 @urx 457 @ury 1850 @rwi @setspecial
%%BeginDocument: fig_a_d_rst.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
198.0 481.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawSplineSection {
	/y3 exch def
	/x3 exch def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/xa x1 x2 x1 sub 0.666667 mul add def
	/ya y1 y2 y1 sub 0.666667 mul add def
	/xb x3 x2 x3 sub 0.666667 mul add def
	/yb y3 y2 y3 sub 0.666667 mul add def
	x1 y1 lineto
	xa ya xb yb x3 y3 curveto
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1800 600 m 1800 2400 l gs col-1 s gr 
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 300 600 m 300 2400 l gs col-1 s gr 
% Polyline
gs  clippath
3162 1442 m 3273 1494 l 3150 1501 l 3309 1532 l 3321 1474 l  cp clip
n 300 900 m 3300 1500 l gs col-1 s gr gr

% arrowhead
n 3162 1442 m 3273 1494 l 3150 1501 l  col-1 s
% Polyline
gs  clippath
1200 2102 m 1076 2094 l 1189 2043 l 1030 2073 l 1041 2132 l  cp clip
n 3303 1664 m 1050 2100 l gs col-1 s gr gr

% arrowhead
n 1200 2102 m 1076 2094 l 1189 2043 l  col-1 s
% Polyline
n 3300 600 m 3300 2400 l gs col-1 s gr 
% Polyline
 [66.7] 0 sd
gs  clippath
3165 1803 m 3276 1855 l 3153 1862 l 3312 1893 l 3324 1835 l  cp clip
n 1803 1561 m 3303 1861 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3165 1803 m 3276 1855 l 3153 1862 l  col-1 s
% Open spline
gs n 1050.0 2100.0 m 1087.5 2137.5 l
	1087.5 2137.5 1125.0 2175.0 1087.5 2175.0 DrawSplineSection
	1087.5 2175.0 1050.0 2175.0 1087.5 2212.5 DrawSplineSection
	1087.5 2212.5 1125.0 2250.0 1087.5 2250.0 DrawSplineSection
	1050.0 2250.0 l  gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
900 975 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
825 1950 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (A) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (M) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
2250 1575 m
gs 1 -1 sc (RST) dup sw pop 2 div neg 0 rm  col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial 2073 1340 a Fo(Figure)40 b(8.)g(Attac)n(k)f(scenario:)66
b Fh(synkill)38 b Fo(g)q(ener)n(-)2073 1440 y(ates)28
b(RST)g(pac)n(ket)g(in)f(response)h(to)f Fs(bad)f Fo(or)i
Fs(evil)g Fo(IP)2073 1540 y(sour)n(ce)21 b(ad)o(dresses.)32
b(The)19 b(connection)f(at)h(D)h(is)f(im-)2073 1639 y(mediatel)o(y)27
b(mo)n(ved)f(into)f(the)h(CLOSED)g(state)g(and)2073 1739
y(resour)n(ces)f(are)e(released.)2181 2078 y Fr(the)d(resources)f
(allocated)g(at)i(the)e(destination)g(machine)g(for)2181
2178 y(connection)f(establishments.)2098 2355 y Ff(\017)41
b Fh(Synkill)34 b Fr(completes)f(TCP)h(connections)e(by)i(generat-)2181
2455 y(ing)g(the)g(third)f(message)h(of)g(the)g(three-way)e(handshake,)
2181 2555 y(and)26 b(sending)f(it)i(to)g(the)f(destination)g(\(See)g
(Figures)g(9,)i(10,)2181 2654 y(and)20 b(1)m(1\).)28
b(The)20 b(purpose)f(of)h(this)h(action)f(is)i(to)e(move)g(a)h(con-)
2181 2754 y(nection)g(quickly)g(from)g(the)h(SYN)p 3199
2754 25 4 v 30 w(RECVD)h(to)g(the)f(CON-)2181 2853 y(NECTED)27
b(state.)47 b(This)27 b(is)h(useful)e(if)h Fh(synkill)f
Fr(consid-)2181 2953 y(ers)15 b(the)g(connection)d(establishment)i
(attempt)g(to)h(be)f(illegiti-)2181 3053 y(mate.)26 b(This)15
b(approach)e(is)k(similar)e(to)h(the)f(semi-transparent)2181
3152 y(gateway)34 b(solution)f(described)g(in)i(Section)f(4.4.2)e(and)i
(is)2181 3252 y(also)19 b(potentially)e(subject)g(to)i(the)f(new)g
(degradation)d(of)j(ser)n(-)2181 3352 y(vice)25 b(attack)f(described)f
(in)h(2.2.3.)38 b(The)24 b(execution)f(of)h(this)2181
3451 y(action)c(is)h(optional.)1974 3688 y Fp(5.1.2)81
b(Operation)1974 3849 y Fr(In)15 b(addition)e(to)i(the)g(address)g
(classi\256cation,)h Fh(synkill)e Fr(performs)1974 3948
y(the)20 b(following)f(processing)g(steps.)2098 4123
y Ff(\017)41 b Fr(process)20 b(administrative)f(input)g
(\(asynchronously\))2098 4301 y Ff(\017)41 b Fr(handle)19
b Fs(expiry)i Fr(events)f(\(asynchronously\))2098 4478
y Ff(\017)41 b Fr(handle)19 b Fs(staleness)i Fr(events)f
(\(asynchronously\))2098 4656 y Ff(\017)41 b Fr(send)46
b(RST)g(for)f(all)h(impossible)f(addresses)g(\(e.g.,)51
b(net)2181 4756 y(0.0.0.0)18 b(or)i(127.0.0.0\))2098
4933 y Ff(\017)41 b Fr(send)19 b(ACK)g(to)g(complete)e(observed)g
(SYN+ACK)i(connec-)2181 5033 y(tions)2098 5211 y Ff(\017)41
b Fr(send)30 b(RST)h(for)e(all)i Fs(evil)f Fr(addresses)g(\(e.g.,)h
(nets)f(10.0.0.0,)2181 5310 y(172.16.0.0,)17 b(and)i(192.168.0.0;)e
(see)j([18)o(]\))p eop
%%Page: 9 9
9 8 bop 588 1800 a @beginspecial 61 @llx 576 @lly 371
@urx 792 @ury 3100 @rwi @setspecial
%%BeginDocument: synkill_state_diagram.epsi
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		}{}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(GOOD) 102.74 707.53 T
89.87 701.86 143.87 720 9.07 RR
0.5 H
2 Z
N
87.53 704.94 85.45 706.42 90.08 708.54 89.61 703.47 4 Y
0 Z
N
87.53 704.94 85.45 706.42 90.08 708.54 89.61 703.47 4 Y
V
87.39 704.74 M
 84.02 699.98 74.7 701.58 72.24 707.13 D
 68.74 715 76.45 720.5 82.97 719.77 D
 85.98 719.43 89.03 717.15 90.12 714.15 D
2 Z
N
145.9 704.94 143.82 703.47 143.34 708.54 147.97 706.42 4 Y
0 Z
N
145.9 704.94 143.82 703.47 143.34 708.54 147.97 706.42 4 Y
V
146.04 704.74 M
 149.41 699.98 158.73 701.58 161.19 707.13 D
 164.68 715 156.98 720.5 150.45 719.77 D
 147.45 719.43 144.4 717.15 143.31 714.15 D
2 Z
N
(PERFECT) 94.74 581.67 T
89.87 576 143.87 594.14 9.07 RR
N
87.53 579.09 85.45 580.56 90.08 582.69 89.61 577.62 4 Y
0 Z
N
87.53 579.09 85.45 580.56 90.08 582.69 89.61 577.62 4 Y
V
87.39 578.88 M
 84.02 574.13 74.7 575.72 72.24 581.27 D
 68.74 589.15 76.45 594.64 82.97 593.91 D
 85.98 593.57 89.03 591.29 90.12 588.29 D
2 Z
N
145.9 579.09 143.82 577.62 143.34 582.69 147.97 580.56 4 Y
0 Z
N
145.9 579.09 143.82 577.62 143.34 582.69 147.97 580.56 4 Y
V
146.04 578.88 M
 149.41 574.13 158.73 575.72 161.19 581.27 D
 164.68 589.15 156.98 594.64 150.45 593.91 D
 147.45 593.57 144.4 591.29 143.31 588.29 D
2 Z
N
(NEW) 205.24 617.53 T
188.87 611.86 242.87 630 9.07 RR
N
244.9 614.94 242.82 613.47 242.34 618.54 246.97 616.42 4 Y
0 Z
N
244.9 614.94 242.82 613.47 242.34 618.54 246.97 616.42 4 Y
V
245.04 614.74 M
 248.41 609.98 257.73 611.58 260.19 617.13 D
 263.68 625 255.98 630.5 249.45 629.77 D
 246.45 629.43 243.4 627.15 242.31 624.15 D
2 Z
N
(EVIL) 303.74 581.53 T
286.62 575.86 340.62 594 9.07 RR
N
284.28 578.94 282.21 580.42 286.83 582.54 286.36 577.47 4 Y
0 Z
N
284.28 578.94 282.21 580.42 286.83 582.54 286.36 577.47 4 Y
V
284.14 578.74 M
 280.77 573.98 271.45 575.58 268.99 581.13 D
 265.5 589 273.2 594.5 279.73 593.77 D
 282.73 593.43 285.78 591.15 286.87 588.15 D
2 Z
N
342.65 578.94 340.57 577.47 340.1 582.54 344.73 580.42 4 Y
0 Z
N
342.65 578.94 340.57 577.47 340.1 582.54 344.73 580.42 4 Y
V
342.79 578.74 M
 346.16 573.98 355.48 575.58 357.94 581.13 D
 361.44 589 353.73 594.5 347.21 593.77 D
 344.2 593.43 341.15 591.15 340.06 588.15 D
2 Z
N
(B) 307.24 707.78 T
(AD) 313.56 707.78 T
287.87 701.86 341.87 720 9.07 RR
N
343.83 704.56 341.71 703.12 341.34 708.22 345.94 705.99 4 Y
0 Z
N
343.83 704.56 341.71 703.12 341.34 708.22 345.94 705.99 4 Y
V
343.97 704.35 M
 347.3 699.46 356.72 701.01 359.19 706.75 D
 362.68 714.86 354.98 720.52 348.45 719.77 D
 345.45 719.42 342.4 717.07 341.31 713.98 D
2 Z
N
(NULL) 204.65 761.53 T
189 755.86 243 774 9.07 RR
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
(A) 123.97 752.27 T
(C) 129.99 752.27 T
(K) 136.53 752.27 T
(R) 153.06 752.27 T
(S) 159.09 752.27 T
(T) 164.12 752.27 T
2 F
(\332) 145.27 752.27 T
1 F
(u) 144.41 741.25 T
0 F
(-) 123.51 747.28 T
(-) 125 747.28 T
(-) 126.5 747.28 T
(-) 128 747.28 T
(-) 129.5 747.28 T
(-) 131 747.28 T
(-) 132.5 747.28 T
(-) 134 747.28 T
(-) 135.49 747.28 T
(-) 136.99 747.28 T
(-) 138.49 747.28 T
(-) 139.99 747.28 T
(-) 141.49 747.28 T
(-) 142.99 747.28 T
(-) 144.49 747.28 T
(-) 145.98 747.28 T
(-) 147.48 747.28 T
(-) 148.98 747.28 T
(-) 150.48 747.28 T
(-) 151.98 747.28 T
(-) 153.48 747.28 T
(-) 154.98 747.28 T
(-) 156.47 747.28 T
(-) 157.97 747.28 T
(-) 159.47 747.28 T
(-) 160.97 747.28 T
(-) 162.47 747.28 T
(-) 163.97 747.28 T
(-) 165.46 747.28 T
(-) 166.82 747.28 T
1 F
(A) 153.64 686.25 T
(C) 159.67 686.25 T
(K) 166.2 686.25 T
(R) 182.74 686.25 T
(S) 188.77 686.25 T
(T) 193.8 686.25 T
2 F
(\332) 174.95 686.25 T
1 F
(u) 174.09 675.23 T
0 F
(-) 153.18 681.25 T
(-) 154.68 681.25 T
(-) 156.18 681.25 T
(-) 157.68 681.25 T
(-) 159.17 681.25 T
(-) 160.67 681.25 T
(-) 162.17 681.25 T
(-) 163.67 681.25 T
(-) 165.17 681.25 T
(-) 166.67 681.25 T
(-) 168.16 681.25 T
(-) 169.66 681.25 T
(-) 171.16 681.25 T
(-) 172.66 681.25 T
(-) 174.16 681.25 T
(-) 175.66 681.25 T
(-) 177.16 681.25 T
(-) 178.65 681.25 T
(-) 180.15 681.25 T
(-) 181.65 681.25 T
(-) 183.15 681.25 T
(-) 184.65 681.25 T
(-) 186.15 681.25 T
(-) 187.65 681.25 T
(-) 189.14 681.25 T
(-) 190.64 681.25 T
(-) 192.14 681.25 T
(-) 193.64 681.25 T
(-) 195.14 681.25 T
(-) 196.5 681.25 T
1 F
(A) 60.97 689.27 T
(C) 67 689.27 T
(K) 73.53 689.27 T
(R) 90.06 689.27 T
(S) 96.09 689.27 T
(T) 101.12 689.27 T
2 F
(\332) 82.27 689.27 T
0 F
(-) 60.51 684.28 T
(-) 62.01 684.28 T
(-) 63.5 684.28 T
(-) 65 684.28 T
(-) 66.5 684.28 T
(-) 68 684.28 T
(-) 69.5 684.28 T
(-) 71 684.28 T
(-) 72.49 684.28 T
(-) 73.99 684.28 T
(-) 75.49 684.28 T
(-) 76.99 684.28 T
(-) 78.49 684.28 T
(-) 79.99 684.28 T
(-) 81.49 684.28 T
(-) 82.98 684.28 T
(-) 84.48 684.28 T
(-) 85.98 684.28 T
(-) 87.48 684.28 T
(-) 88.98 684.28 T
(-) 90.48 684.28 T
(-) 91.97 684.28 T
(-) 93.47 684.28 T
(-) 94.97 684.28 T
(-) 96.47 684.28 T
(-) 97.97 684.28 T
(-) 99.47 684.28 T
(-) 100.97 684.28 T
(-) 102.46 684.28 T
(-) 103.82 684.28 T
1 F
(A) 216.64 587.25 T
(C) 222.67 587.25 T
(K) 229.2 587.25 T
(R) 245.74 587.25 T
(S) 251.77 587.25 T
(T) 256.8 587.25 T
2 F
(\332) 237.95 587.25 T
0 F
(-) 216.18 582.25 T
(-) 217.68 582.25 T
(-) 219.18 582.25 T
(-) 220.68 582.25 T
(-) 222.17 582.25 T
(-) 223.67 582.25 T
(-) 225.17 582.25 T
(-) 226.67 582.25 T
(-) 228.17 582.25 T
(-) 229.67 582.25 T
(-) 231.16 582.25 T
(-) 232.66 582.25 T
(-) 234.16 582.25 T
(-) 235.66 582.25 T
(-) 237.16 582.25 T
(-) 238.66 582.25 T
(-) 240.16 582.25 T
(-) 241.65 582.25 T
(-) 243.15 582.25 T
(-) 244.65 582.25 T
(-) 246.15 582.25 T
(-) 247.65 582.25 T
(-) 249.15 582.25 T
(-) 250.65 582.25 T
(-) 252.14 582.25 T
(-) 253.64 582.25 T
(-) 255.14 582.25 T
(-) 256.64 582.25 T
(-) 258.14 582.25 T
(-) 259.5 582.25 T
1 F
(S) 343.88 614.25 T
(Y) 348.91 614.25 T
(N) 354.45 614.25 T
(s) 333.18 603.23 T
(e) 337.21 603.23 T
(n) 341.74 603.23 T
(d) 346.77 603.23 T
(R) 354.94 603.23 T
(S) 360.97 603.23 T
(T) 366 603.23 T
0 F
(-) 333.18 609.25 T
(-) 334.68 609.25 T
(-) 336.18 609.25 T
(-) 337.67 609.25 T
(-) 339.17 609.25 T
(-) 340.67 609.25 T
(-) 342.17 609.25 T
(-) 343.67 609.25 T
(-) 345.17 609.25 T
(-) 346.67 609.25 T
(-) 348.17 609.25 T
(-) 349.66 609.25 T
(-) 351.16 609.25 T
(-) 352.66 609.25 T
(-) 354.16 609.25 T
(-) 355.66 609.25 T
(-) 357.16 609.25 T
(-) 358.65 609.25 T
(-) 360.15 609.25 T
(-) 361.65 609.25 T
(-) 363.15 609.25 T
(-) 364.65 609.25 T
(-) 366.15 609.25 T
(-) 367.64 609.25 T
(-) 368.7 609.25 T
1 F
(S) 273.82 623.25 T
(Y) 278.85 623.25 T
(N) 284.39 623.25 T
(r) 268.93 612.23 T
(e) 272.96 612.23 T
(c) 277.49 612.23 T
(o) 282.02 612.23 T
(r) 287.05 612.23 T
(d) 291.08 612.23 T
0 F
(-) 268.93 618.25 T
(-) 270.43 618.25 T
(-) 271.93 618.25 T
(-) 273.43 618.25 T
(-) 274.93 618.25 T
(-) 276.42 618.25 T
(-) 277.92 618.25 T
(-) 279.42 618.25 T
(-) 280.92 618.25 T
(-) 282.42 618.25 T
(-) 283.92 618.25 T
(-) 285.42 618.25 T
(-) 286.91 618.25 T
(-) 288.41 618.25 T
(-) 289.91 618.25 T
(-) 291.41 618.25 T
(-) 292.82 618.25 T
1 F
(S) 343.88 689.27 T
(Y) 348.91 689.27 T
(N) 354.45 689.27 T
(s) 333.18 678.25 T
(e) 337.21 678.25 T
(n) 341.74 678.25 T
(d) 346.77 678.25 T
(R) 354.94 678.25 T
(S) 360.97 678.25 T
(T) 366 678.25 T
0 F
(-) 333.18 684.28 T
(-) 334.68 684.28 T
(-) 336.18 684.28 T
(-) 337.67 684.28 T
(-) 339.17 684.28 T
(-) 340.67 684.28 T
(-) 342.17 684.28 T
(-) 343.67 684.28 T
(-) 345.17 684.28 T
(-) 346.67 684.28 T
(-) 348.17 684.28 T
(-) 349.66 684.28 T
(-) 351.16 684.28 T
(-) 352.66 684.28 T
(-) 354.16 684.28 T
(-) 355.66 684.28 T
(-) 357.16 684.28 T
(-) 358.65 684.28 T
(-) 360.15 684.28 T
(-) 361.65 684.28 T
(-) 363.15 684.28 T
(-) 364.65 684.28 T
(-) 366.15 684.28 T
(-) 367.64 684.28 T
(-) 368.7 684.28 T
1 F
(S) 230.61 740.25 T
(Y) 235.64 740.25 T
(N) 241.18 740.25 T
(r) 218.51 729.23 T
(e) 222.54 729.23 T
(c) 227.07 729.23 T
(o) 231.6 729.23 T
(r) 236.62 729.23 T
(d) 240.66 729.23 T
(u) 255.32 729.23 T
2 F
(\331) 247.65 729.23 T
0 F
(-) 218.51 735.25 T
(-) 220.01 735.25 T
(-) 221.51 735.25 T
(-) 223.01 735.25 T
(-) 224.51 735.25 T
(-) 226 735.25 T
(-) 227.5 735.25 T
(-) 229 735.25 T
(-) 230.5 735.25 T
(-) 232 735.25 T
(-) 233.5 735.25 T
(-) 234.99 735.25 T
(-) 236.49 735.25 T
(-) 237.99 735.25 T
(-) 239.49 735.25 T
(-) 240.99 735.25 T
(-) 242.49 735.25 T
(-) 243.99 735.25 T
(-) 245.48 735.25 T
(-) 246.98 735.25 T
(-) 248.48 735.25 T
(-) 249.98 735.25 T
(-) 251.48 735.25 T
(-) 252.98 735.25 T
(-) 254.48 735.25 T
(-) 255.97 735.25 T
(-) 256.82 735.25 T
1 F
(S) 170.71 713.25 T
(Y) 175.74 713.25 T
(N) 181.28 713.25 T
(u) 177.02 702.23 T
0 F
(-) 170.71 708.25 T
(-) 172.21 708.25 T
(-) 173.71 708.25 T
(-) 175.21 708.25 T
(-) 176.71 708.25 T
(-) 178.21 708.25 T
(-) 179.7 708.25 T
(-) 181.2 708.25 T
(-) 182.7 708.25 T
(-) 184.2 708.25 T
(-) 184.82 708.25 T
(Staleness) 130.09 650.25 T
1 F
(r) 126.18 639.23 T
(e) 130.21 639.23 T
(c) 134.74 639.23 T
(o) 139.26 639.23 T
(r) 144.29 639.23 T
(d) 148.32 639.23 T
(u) 162.99 639.23 T
2 F
(\331) 155.32 639.23 T
0 F
(-) 126.18 645.25 T
(-) 127.68 645.25 T
(-) 129.18 645.25 T
(-) 130.68 645.25 T
(-) 132.17 645.25 T
(-) 133.67 645.25 T
(-) 135.17 645.25 T
(-) 136.67 645.25 T
(-) 138.17 645.25 T
(-) 139.67 645.25 T
(-) 141.16 645.25 T
(-) 142.66 645.25 T
(-) 144.16 645.25 T
(-) 145.66 645.25 T
(-) 147.16 645.25 T
(-) 148.66 645.25 T
(-) 150.16 645.25 T
(-) 151.65 645.25 T
(-) 153.15 645.25 T
(-) 154.65 645.25 T
(-) 156.15 645.25 T
(-) 157.65 645.25 T
(-) 159.15 645.25 T
(-) 160.65 645.25 T
(-) 162.14 645.25 T
(-) 163.64 645.25 T
(-) 164.49 645.25 T
(Expiry) 271.32 650.25 T
(-) 271.32 645.25 T
(-) 272.82 645.25 T
(-) 274.32 645.25 T
(-) 275.82 645.25 T
(-) 277.32 645.25 T
(-) 278.82 645.25 T
(-) 280.31 645.25 T
(-) 281.81 645.25 T
(-) 283.31 645.25 T
(-) 284.81 645.25 T
(-) 286.31 645.25 T
(-) 287.81 645.25 T
(-) 289.3 645.25 T
(-) 290.8 645.25 T
(-) 292.3 645.25 T
(-) 292.82 645.25 T
216 634.95 218.57 634.95 216 630.5 213.43 634.95 4 Y
0 Z
N
216 634.95 218.57 634.95 216 630.5 213.43 634.95 4 Y
V
216 756 216 635.2 2 L
2 Z
N
228.7 633.29 230.4 631.37 225.37 630.33 226.99 635.2 4 Y
0 Z
N
228.7 633.29 230.4 631.37 225.37 630.33 226.99 635.2 4 Y
V
306 702 228.88 633.45 2 L
2 Z
N
311.3 698.71 309.6 700.63 314.63 701.67 313.01 696.8 4 Y
0 Z
N
311.3 698.71 309.6 700.63 314.63 701.67 313.01 696.8 4 Y
V
234 630 311.12 698.55 2 L
2 Z
N
194.3 633.29 196.01 635.2 197.63 630.33 192.6 631.37 4 Y
0 Z
N
194.3 633.29 196.01 635.2 197.63 630.33 192.6 631.37 4 Y
V
117 702 194.12 633.45 2 L
2 Z
N
129.7 698.71 127.99 696.8 126.37 701.67 131.4 700.63 4 Y
0 Z
N
129.7 698.71 127.99 696.8 126.37 701.67 131.4 700.63 4 Y
V
207 630 129.88 698.55 2 L
2 Z
N
121.52 722.01 122.56 719.66 117.46 720.2 120.48 724.35 4 Y
0 Z
N
121.52 722.01 122.56 719.66 117.46 720.2 120.48 724.35 4 Y
V
198 756 121.75 722.11 2 L
2 Z
N
1 F
(S) 171.18 587.25 T
(Y) 176.21 587.25 T
(N) 181.74 587.25 T
0 F
(-) 171.18 582.25 T
(-) 172.68 582.25 T
(-) 174.18 582.25 T
(-) 175.68 582.25 T
(-) 177.17 582.25 T
(-) 178.67 582.25 T
(-) 180.17 582.25 T
(-) 181.67 582.25 T
(-) 183.17 582.25 T
(-) 184.67 582.25 T
(-) 185.29 582.25 T
216 778.95 218.57 778.95 216 774.5 213.43 778.95 4 Y
0 Z
N
216 778.95 218.57 778.95 216 774.5 213.43 778.95 4 Y
V
216 792 216 779.2 2 L
2 Z
N
0 10 Q
(be) 225 783 T
(gin) 234.29 783 T
1 9 Q
(A) 60.97 608.27 T
(C) 67 608.27 T
(K) 73.53 608.27 T
(R) 90.06 608.27 T
(S) 96.09 608.27 T
(T) 101.12 608.27 T
2 F
(\332) 82.27 608.27 T
0 F
(-) 60.51 603.28 T
(-) 62.01 603.28 T
(-) 63.5 603.28 T
(-) 65 603.28 T
(-) 66.5 603.28 T
(-) 68 603.28 T
(-) 69.5 603.28 T
(-) 71 603.28 T
(-) 72.49 603.28 T
(-) 73.99 603.28 T
(-) 75.49 603.28 T
(-) 76.99 603.28 T
(-) 78.49 603.28 T
(-) 79.99 603.28 T
(-) 81.49 603.28 T
(-) 82.98 603.28 T
(-) 84.48 603.28 T
(-) 85.98 603.28 T
(-) 87.48 603.28 T
(-) 88.98 603.28 T
(-) 90.48 603.28 T
(-) 91.97 603.28 T
(-) 93.47 603.28 T
(-) 94.97 603.28 T
(-) 96.47 603.28 T
(-) 97.97 603.28 T
(-) 99.47 603.28 T
(-) 100.97 603.28 T
(-) 102.46 603.28 T
(-) 103.82 603.28 T
1 F
(A) 231.97 686.25 T
(C) 237.99 686.25 T
(K) 244.53 686.25 T
(R) 261.06 686.25 T
(S) 267.09 686.25 T
(T) 272.12 686.25 T
2 F
(\332) 253.27 686.25 T
1 F
(u) 252.41 675.23 T
0 F
(-) 231.51 681.25 T
(-) 233.01 681.25 T
(-) 234.5 681.25 T
(-) 236 681.25 T
(-) 237.5 681.25 T
(-) 239 681.25 T
(-) 240.5 681.25 T
(-) 242 681.25 T
(-) 243.49 681.25 T
(-) 244.99 681.25 T
(-) 246.49 681.25 T
(-) 247.99 681.25 T
(-) 249.49 681.25 T
(-) 250.99 681.25 T
(-) 252.49 681.25 T
(-) 253.98 681.25 T
(-) 255.48 681.25 T
(-) 256.98 681.25 T
(-) 258.48 681.25 T
(-) 259.98 681.25 T
(-) 261.48 681.25 T
(-) 262.98 681.25 T
(-) 264.47 681.25 T
(-) 265.97 681.25 T
(-) 267.47 681.25 T
(-) 268.97 681.25 T
(-) 270.47 681.25 T
(-) 271.97 681.25 T
(-) 273.46 681.25 T
(-) 274.82 681.25 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial -83 2066 a Fo(Figure)29 b(12.)g(The)f Fh(synkill)f
Fo(\256nite)h(state)g(mac)o(hine)r(.)49 b(The)28 b(dia)o(gram)h(does)f
(not)g(contain)g(the)g(optional)f(action)i(of)-83 2165
y(sending)23 b(A)m(CK)f(pac)n(kets.)-119 3807 y @beginspecial
195 @llx 320 @lly 416 @urx 475 @ury 2210 @rwi @setspecial
%%BeginDocument: fig_a_d_ack_rst.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
189.0 499.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawSplineSection {
	/y3 exch def
	/x3 exch def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/xa x1 x2 x1 sub 0.666667 mul add def
	/ya y1 y2 y1 sub 0.666667 mul add def
	/xb x3 x2 x3 sub 0.666667 mul add def
	/yb y3 y2 y3 sub 0.666667 mul add def
	x1 y1 lineto
	xa ya xb yb x3 y3 curveto
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1650 600 m 1650 3000 l gs col-1 s gr 
% Polyline
n 150 600 m 150 600 l gs col-1 s gr
% Polyline
gs  clippath
2857 1154 m 2973 1197 l 2851 1214 l 3012 1231 l 3018 1172 l  cp clip
n 300 900 m 3000 1200 l gs col-1 s gr gr

% arrowhead
n 2857 1154 m 2973 1197 l 2851 1214 l  col-1 s
% Polyline
n 300 600 m 300 3000 l gs col-1 s gr 
% Polyline
n 3000 600 m 3000 3000 l gs col-1 s gr 
% Polyline
gs  clippath
1051 1608 m 928 1591 l 1045 1549 l 884 1566 l 890 1625 l  cp clip
n 3002 1369 m 902 1594 l gs col-1 s gr gr

% arrowhead
n 1051 1608 m 928 1591 l 1045 1549 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
2856 1766 m 2970 1813 l 2847 1825 l 3007 1850 l 3016 1791 l  cp clip
n 1644 1607 m 2997 1818 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 2856 1766 m 2970 1813 l 2847 1825 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
2859 2724 m 2973 2771 l 2850 2784 l 3011 2807 l 3019 2747 l  cp clip
n 1647 2581 m 3000 2775 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 2859 2724 m 2973 2771 l 2850 2784 l  col-1 s
% Polyline
gs  clippath
1605 2478 m 1575 2598 l 1545 2478 l 1545 2640 l 1605 2640 l  cp clip
1545 1722 m 1575 1602 l 1605 1722 l 1605 1560 l 1545 1560 l  cp clip
n 1575 1575 m 1575 2625 l gs col-1 s gr gr

% arrowhead
n 1545 1722 m 1575 1602 l 1605 1722 l  col-1 s
% arrowhead
n 1605 2478 m 1575 2598 l 1545 2478 l  col-1 s
% Open spline
gs n 900.0 1575.0 m 937.5 1612.5 l
	937.5 1612.5 975.0 1650.0 937.5 1650.0 DrawSplineSection
	937.5 1650.0 900.0 1650.0 937.5 1687.5 DrawSplineSection
	937.5 1687.5 975.0 1725.0 937.5 1725.0 DrawSplineSection
	900.0 1725.0 l  gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
3150 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
150 525 m
gs 1 -1 sc (A) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1650 525 m
gs 1 -1 sc (M) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
750 900 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
450 1500 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2025 1875 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 2550 m
gs 1 -1 sc (RST) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1500 2325 m
gs 1 -1 sc  90.0 rot (Expiry) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 1485 m
gs 1 -1 sc (SYN_RECVD) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 1980 m
gs 1 -1 sc (CONNECTED) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 2970 m
gs 1 -1 sc (CLOSED) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3075 1125 m
gs 1 -1 sc (LISTEN) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial -83 4073 a(Figure)g(9.)f(Attac)n(k)h(scenario:)32
b Fh(synkill)20 b Fo(sends)i(an)-83 4172 y(A)m(CK)15
b(pac)n(ket)g(to)f(complete)h(the)g(connection.)28 b(After)-83
4272 y Fs(expiry)23 b Fo(has)g(passed,)g Fh(synkill)f
Fo(g)q(enerates)h(a)g(RST)-7 b(.)-182 4647 y Fp(5.1.3)81
b(State)19 b(Machine)-83 4827 y Fr(After)h(the)f(preprocessing)e(steps)
k(are)e(taken,)g Fh(synkill)g Fr(oper)n(-)-182 4926 y(ates)i(as)h(a)f
(state)h(machine)e(\(see)h(Figure)f(12\).)29 b(The)20
b(source)g(address)-182 5026 y(of)g(each)h(TCP)h(packet)e(is)i
(examined)e(to)h(determine)f(the)h(set)h(mem-)-182 5126
y(bership)j(of)h(the)h(address)f(\()p Fs(null)p Fr(,)h
Fs(new)p Fr(,)h Fs(bad)p Fr(,)f(or)f Fs(good)p Fr(\).)44
b Fs(Null)27 b Fr(ad-)-182 5225 y(dresses)18 b(are)f(not)g(saved)h
(explicitly)-5 b(,)16 b(because)h(it)i(is)f(not)g(practical)f(to)-182
5325 y(keep)22 b(data)h(structures)f(for)g(all)h(possible)g(IP)g
(addresses.)35 b(If)23 b(an)f(ad-)1974 2515 y(dress)f(is)g(not)g
(present)f(in)h(the)f(database,)g(it)i(is)g(considered)c(to)j(be)g(in)
1974 2615 y(state)g Fs(null)p Fr(.)2073 2715 y(Figure)26
b(12)f(depicts)h(the)g(state)h(machine.)43 b(The)25 b(symbol)h
Fs(u)g Fr(de-)1974 2814 y(notes)31 b(when)g(the)g(timestamp)g(of)g(a)h
(given)f(address)g(is)h(updated.)1974 2914 y(These)18
b(timestamps)f(are)h(used)g(to)g(generate)e(timer)i(events)f(\(see)i
(be-)1974 3013 y(low\).)40 b Fs(Recor)m(d)25 b Fr(denotes)f(where)g
(datagram)f(information)g(\(IP)i(ad-)1974 3113 y(dresses,)20
b(ports,)f(and)g(sequence)f(numbers\))g(is)j(recorded,)c(so)j(that)g(a)
1974 3213 y(RST)25 b(can)e(be)h(generated)e(later)i(if)g(necessary)-5
b(.)37 b(There)23 b(are)g(several)1974 3312 y(distinct)c(sets)h(of)f
(events:)27 b(observed)17 b(TCP)j(packets,)f(timer)g(events,)1974
3412 y(and)g(administrative)g(commands:)2078 3588 y(1.)40
b(Observed)19 b(TCP)i(packets)2181 3767 y Fp(SYN)42 b
Fr(TCP)18 b(packets)f(with)g(the)h(SYN)g(bit)f(set)h(are)g(the)f
(initial)2364 3867 y(message)26 b(of)h(any)e(TCP)j(connection)c
(establishment)2364 3966 y(attempt.)h(The)14 b(state)i(machine)e(is)i
(designed)d(to)i(ignore)2364 4066 y(SYNs)j(for)f(addresses)g(that)h
(are)f(in)h(the)f Fs(new)p Fr(,)h Fs(good)p Fr(,)e(or)2364
4166 y Fs(perfect)26 b Fr(states.)45 b(For)26 b(addresses)f(in)h(the)g
Fs(bad)f Fr(or)h Fs(evil)2364 4265 y Fr(states,)21 b(a)g(RST)g(packet)e
(is)i(generated)e(and)g(sent.)2364 4380 y(The)26 b(very)f(\256rst)i
(packet)e(received)g(from)g(an)h(address)2364 4480 y(with)21
b(its)g(SYN)g(bit)f(set)h(is)h(moved)c(into)j(the)f Fs(new)g
Fr(state)2364 4580 y(to)26 b(indicate)g(suspicion.)44
b(As)27 b(soon)f(as)h(further)e(valid)2364 4679 y(TCP)17
b(traf)o(\256c)e(from)g(that)h(address)g(is)h(observed)d(\(ACK,)2364
4779 y(RST\))21 b(the)f(address)g(is)h(moved)e(into)g(the)i
Fs(good)d Fr(state.)2181 4909 y Fp(ACK,)i(RST)42 b Fr(If)34
b Fh(synkill)g Fr(receives)g(a)h(valid)e(ACK)i(or)2364
5009 y(RST)23 b(packets)f(from)f(an)i(address,)f(it)h(means)f(that)g
(the)2364 5108 y(host)17 b(generates)g(valid)g(packets)g(and)g(the)g
(address)g(can)2364 5208 y(be)22 b(considered)d Fs(good)p
Fr(.)30 b(The)22 b(address)f(is)h(moved)e(into)2364 5308
y(the)g Fs(good)f Fr(state.)p eop
%%Page: 10 10
10 9 bop 27 1525 a @beginspecial 212 @llx 311 @lly 398
@urx 484 @ury 1860 @rwi @setspecial
%%BeginDocument: fig_s_d_ack_ack.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
197.5 508.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1800 600 m 1800 3300 l gs col-1 s gr 
% Polyline
n 300 600 m 300 600 l gs col-1 s gr
% Polyline
n 3300 600 m 3300 3300 l gs col-1 s gr 
% Polyline
n 300 600 m 300 3300 l gs col-1 s gr 
% Polyline
gs  clippath
3162 1442 m 3273 1494 l 3150 1501 l 3309 1532 l 3321 1474 l  cp clip
n 300 900 m 3300 1500 l gs col-1 s gr gr

% arrowhead
n 3162 1442 m 3273 1494 l 3150 1501 l  col-1 s
% Polyline
gs  clippath
450 2251 m 326 2244 l 439 2192 l 280 2223 l 291 2282 l  cp clip
n 3303 1664 m 300 2250 l gs col-1 s gr gr

% arrowhead
n 450 2251 m 326 2244 l 439 2192 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
3159 2281 m 3270 2333 l 3147 2340 l 3306 2371 l 3318 2313 l  cp clip
n 1797 2039 m 3297 2339 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 3159 2281 m 3270 2333 l 3147 2340 l  col-1 s
% Polyline
gs  clippath
3165 2928 m 3276 2980 l 3153 2987 l 3312 3018 l 3324 2960 l  cp clip
n 303 2386 m 3303 2986 l gs col-1 s gr gr

% arrowhead
n 3165 2928 m 3276 2980 l 3153 2987 l  col-1 s
/Times-Roman ff 180.00 scf sf
900 975 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
600 1950 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 180.00 scf sf
2700 2100 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
2325 2700 m
gs 1 -1 sc (ACK) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
300 525 m
gs 1 -1 sc (S) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3300 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (M) dup sw pop 2 div neg 0 rm  col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial -83 1790 a Fo(Figure)22 b(10.)g(Normal)g(access)h
(scenario:)32 b Fh(synkill)-83 1890 y Fo(g)q(enerates)26
b(and)f(sends)g(an)g(A)m(CK)g(pac)n(ket)h(to)e(com-)-83
1990 y(plete)41 b(the)f(pending)f(connection.)84 b(The)40
b(\252dupli-)-83 2089 y(cate\272)19 b(A)m(CK)g(fr)n(om)g(the)g
(original)g(sour)n(ce)h(A)f(reac)o(hes)-83 2189 y(D)k(later)h(and)e(is)
i(ignored.)-79 2509 y Fr(2.)41 b(T)m(imer)20 b(events)25
2680 y Fp(expiry)41 b Fr(An)32 b Fs(expiry)g Fr(event)g(occurs)g(if)g
(the)h(timer)f(associ-)208 2780 y(ated)f(with)g(an)g(address)f(in)i
(the)f Fs(new)g Fr(state)h(expires.)208 2880 y(This)15
b(means)g(that)g Fh(synkill)f Fr(has)h(not)g(observed)e(any)208
2979 y(valid)j(TCP)i(traf)o(\256c)e(from)f(that)i(address.)25
b(The)16 b(address)208 3079 y(is)27 b(therefore)e(moved)h(into)g(the)h
Fs(bad)f Fr(state)h(and)f(RST)208 3179 y(packets)14 b(are)h(generated)d
(and)j(sent)f(for)g(all)i(SYN)f(pack-)208 3278 y(ets)26
b(from)e(that)i(address)f(that)g(were)g(observed)f(while)208
3378 y(the)17 b(address)h(was)g(in)g(the)f Fs(new)h Fr(state.)27
b(Ideally)-5 b(,)17 b(the)g(ex-)208 3477 y(piry)i(timer)h(should)f(be)h
(much)f(smaller)h(than)f(the)h(cur)n(-)208 3577 y(rent)15
b(75)g(seconds)g(timeout.)25 b(The)15 b(smaller)h(the)g(chosen)208
3677 y(value)h(the)g(more)g(likely)g(it)h(is)h(for)d(legitimate)i
(connec-)208 3776 y(tions)i(to)g(be)h(erroneously)c(denied)i(by)h
Fh(synkill)p Fr(.)208 3894 y(Because)28 b(RST)-6 b(s)29
b(are)f(sent)h(after)e(the)h(SYN)h(was)g(ob-)208 3994
y(served,)42 b(the)d(destination)f(machine)g(will)i(respond)208
4093 y(with)e(a)g(SYN+ACK)g(and)f(thus)h(trigger)f(the)h(third)208
4193 y(message)18 b(of)f(the)h(three-way)e(handshake.)24
b(This)19 b(third)208 4293 y(message)34 b(\(an)h(ACK\))g(will)g(cause)g
Fh(synkill)84 b Fr(to)208 4392 y(reclassify)28 b(the)g(observed)f
(address)h(as)h Fs(good)p Fr(.)51 b(Sub-)208 4492 y(sequent)22
b(connection)e(establishment)i(attempts)h(will)208 4591
y(therefore)18 b(succeed.)25 4727 y Fp(staleness)42 b
Fr(The)15 b(notion)g(of)g(staleness)i(was)f(introduced)e(as)i(a)208
4827 y(mechanism)j(to)i(allow)g(addresses)f(in)h(the)g
Fs(good)e Fr(state)208 4926 y(to)j(leave)g(the)h Fs(good)e
Fr(state)i(after)f(no)f(TCP)j(traf)o(\256c)d(was)208
5026 y(observed)d(from)g(that)i(address)f(for)g(a)h(period)e(of)h
(time,)208 5126 y(i.e.,)e(the)g(staleness)g(period.)25
b(This)17 b(allows)g Fh(synkill)208 5225 y Fr(to)f(correctly)f
(classify)h(spoofed)f(IP)h(addresses)g(as)h Fs(bad)208
5325 y Fr(even)22 b(if)h(they)f(were)g(once)g Fs(good)g
Fr(\320)h(as)g(long)f(as)h(they)2000 1675 y @beginspecial
189 @llx 302 @lly 419 @urx 493 @ury 2300 @rwi @setspecial
%%BeginDocument: fig_s_d_ack_rst_ack.epsi
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
188.0 517.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 75 900 m 750 975 l gs col-1 s gr 
% Polyline
gs  clippath
2931 1460 m 3047 1503 l 2925 1520 l 3085 1539 l 3092 1479 l  cp clip
n 1050 1275 m 3074 1507 l gs col-1 s gr gr

% arrowhead
n 2931 1460 m 3047 1503 l 2925 1520 l  col-1 s
% Polyline
 [66.7] 0 sd
n 750 975 m 825 1050 l 825 1125 l 900 1125 l 975 1200 l 1050 1275 l gs col-1 s gr  [] 0 sd
% Polyline
n 1050 1800 m 3074 1568 l gs col-1 s gr 
% Polyline
 [66.7] 0 sd
n 750 2100 m 825 2025 l 825 1950 l 900 1950 l 975 1875 l 1050 1800 l gs col-1 s gr  [] 0 sd
% Polyline
gs  clippath
224 2189 m 101 2172 l 218 2129 l 57 2147 l 63 2206 l  cp clip
n 75 2175 m 750 2100 l gs col-1 s gr gr

% arrowhead
n 224 2189 m 101 2172 l 218 2129 l  col-1 s
% Polyline
n 1050 3075 m 3074 2843 l gs col-1 s gr 
% Polyline
 [66.7] 0 sd
n 750 3375 m 825 3300 l 825 3225 l 900 3225 l 975 3150 l 1050 3075 l gs col-1 s gr  [] 0 sd
% Polyline
gs  clippath
224 3464 m 101 3447 l 218 3404 l 57 3422 l 63 3481 l  cp clip
n 75 3450 m 750 3375 l gs col-1 s gr gr

% arrowhead
n 224 3464 m 101 3447 l 218 3404 l  col-1 s
% Polyline
n 75 2175 m 750 2250 l gs col-1 s gr 
% Polyline
gs  clippath
2931 2735 m 3047 2778 l 2925 2795 l 3085 2814 l 3092 2754 l  cp clip
n 1050 2550 m 3074 2782 l gs col-1 s gr gr

% arrowhead
n 2931 2735 m 3047 2778 l 2925 2795 l  col-1 s
% Polyline
 [66.7] 0 sd
n 750 2250 m 825 2325 l 825 2400 l 900 2400 l 975 2475 l 1050 2550 l gs col-1 s gr  [] 0 sd
% Polyline
n 75 600 m 75 600 l gs col-1 s gr
% Polyline
n 3075 600 m 3075 3600 l gs col-1 s gr 
% Polyline
n 75 600 m 75 3600 l gs col-1 s gr 
% Polyline
n 1800 600 m 1800 3600 l gs col-1 s gr 
% Polyline
 [15 50.0] 50.0 sd
n 750 600 m 750 3600 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 50.0] 50.0 sd
n 1050 600 m 1050 3600 l gs col-1 s gr  [] 0 sd
% Polyline
 [66.7] 0 sd
gs  clippath
2935 1890 m 3050 1933 l 2928 1950 l 3088 1969 l 3095 1909 l  cp clip
n 1802 1787 m 3077 1937 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 2935 1890 m 3050 1933 l 2928 1950 l  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
2933 2432 m 3048 2475 l 2926 2492 l 3086 2511 l 3093 2451 l  cp clip
n 1800 2329 m 3075 2479 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 2933 2432 m 3048 2475 l 2926 2492 l  col-1 s
% Polyline
gs  clippath
1755 2178 m 1725 2298 l 1695 2178 l 1695 2340 l 1755 2340 l  cp clip
1695 1947 m 1725 1827 l 1755 1947 l 1755 1785 l 1695 1785 l  cp clip
n 1725 1800 m 1725 2325 l gs col-1 s gr gr

% arrowhead
n 1695 1947 m 1725 1827 l 1755 1947 l  col-1 s
% arrowhead
n 1755 2178 m 1725 2298 l 1695 2178 l  col-1 s
/Times-Roman ff 120.00 scf sf
3150 1425 m
gs 1 -1 sc (LISTEN) col-1 sh gr
/Times-Roman ff 180.00 scf sf
75 525 m
gs 1 -1 sc (S) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
3075 525 m
gs 1 -1 sc (D) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 180.00 scf sf
1800 525 m
gs 1 -1 sc (M) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman ff 135.00 scf sf
2175 1350 m
gs 1 -1 sc (SYN) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1125 1725 m
gs 1 -1 sc (SYN+ACK) col-1 sh gr
/Times-Roman ff 135.00 scf sf
2400 3075 m
gs 1 -1 sc (RST) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1875 1950 m
gs 1 -1 sc (ACK) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1875 2325 m
gs 1 -1 sc (RST) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 1710 m
gs 1 -1 sc (SYN_RECVD) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 2055 m
gs 1 -1 sc (CONNECTED) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 2550 m
gs 1 -1 sc (CLOSED) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 2910 m
gs 1 -1 sc (Too late) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1350 2175 m
gs 1 -1 sc (Expiry) col-1 sh gr
/Times-Roman ff 135.00 scf sf
1125 2550 m
gs 1 -1 sc (ACK) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument
 @endspecial 2073 1940 a Fo(Figure)j(11.)h(Normal)f(access)h(scenario:)
38 b(the)26 b(con-)2073 2040 y(nection)15 b(dela)n(y)h(between)e(a)h(v)
n(alid)h(sour)n(ce)g(mac)o(hine)2073 2140 y(and)40 b(the)f(destination)
f(is)i(lar)o(g)q(e)r(.)82 b Fh(Synkill)38 b Fo(will)2073
2239 y(g)q(enerate)g(a)g(RST)g(too)f(earl)o(y)i(if)e(the)h
Fs(expiry)f Fo(timer)2073 2339 y(v)n(alue)24 b(is)g(not)e(c)o(hosen)h
(carefull)o(y!)2364 2650 y Fr(\256rst)e(became)e(stale.)2181
2813 y(This)32 b(can)g(be)f(implemented)f(either)h(with)h(explicit)f
(timer)2181 2912 y(events,)20 b(or)g(with)g(a)h(timestamp)e(per)h
(address)g(that)g(is)h(exam-)2181 3012 y(ined)f(the)g(next)g(time)g
(the)h(address)e(is)i(processed.)1974 3217 y Fq(5.2)o(.)i
(Implementation)2073 3421 y Fr(W)-7 b(e)17 b(have)d(implemented)f(this)
j(algorithm)d(in)j(the)f(programming)1974 3521 y(language)i(C)j(with)f
(a)g(T)-6 b(cl/Tk)19 b(graphical)e(user)i(interface.)26
b(The)18 b(pro-)1974 3621 y(gram)g(can)g(execute)g(in)h(the)f
(foreground)d(or)k(as)g(a)g(daemon.)25 b(Its)19 b(out-)1974
3720 y(put)29 b(can)g(be)h(redirected)e(to)h(syslog.)55
b(Currently)-5 b(,)29 b(the)h(program')-5 b(s)1974 3820
y(classi\256cation)25 b(database)f(can)g(grow)g(to)h(over)f(47600)f
(entries)i(and)1974 3919 y(it)h(garbage)e(collects)i(database)f
(entries)g(if)h(the)f(database)g(is)i(\256lled)1974 4019
y(beyond)22 b(a)i(certain)f(watermark.)37 b(It)24 b(utilizes)g(the)g
(Packet)g(Capture)1974 4119 y(library)29 b(from)h(the)h(Lawrence)e
(Berkeley)h(National)g(Laboratory)-5 b(,)1974 4218 y(a)30
b(high)g(level)g(interface)f(to)h(packet)g(capture)f(systems,)j(to)f
(make)1974 4318 y(all)21 b(packets)f(on)g(the)g(monitored)e(network)h
(accessible)i(in)g(a)f(highly)1974 4418 y(portable)f(manner)-5
b(.)2073 4517 y(There)28 b(is)i(a)f(rich)g(set)h(of)e(administrative)f
(commands)h(to)h(ma-)1974 4617 y(nipulate)e(the)h(address)f
(classi\256cation)h(database,)h(display)e(statis-)1974
4717 y(tics)17 b(and)f(modify)e(the)i(con\256guration)e(of)i
Fh(synkill)p Fr(.)25 b(Refer)16 b(to)g(the)1974 4816
y(manual)j(page)h(for)f(details.)1974 5021 y Fq(5.3)o(.)k(Discussion)
2073 5225 y Fr(The)f(philosophy)d(behind)h(our)h(approach)e(was)k(to)f
(build)e(a)i(tool)1974 5325 y(that)f(can)g(detect)g(the)g(conditions)e
(of)i(a)h(SYN)f(\257ooding)f(attack)h(and)p eop
%%Page: 11 11
11 10 bop -182 83 a Fr(react)16 b(appropriately)e(to)j(defeat,)g(or)g
(at)g(least)h(lessen)f(the)g(impact)f(of,)-182 183 y(the)i(attack.)26
b Fh(Synkill)18 b Fr(neither)g(requires)g(any)g(special)h(hardware)-182
282 y(\(such)d(as)i(particular)d(\256rewall)i(products\),)f(nor)g
(certain)g(certain)h(op-)-182 382 y(erating)12 b(systems,)j(network)d
(stacks,)j(or)e(even)g(modi\256cations)f(in)i(the)-182
482 y(protected)k(end)i(systems.)28 b(Our)20 b(software)g(is)h(highly)f
(portable,)e(ex-)-182 581 y(tensible,)h(and)h(easily)g(con\256gurable.)
-83 681 y(In)e(our)f(testbed,)g(we)i(successfully)e(protected)f(a)i
(set)h(of)e(hosts)h(of)-182 781 y(a)h(wide)g(variety)f(of)g(vendors)g
(and)g(operating)f(systems)i(against)g(the)-182 880 y(attack.)32
b(Section)22 b(6)g(details)h(some)f(of)g(the)g(operational)e(character)
n(-)-182 980 y(istics)h(of)f(the)h Fh(synkill)e Fr(application.)26
b(Furthermore,)18 b(the)i(active)-182 1080 y(monitor)k(approach)g
(allows)i(for)f(replication)g(of)h(the)f(software)h(to)-182
1179 y(improve)f(reliability)h(and)h(performance)d(because)j(of)f
(decentral-)-182 1279 y(ized)20 b(and)f(distributed)g(action.)-182
1512 y Ft(6)o(.)25 b(Performance)h(of)f Fd(Synkill)-182
1729 y Fq(6.1)o(.)d(Experimental)g(Ev)o(aluation)-83
1937 y Fr(The)d(performance)d(of)j(the)g Fh(synkill)f
Fr(application)g(was)h(eval-)-182 2037 y(uated)e(using)g(the)g
(con\256guration)e(illustrated)j(in)f(Figure)g(1.)26
b(The)18 b(at-)-182 2136 y(tacker)25 b(A)h(performs)f(a)h(SYN)g
(\257ooding)f(attack)g(against)h(machine)-182 2236 y(D.)f(The)f
Fh(synkill)g Fr(application)f(runs)h(on)h(machine)e(M)i(protect-)-182
2335 y(ing)g(all)i(hosts)f(on)f(the)h(local)g(area)g(network.)42
b(Host)27 b(S)1414 2347 y Fm(2)1477 2335 y Fr(evaluates)-182
2435 y(the)k(accessibility)g(of)g(D)h(in)f(the)g(following)f(way:)49
b(S)1427 2447 y Fm(2)1496 2435 y Fr(starts)32 b(25)-182
2535 y(processes)20 b(that)h(attempt)g(to)g(establish)g(connections)e
(to)i(the)g(tar)o(get)-182 2634 y(computer)15 b(simultaneously)-5
b(.)23 b(Each)17 b(of)f(these)h(processes)g(performs)-182
2734 y(one)28 b(hundred)e(sequential)i(attempts)h(with)g(a)g(random)e
(delay)h(be-)-182 2834 y(tween)20 b(zero)g(and)f(four)h(seconds.)27
b(The)20 b(machines)f(utilized)h(for)g(the)-182 2933
y(evaluation)13 b(environment)g(are)i(SUN)h(Sparc)e(Ultra)i(1)f
(workstations)-182 3033 y(with)20 b(32)g(MB)h(of)f(RAM,)g(running)e
(Solaris)j(2.5.1.)-83 3133 y(T)-6 b(wo)15 b(metrics)g(are)g(considered)
e(during)h(the)h(performance)d(tests:)-182 3232 y(1\))24
b(success)h(rates)h(and)e(2\))g(average)g(delays.)40
b(A)26 b(success)f(was)g(de-)-182 3332 y(\256ned)14 b(as)h(a)g
(connection)d(attempt)i(that)g(succeeds,)h(regardless)f(of)g(the)-182
3432 y(delay)f(incurred.)23 b(The)13 b(success)i(rate)f(was)g
(determined)e(by)i(dividing)-182 3531 y(the)i(number)e(of)i(successful)
h(connections)d(by)i(the)g(number)f(of)h(con-)-182 3631
y(nections)h(tried)g(in)h(a)g(given)f(time)g(interval.)26
b(Delay)17 b(was)i(de\256ned)d(as)-182 3730 y(the)21
b(time)g(that)g(was)g(required)e(to)i(establish)h(a)f(successful)g
(connec-)-182 3830 y(tion;)f(hence,)f(delays)h(were)h(only)e(computed)g
(for)h(successful)g(con-)-182 3930 y(nections.)44 b(The)26
b(time)h(intervals)e(for)h(both)g(measures)f(was)i(deter)n(-)-182
4029 y(mined)d(by)i(measuring)e(the)h(total)h(time)g(taken)f(by)h(each)
f(test)h(case)-182 4129 y(and)19 b(dividing)g(this)i(number)d(by)i
(thirty)f(\(30\).)-83 4229 y(Upon)j(successful)h(connection)e
(completion,)h(the)h(connection)-182 4328 y(is)e(closed)g(immediately)
-5 b(.)27 b(T)-6 b(ypical)20 b(TCP)i(connections)c(do)j(not)f(ex-)-182
4428 y(hibit)j(this)h(behavior)-5 b(.)34 b(However)m(,)23
b(we)g(are)h(interested)e(only)h(in)g(de-)-182 4528 y(termining)12
b(how)i(many)f(connection)e(establishments)j(can)g(succeed)-182
4627 y(under)30 b(attack.)60 b(T)-6 b(o)31 b(simulate)h(maximum)d
(contention,)k(we)e(per)n(-)-182 4727 y(formed)18 b(all)j(connection)e
(establishment)g(attempts)i(against)f(a)h(sin-)-182 4827
y(gle)f(port)f(on)h(the)g(server)-5 b(.)-83 4926 y(This)18
b(simulates)g(a)g(scenario)f(where)g(25)h(hosts)g(perform,)e(on)h(the)
-182 5026 y(average,)26 b(one)g(TCP)h(connection)d(establishment)i
(attempt)g(every)-182 5126 y(two)e(seconds.)37 b(This)24
b(means)f(the)h(accessed)g(server)f(must)h(service)-182
5225 y(750)17 b(requests)i(a)g(minute)f(\320)h(about)f(an)h(order)e(of)
i(magnitude)e(more)-182 5325 y(than)i(the)i(authors')d(departmental)h
(W)-7 b(eb)20 b(server)-5 b(.)p 1974 3 1796 4 v 1972
103 4 100 v 2024 73 a(T)f(est)p 2209 103 V 99 w(Defense)p
2657 103 V 176 w(Attack)20 b(Con\256guration)p 3767 103
V 1974 106 1796 4 v 1972 206 4 100 v 2209 206 V 2657
206 V 2709 176 a(mode)335 b(delay)101 b(batch-)p 3767
206 V 1972 306 V 2209 306 V 2657 306 V 3257 276 a(sec.)167
b(size)p 3767 306 V 1974 309 1796 4 v 1974 325 V 1972
425 4 100 v 2071 395 a(1)p 2209 425 V 147 w(none)p 2657
425 V 286 w(None)p 3767 425 V 1972 525 V 2071 495 a(2)p
2209 525 V 147 w(none)p 2657 525 V 286 w(Single)20 b(Addr)-5
b(.)149 b(10)190 b(100)p 3767 525 V 1974 528 1796 4 v
1972 628 4 100 v 2071 598 a(3)p 2209 628 V 147 w Fh(synkill)p
2657 628 V 99 w Fr(Single)20 b(Addr)-5 b(.)149 b(10)190
b(100)p 3767 628 V 1972 727 V 2071 697 a(4)p 2209 727
V 147 w Fh(synkill)p 2657 727 V 99 w Fr(Single)20 b(Addr)-5
b(.)169 b(1)233 b(20)p 3767 727 V 1972 827 V 2071 797
a(5)p 2209 827 V 147 w Fh(synkill)p 2657 827 V 99 w Fr(20)20
b(Addrs.)261 b(1)254 b(2)p 3767 827 V 1972 927 V 2071
897 a(6)p 2209 927 V 147 w Fh(synkill)p 2657 927 V 99
w Fr(No)20 b(list)367 b(1)233 b(10)p 3767 927 V 1974
930 1796 4 v 2073 1082 a Fo(T)-7 b(ab)o(le)25 b(2.)g(Summar)q(y)g(of)f
(test)g(cases)i(used)e(f)n(or)h(per)n(-)2073 1181 y(f)n(ormance)f(e)o
(v)n(aluation)e(of)h Fh(synkill)1974 1532 y Fq(6.2)o(.)g(Explor)n(ed)e
(Ev)o(aluation)h(Space)2073 1747 y Fr(W)-7 b(e)24 b(use)f(six)g(test)g
(cases)g(to)g(evaluate)e(the)i(performance)c(of)j(the)1974
1847 y Fh(synkill)i Fr(program.)38 b(The)24 b(test)h(cases)h(are)e
(summarized)f(in)i(T)-6 b(a-)1974 1946 y(ble)21 b(2.)32
b(The)21 b(terms)g Fs(mode)p Fr(,)g Fs(delay)p Fr(,)g(and)h
Fs(batch-size)e Fr(are)i(explained)1974 2046 y(in)27
b(Section)f(3.2.)47 b(They)26 b(are)h(used)f(to)h(characterize)f
(instances)g(of)1974 2146 y(SYN)21 b(attacks.)1974 2361
y Fq(6.3)o(.)i(Ev)o(aluation)f(Results)2075 3872 y @beginspecial
96 @llx 561 @lly 308 @urx 716 @ury 2120 @rwi @setspecial
%%BeginDocument: ssdiagtest6.epsi
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 03400000000000000000000000000000000000000000000000000000000000000000
% 02a00000000000000000000000000000000000000000000000000000000000000000
% 01600000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 01400000000000000000000000000000000000000000000000000000000000000000
% 03200000000000000000000000000000000000000000000000000000000000000000
% 03200000000000000000000000000000000000000000000000000000000000000000
% 0360000000000000000000000000000000000000000000000000000000000000001e
% 01c0000000000000000000000000000000000000000000000000000000000000001e
% 0000000000c00000000000000000000000000000000000000000000000000000001e
% 0340000000c00000000000000000000000000000000000000000000000000000001e
% 02a0000001c00000000000000000000000000000000000000000000000000000001e
% 0160000001e00000000000000000000000000000000000000000000000000000001e
% 0000000001e00000000000000000000000000000000000000000000000000000001e
% 0340000003e00000000000000000000000000000000000000000000000000000001e
% 02a0000003f00000000000000000000000000000000000000000000000000000001e
% 0160000003f00000000000000000000000000000000000000000000000000000001e
% 0000000007f00000000000000000000000000000000000000000000000000000001e
% 0000000007f00000000000000000000000000000000000000000000000000000001e
% 0140000000800000000000000000000000000000000000000000000000000000001e
% 0320000000800000000000000000000000000000000000000000000000000000001e
% 0320000000800000000000000000000000000000000000000000000000000000001e
% 0360000000800000000000000000000000000000000000000000000000000000001e
% 01c0000000800000000000000000000000000000000000000000000000000000001e
% 0040000000800000000000000000000000000000000000000000000000000000001e
% 0320000000800000000000000000000000000000000000000000000000000000001e
% 0220000000800000000000000000000000000000000000000000000000000000001e
% 0220011180800000000000000000000000000000000000000000000000000000001e
% 01c0033240800000000000000000000000000000000000000000000000000000001e
% 01c0013240800000000000000000000000000000000000000000000000000000001e
% 032001524ff800000000000000000000000000000000000000000000000000000000
% 0220017a408000000000000000000000000000000000000000000000000000000000
% 02200391808000000000000000000000000000000000000000000000000000000000
% 02600000008000000000000000000000000000000000000000000000000000000000
% 01c00000008000000000000000000000000000000000000000000000000000000000
% 02000000008000000000000000000000000000000000000000000000000000000000
% 02200000008000000000000000000000000000000000000000000000000000000000
% 03e00000008000000000000000000000000000000000000000000000000000000000
% 02200000008000000000000000000000000000000000000000000000000000000000
% 0e000000008000000000000000000000000000000000000000000000000000000000
% 1b000000008000000000000000000000000000000000000000000000000000000000
% 11000000008000000000000000000000000000000000000000000000000000000000
% 11200000008000000000000000000000000000000000000000000000000000000000
% 1fe00000008000000000000000000000000000000000000000000000000000000000
% 10200000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000131808000000000000000000000000000000000000000000000000000000000
% 0000036a408000000000000000000000000000000000000000000000000000000000
% 0300010a4ff800000000000000000000000000000000000000000000000000000000
% 1f000112408000000000000000000000000000000000000000000000000000000000
% 03e00132408000000000000000000000000000000000000000000000000000000000
% 1f0003f9808000000000000000000000000000000000000000000000000000000000
% 03e00000008000000000000000000000000000000000000000000000000000000000
% 03000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000000008000000000000000000000000000000000000000000000000000000000
% 00000131808000000000000000000000000000000000000000000000000000000000
% 0000034a408000000000000000000000000000000000000000000000000000000000
% 0000014a4ff8000000000000000000003fffffffffffffffffffffffffff80000000
% 0000014a408000000000000000000000200000000000000000000000000000000000
% 0000014a408000000000000000000000200000000000000000000000000000000000
% 000003b1808000000000000000000000200000000000000000000000000000000000
% 00000000008000000000000000000000200000000000000000000000000000000000
% 00000000008000000000000000000000200000000000000000000000000000000001
% 00000000008000000000000000000000200000000000000000000000000000000001
% 00000000008000000000000000000000200000000000000000000000000000000001
% 00000000008000000000000000000000200000000000000000000000000000000001
% 00000000008000000000000000000000200000000000000000000000000000000001
% 00000000008000000000000000000000200000000000000000000000000000000001
% 0000000000800000000000000000007fe00000000000000000000000000000000001
% 00000000008000000000000000000040000000000000000000000000000000000001
% 00000000008000000000000000000040000000000000000000000000000000000001
% 00000000008000000000000000000040000000000000000000000000000000000001
% 00000000008000000000000000000040000000000000000000000000000000000001
% 00000031808000000000000000000040000000000000000000000000000000000001
% 0000004a408000000000000000000040000000000000000000000000000000000001
% 00000032408000000000000000000040000000000000000000000000000000000001
% 0000005a4ff800000000000000000040000000000000000000000000000000000001
% 0000004a40800000000000000001ffc0000000000000000000000000000000000001
% 00000031808000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000001
% 00000000008000000000000000010000000000000000000000000000000000000000
% 0000000000800000000000000fff0000000000000000000000000000000000000000
% 00000000008000000000000008000000000000000000000000000000000000000000
% 00000000008000000000000008000000000000000000000000000000000000000000
% 00000000008000000000000008000000000000000000000000000000000000000000
% 00000000008000000000000008000000000000000000000000000000000000000000
% 00000008008000000000000008000000000000000000000000000000000000000000
% 00000011808000000000000008000000000000000000000000000000000000000000
% 00000022408000000000000008000000000000000000000000000000000000000000
% 00000072408000000000000008000000000000000000000000000000000000000000
% 0000004a4ff800000000000008000000000000000000000000000000000000000001
% 0000004a408000000000003ff8000000000000000000000000000000000000000001
% 00000031808000000000002000000000000000000000000000000000000000000001
% 00000000008000000000002000000000000000000000000000000000000000000001
% 00000000008000000000002000000000000000000000000000000000000000000002
% 00000000008000000000002000000000000000000000000000000000000000000002
% 0000000000800000000000200000000000000000000000000000000000000000003c
% 00000000008000000000002000000000000000000000000000000000000000000002
% 00000000008000000000002000000000000000000000000000000000000000000002
% 00000000008000000000002000000000000000000000000000000000000000000000
% 00000000008000000000ffe000000000000000000000000000000000000000000000
% 00000000008000000000800000000000000000000000000000000000000000000000
% 0000000000800000000080000000000000000000000000000000000000000000003f
% 0000000000800000000080000000000000000000000000000000000000000000003a
% 0000000000800000000080000000000000000000000000000000000000000000003e
% 0000000000800000000080000000000000000000000000000000000000000000003c
% 00000011808000000000800000000000000000000000000000000000000000000000
% 00000032408000000000800000000000000000000000000000000000000000000000
% 00000032408000000000800000000000000000000000000000000000000000000000
% 000000524ff8000003ff800000000000000000000000000000000000000000000000
% 0000007a408000000200000000000000000000000000000000000000000000000000
% 00000011808000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000000
% 00000000008000000200000000000000000000000000000000000000000000000001
% 00000000008000000200000000000000000000000000000000000000000000000000
% 0000000000800007fe00000000000000000000000000000000000000000000000000
% 00000000008000040000000000000000000000000000000000000000000000000000
% 00000000008000040000000000000000000000000000000000000000000000000000
% 0000000000800004000000000000000000000000000000000000000000000000003a
% 00000000008000040000000000000000000000000000000000000000000000000000
% 00000000008000040000000000000000000000000000000000000000000000000000
% 00000031808000040000000000000000000000000000000000000000000000000000
% 0000006a408000040000000000000000000000000000000000000000000000000000
% 0000000a408000040000000000000000000000000000000000000000000000000000
% 000000124ff81ffc0000000000000000000000000000000000000000000000000000
% 00000032408010000000000000000000000000000000000000000000000000000000
% 00000079808010000000000000000000000000000000000000000000000000000000
% 00000000008010000000000000000000000000000000000000000000000000000000
% 0000000000801000000000000000000000000000000000000000000000000000003a
% 00000000008010000000000000000000000000000000000000000000000000000000
% 00000000008010000000000000000000000000000000000000000000000000000000
% 00000000008010000000000000000000000000000000000000000000000000000000
% 0000000000801000000000000000000000000000000000000000000000000000003c
% 0000000000fff0000000000000000000000000000000000000000000000000000038
% 0000000000800000000000000000000000000000000000000000000000000000001e
% 00000000008000000000000000000000000000000000000000000000000000000015
% 00000000008000000000000000000000000000000000000000000000000000000014
% 00000000008000000000000000000000000000000000000000000000000000000021
% 00000000008000000000000000000000000000000000000000000000000000000037
% 0000000000800008000080000800008000080000800008000080000800000000003d
% 0000000000800008000080000800008000080000800008000080000800000180003e
% 00000000008000080000800008000080000800008000080000800008000001f00036
% 000000000080000800008000080000800008000080000800008000083fff83fe0027
% 00000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffff000c
% 00000000008000080000800008000080000800008000080000800008000083fc000b
% 00000000008000080000800008000080000800008000080000800008000083e00002
% 00000000008000080000800008000080000800008000080000800008000083000002
% 00000000008000080000800008000080000800008000080001800008000080000002
% 00000000008000180002000010000300013000130001100022000130001980000002
% 00000000008000340006000020000480034800368003300064000348003640000002
% 0000000000800004000600007000030001480010800130002e000130000640000002
% 0000000000800008000a000048000580014800110001500029000158000a40000000
% 0000000000800018000f000048000480014800130001780029000148001a40000000
% 000000000080003c000200003000030003b0003f80039000760003b0003d80000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000fe8000020001000
% 00000000000000000000000000000000000000000000000000000920000020000800
% 00000000000000000000000000000000000000000000000000000118000040000800
% 0000000000000000000000000000000000000000000000000000010bd8e086738413
% 0000000000000000000000000000000000000000000000000000010925f08afc8402
% 00000000000000000000000000000000000000000000000000000109250084840429
% 0000000000000000000000000000000000000000000000000000010925108a8c4402
% 0000000000000000000000000000000000000000000000000000039ffee08c738400
% 00000000000000000000000000000000000000000000000000000000000040000400
% 00000000000000000000000000000000000000000000000000000000000040000813
% 00000000000000000000000000000000000000000000000000000000000030001029
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 45.378 30.044 m
46.212 32.544 l
44.545 32.544 l
cl
0 0 0 F
n 45.378 32.544 m
45.378 76.113 l
gsave
0 0 0 0 0 B
grestore
n 105.99 73.169 m
103.49 74.003 l
103.49 72.336 l
cl
0 0 0 F
n 103.49 73.169 m
42.125 73.169 l
gsave
0 0 0 0 0 B
grestore
n 50.9 72.072 m 50.9 74.266 l
gsave
0 0 0 0 0 B
grestore
n 56.553 72.072 m 56.553 74.266 l
gsave
0 0 0 0 0 B
grestore
n 62.206 72.072 m 62.206 74.266 l
gsave
0 0 0 0 0 B
grestore
n 67.86 72.072 m 67.86 74.266 l
gsave
0 0 0 0 0 B
grestore
n 73.513 72.072 m 73.513 74.266 l
gsave
0 0 0 0 0 B
grestore
n 79.166 72.072 m 79.166 74.266 l
gsave
0 0 0 0 0 B
grestore
n 84.819 72.072 m 84.819 74.266 l
gsave
0 0 0 0 0 B
grestore
n 90.472 72.072 m 90.472 74.266 l
gsave
0 0 0 0 0 B
grestore
n 96.125 72.072 m 96.125 74.266 l
gsave
0 0 0 0 0 B
grestore
n 101.78 72.072 m 101.78 74.266 l
gsave
0 0 0 0 0 B
grestore
n 44.281 67.75 m 46.475 67.75 l
gsave
0 0 0 0 0 B
grestore
n 44.281 62.435 m 46.475 62.435 l
gsave
0 0 0 0 0 B
grestore
n 44.281 57.119 m 46.475 57.119 l
gsave
0 0 0 0 0 B
grestore
n 44.281 51.804 m 46.475 51.804 l
gsave
0 0 0 0 0 B
grestore
n 44.281 46.488 m 46.475 46.488 l
gsave
0 0 0 0 0 B
grestore
n 44.281 41.172 m 46.475 41.172 l
gsave
0 0 0 0 0 B
grestore
n 44.281 35.857 m 46.475 35.857 l
gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [0 -0.945 0.945 0 36.9925 42.8167] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(# Processes) s
savemat setmatrix
n savemat currentmatrix pop [0.945 0 0 0.945 93.6914 80.4483] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Time \(sec\)) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 41.1596 68.5567] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 41.1596 63.3629] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 41.1596 58.0473] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 41.1596 52.7317] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 39.969 47.5379] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 39.969 42.1004] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(120) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 39.969 36.9067] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(140) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 50.4635 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(2) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 55.5073 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(4) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 61.4041 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(6) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 67.0573 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(8) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 71.4916 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 77.0229 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(12) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 82.676 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(14) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 88.2073 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(16) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 93.9823 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(18) s
savemat setmatrix
n savemat currentmatrix pop [0.675 0 0 0.675 99.8791 76.2911] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 45.355 73.188 m
45.355 70.507 l
48.28 70.507 l
48.28 67.825 l
51.083 67.825 l
51.083 65.388 l
53.642 65.388 l
53.642 62.585 l
56.446 62.585 l
56.446 59.904 l
59.371 59.904 l
59.371 57.344 l
62.174 57.344 l
62.174 54.541 l
65.221 54.541 l
65.221 51.982 l
68.024 51.982 l
68.024 49.422 l
70.583 49.422 l
70.583 46.497 l
101.78 46.497 l
101.78 73.066 l
cl
gsave
0 0 0 0 0 B
grestore
n 96.961 46.577 m
103.44 46.577 l
103.44 72.761 l
96.961 72.761 l
cl
1 1 1 F
gsave
1 1 1 0 0 B
grestore
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial 2073 4138 a Fo(Figure)37 b(13.)h(Pr)n(ocess)g(gr)n(o)o
(wth)e(f)n(or)h(the)g(attac)n(k)g(in)2073 4238 y(case)24
b(6.)2073 4525 y Fr(The)k(\256rst)h(two)f(test)g(cases)h(are)f
(included)e(as)j(points)e(of)h(refer)n(-)1974 4625 y(ence.)41
b(T)-6 b(est)26 b(1)f(executes)g(the)g(evaluation)e(scripts)j(without)e
(D)i(be-)1974 4725 y(ing)d(under)f(a)i(SYN)h(\257ooding)d(attack.)37
b(The)23 b(second)g(test)h(runs)f(the)1974 4824 y(evaluation)12
b(scripts)h(with)h(D)g(being)e(under)g(attack,)i(but)f(without)g(any)
1974 4924 y(defenses.)27 b(Figures)20 b(14)h(and)f(15)g(show)g(the)h
(success)g(rates)g(and)f(av-)1974 5023 y(erage)f(delays)h(for)g(these)g
(two)g(test)h(cases.)2073 5126 y(In)f(the)g(second)g(test)h(case)f(the)
g(attacker)g(sends)g(twenty)g(batches)1974 5225 y(of)j(one)h(hundred)d
(spoofed)h(SYN)j(packets)e(each)h(with)g(a)g(delay)f(of)1974
5325 y(ten)28 b(seconds)f(between)h(batches.)49 b(Note)28
b(that)g(the)h(areas)f(marked)p eop
%%Page: 12 12
12 11 bop 159 1383 a @beginspecial 7 @llx 552 @lly 420
@urx 708 @ury 4130 @rwi @setspecial
%%BeginDocument: test1.epsi
% 0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000001fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000001fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 000600000000000010000000000000400000000000030000000000000c00006000001800000000
% 0000400000000000030000000000000c00000000000030000180
% 000600000000000010000000000000400000000000030000000000000c00006000001800000000
% 0000400000000000030000000000000c00000000000030000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000618800000000000000000000000000000000000000000000000000000006000001838000000
% 0000000000000000000000000000000000000000000000000180
% 0006248000000000000000000000000000000000000000c0000f1070260000600000184c000000
% 00000000000000000000000000000000080000e101c098000180
% 0006250000000000000000000000000000000000000001b5ebce5225a200006000001845c70000
% 000000000000000000000000000000000d6d3495549688000180
% 0006250000000000000000000000000000000000000001769de9f72ee21ff860000018322d8000
% 000000000000000000000000000000001cfbde9fecbb887fe180
% 00061a0000000000000000000000000000000000000000ddefe9d327e21ff8600000180fe80000
% 0000000000000000000000000000000014bb76e7d89f887fe180
% 000602e00000000000000000000000000000000000000000000000000000006000001846080000
% 0000000000000000000000000000000000006000100000000180
% 000605100000000000000000000000000000000000000000000000000000006000001846298000
% 0000000000000000000000000000000000000000000000000180
% 000605100000000000000000000000000000000000000000000000000000006000001839c72000
% 0000000000000000000000000000000000000000000000000180
% 000608e00000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0006000000000000000000000000000000000000000000000000000000000060003a1800000000
% 0000000000000000000000000000000000000000000000000180
% 0006000000000000000000000000000000000000000000000000000000000060000d1800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000151e00000000
% 0000000000000000000000000000000000000000000000000780
% 000600000000000000000000000000000000000000000000000000000000006000121800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000181
% 348600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 1b4600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 1b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffff1e000001800000000
% 0000000000000000000000000000000000000000000000000181
% 1487fffffffffffffffffffffffffffffffffffffffffffffffffffffffff1e000001800000000
% 000000000007ffffffffffffffffffffffffffffffffffffc181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000040000000000300000000180000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000000000407f0803020000000000500000600280000004180
% 00064040808101020204040c08181030206040c0818103020604040808101060001a1800000000
% 0000000000040530001020000000000400001200200200004180
% 00064040808101020204040c08181030206040c081810302060404080810106000351800000000
% 00000000000401198c73266863bd30cefef43b18763700004180
% 00064040808101020204040c08181030206040c0818103020604040808101060002d1e00000000
% 00000000000401149497a9289452f944514a12bc294a00004780
% 00064040808101020204040c08181030206040c081810302060404080810106000121e00000000
% 0000000000040114889427288452c084514a12a0274200004780
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040114949cab188c52c944514a12a42b4600004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000000000403b7d8737d9073bef18eeefb1ed87dbb00004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000100000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000600000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000001000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000000000403000000010000c0000000000000800000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040500402004000140040040008000800000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040f8ce1f6ff70a3e30ec3e7b5cc609bd580004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055242a94529415785e542549490a52bc0004180
% 0e864040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004054e4127452881540502425488709d1200004180
% 05464040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055642ab452901548525425494b0ad2240004180
% 0b47c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 000000000004077b633de7ede1db06c6639ed8d9f7bd80004180
% 0487c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 0000000000040000000000012000000002000000002400004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004000000000001c000000007000000003800004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c0818103020604040808101060003a1800000000
% 0000000000040800000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000351800000000
% 000000000004040030000180000000000c20000e000c00004181
% 00064040808101020204040c08181030206040c0818103020604040808101060000d1e00000000
% 0000000000040400100004800801000004000004420400004783
% 00064040808101020204040c08181030206040c081810302060404080810106000321e00000000
% 00000000000405cc70ee0ec61f0f9e8cc67c6004e765b0c04780
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040632911504af0f950953252af004429579404180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004062e911504a80c09094f052a8004427640804180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040636991504a90c950957152a900442b549404180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040fdb70ed87b60f199f7bedfb620e63dfb1804180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000400000480000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040300000018400000061200000240000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040500000008000000020201000240002000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040f8c3d18ccdc60c26b3263b8324e667c00004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055e12a52a4af1222a92f1444a51993e00004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040550129d0a4a80e16a9281443a51873000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055212ad1a4a9161929291445a518b3200004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004076c3ef6fbfb61b096ff61b86fee7dbc00004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 06864040808101020204040c08181030206040c0818103020604040808101060001a1800000000
% 0000000000040000000000000000000000000000000000004181
% 0d464040808101020204040c08181030206040c0818103020604040808101060001d1800000000
% 000000000004030000000000000000180c000000000000004183
% 0b47c040808101020204040c08181030206040c08181030206040408081011e0003d1e00000000
% 0000000000040500000000000000000804100000000800004780
% 04864040808101020204040c08181030206040c0818103020604040808101060000a1800000000
% 0000000000040f8c3d8ddafc631c66399c3f06db1b5d80004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055e13d62a52f50aff4be4188f57a54bc0004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040550120a2a50820a884a24188864214a00004182
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055212562a51950a994e66188954a34a40004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004076c3999cfee661b66399c1f069b1ded80004182
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000001000002000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040300000000fc0000001002800301000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040500100100440000200000800101000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040f8c3b0f80437e6670f7a699e731368c77004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004055e1795007949f9215252a489794a948a804183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000000000405501409004989882092529c89413a888a804183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040552149500434998a15252ac89c959948a804181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000000000004076c1b19c0fe6e6731bfdff7c733ed1876c04183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000800000000000000010000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000001c00000000000000060000004182
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c0818103020604040808101060003a1800000000
% 0000000000040000000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c081810302060404080810106000151800000000
% 0000000000040090000000000000000000000000000000004181
% 00064040808101020204040c08181030206040c0818103020604040808101060002d1e00000000
% 0000000000040048000000000000000000000000000000004780
% 00064040808101020204040c08181030206040c081810302060404080810106000321e00000000
% 00000000000c0048400800000000000000000000000000004781
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000007fffc0648ec7cc0000000000000000000000000004183
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000c000409485ea940000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000003800040748504880000000000000000000000000004181
% 06864040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000006000040b4852a940000000000000000000000000004180
% 07464040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000004000040dfc6ccd90000000000000000000000000004180
% 0f47c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 000000c000040000000000000000000000000000000000004181
% 0287c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 0000008000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000008000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000018000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c081810302060404080810106000121800000000
% 0000010000040000000000000000000000000000000000004180
% 00064040808101020204040c08181030206040c0818103020604040808101060002d1800000000
% 000001000007ffffffffffffffffffffffffffffffffffffc180
% 00064040808101020204040c08181030206040c081810302060404080810106000351e00000000
% 0000010000000000000000000000000000000000000000000780
% 00064040808101020204040c08181030206040c0818103020604040808101060003a1e00000000
% 0000010000000000000000000000000000000000000000000780
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000fe000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000fe000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000007e000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000007c000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000007c000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 000003c000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000038000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000038000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000018000000000000000000000000000000000000000000180
% 04864040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000000000000000000000000000000000000000000181
% 0b464040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0d47c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0e87c040808101020204040c08181030206040c08181030206040408081011e000001800000000
% 0000000000000000000000000000000000000000000000000181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000010000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 00000fe000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001801ffffff
% fffffc7fffffffffff8000000000000000000000000000000181
% 00064040808101020204040c08181030206040c08181030206040408081010600032183fffffff
% ffffe007fffffffffff800000000000000000000000000000181
% 00064040808101020204040c08181030206040c0818103020604040808101060001518f8000000
% 0000000000000000003e00000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000151f80000000
% 0000000000000000000300000000000000000000000000000780
% 00064040808101020204040c08181030206040c081810302060404080810106000121800000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000181
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001f00000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001900000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001900000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001900000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001900000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001900000000
% 0000000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001901fe0000
% 07f8000000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001901020000
% 0408000000000000000000000000000000000000000000000181
% 00064040808101020204040c08181030206040c0818103020604040808101060000019010203fc
% 04080ff000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001901020204
% 0408081000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001901020204
% 0408081000000000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c081810302060404080810106000001901020204
% 040808101ff00000000000000000000000000000000000000180
% 00064040808101020204040c08181030206040c0818103020604040808101060000019ff020207
% fc080810103fe000000000000000000000000000000000000180
% 00864040808101021204040c08181070206040c081830302060404080c10106000021901020204
% 04084810103fe07fffff80000000000c00000000000030000180
% 01464040808101021204040c08181070206040c081830302060404080c1010600005190103fe04
% 04084810103020e043c080000000000c00000000000030000180
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000051fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000021fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000ff81ff00000000000ffffffffffffffffffffffffffffc000
% 0004000000000000e800000000000c900000000000374000000000004900000000001000000000
% 0003a0000000000032400000000000dd00000000000124000001
% 000a000000000000d400000000000568000000000016a00000000000b680000000002800000000
% 000350000000000015a000000000005a800000000002da000000
% 000a0000000000003400000000000568000000000011a00000000000d6b8000000002800000000
% 0000d0000000000015a00000000000468000000000035a000000
% 0004000000000000c800000000000490000000000016400000000000e94c000000001000000000
% 00032000000000001240000000000059000000000003a4700001
% 000000000000000000000000000000000000000000000000000000000044e70000000000000000
% 0000000000000000000000000000000000000000000000980001
% 0000000000000000000000000000000000000000000000000000000000311d8000000000000000
% 000000000000000000000000000000000000000000000089ce03
% 00000000000000000000000000000000000000000000000000000000000df80000000000000000
% 0000000000000000000000000000000000000000000000623b00
% 000000000000000000000000000000000000000000000000000000000045080000000000000000
% 00000000000000000000000000000000000000000000001bf000
% 000000000000000000000000000000000000000000000000000000000045198000000000000000
% 00000000000000000000000000000000000000000000008a1000
% 000000000000000000000000000000000000000000000000000000000038e72000000000000000
% 00000000000000000000000000000000000000000000008a3300
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000071ce40
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000003
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 6.477 80.051 m 6.477 29.696 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 6.477 80.051 m 73.12 80.051 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 73.12 80.051 m 72.454 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 80.051 m 7.144 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 4.765 80.539] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 73.12 71.659 m 72.454 71.659 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 71.659 m 7.144 71.659 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 3.94 72.146] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 73.12 63.266 m 72.454 63.266 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 63.266 m 7.144 63.266 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 3.94 63.753] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 73.12 54.874 m 72.454 54.874 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 54.874 m 7.144 54.874 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 3.94 55.361] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 73.12 46.481 m 72.454 46.481 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 46.481 m 7.144 46.481 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 3.94 46.968] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 73.12 38.089 m 72.454 38.089 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 38.089 m 7.144 38.089 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 3.116 38.576] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 73.12 29.696 m 72.454 29.696 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 29.696 m 7.144 29.696 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 29.696 m 6.477 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 6.477 80.051 m 6.477 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.065 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 21.622 29.696 m 21.622 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 21.622 80.051 m 21.622 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 20.798 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 36.767 29.696 m 36.767 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 36.767 80.051 m 36.767 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 35.531 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 51.911 29.696 m 51.911 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 51.911 80.051 m 51.911 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 50.675 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 67.067 29.696 m 67.067 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 67.067 80.051 m 67.067 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 65.831 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 6.477 80.051 m 73.12 80.051 l
73.12 29.696 l
6.477 29.696 l
6.477 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 54.338 32.332] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 1) s
savemat setmatrix
n 69.035 80.051 m 69.035 38.089 l
71.152 38.089 l
71.152 80.051 l
69.035 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 66.908 80.051 m 66.908 38.089 l
69.035 38.089 l
69.035 80.051 l
66.908 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 64.791 80.051 m 64.791 38.089 l
66.908 38.089 l
66.908 80.051 l
64.791 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 62.675 80.051 m 62.675 38.089 l
64.791 38.089 l
64.791 80.051 l
62.675 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 60.547 80.051 m 60.547 38.089 l
62.675 38.089 l
62.675 80.051 l
60.547 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 58.43 80.051 m 58.43 38.089 l
60.547 38.089 l
60.547 80.051 l
58.43 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 56.303 80.051 m 56.303 38.089 l
58.43 38.089 l
58.43 80.051 l
56.303 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 54.187 80.051 m 54.187 38.089 l
56.303 38.089 l
56.303 80.051 l
54.187 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 52.07 80.051 m 52.07 38.089 l
54.187 38.089 l
54.187 80.051 l
52.07 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 49.943 80.051 m 49.943 38.089 l
52.07 38.089 l
52.07 80.051 l
49.943 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 47.826 80.051 m 47.826 38.089 l
49.943 38.089 l
49.943 80.051 l
47.826 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 45.709 80.051 m 45.709 38.089 l
47.826 38.089 l
47.826 80.051 l
45.709 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 43.582 80.051 m 43.582 38.089 l
45.709 38.089 l
45.709 80.051 l
43.582 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 41.465 80.051 m 41.465 38.089 l
43.582 38.089 l
43.582 80.051 l
41.465 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 39.349 80.051 m 39.349 38.089 l
41.465 38.089 l
41.465 80.051 l
39.349 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 37.222 80.051 m 37.222 38.089 l
39.349 38.089 l
39.349 80.051 l
37.222 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 35.105 80.051 m 35.105 38.089 l
37.222 38.089 l
37.222 80.051 l
35.105 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 32.978 80.051 m 32.978 38.089 l
35.105 38.089 l
35.105 80.051 l
32.978 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 30.861 80.051 m 30.861 38.089 l
32.978 38.089 l
32.978 80.051 l
30.861 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 28.744 80.051 m 28.744 38.089 l
30.861 38.089 l
30.861 80.051 l
28.744 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 26.617 80.051 m 26.617 38.089 l
28.744 38.089 l
28.744 80.051 l
26.617 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 24.5 80.051 m 24.5 38.089 l
26.617 38.089 l
26.617 80.051 l
24.5 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 22.384 80.051 m 22.384 38.089 l
24.5 38.089 l
24.5 80.051 l
22.384 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 20.257 80.051 m 20.257 38.089 l
22.384 38.089 l
22.384 80.051 l
20.257 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 18.14 80.051 m 18.14 38.089 l
20.257 38.089 l
20.257 80.051 l
18.14 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 16.023 80.051 m 16.023 38.089 l
18.14 38.089 l
18.14 80.051 l
16.023 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 13.896 80.051 m 13.896 38.089 l
16.023 38.089 l
16.023 80.051 l
13.896 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 11.779 80.051 m 11.779 38.089 l
13.896 38.089 l
13.896 80.051 l
11.779 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 9.662 80.051 m 9.662 38.089 l
11.779 38.089 l
11.779 80.051 l
9.662 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 7.535 80.051 m 7.535 38.089 l
9.662 38.089 l
9.662 80.051 l
7.535 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 6.477 80.051 m 6.477 38.089 l
7.535 38.089 l
7.535 80.051 l
6.477 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 68.897 31.844 m 71.564 31.844 l
gsave
0 0 0 0.088 0 B
grestore
n 80.384 80.051 m 80.384 29.696 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 80.384 80.051 m 147.03 80.051 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 147.03 80.051 m 146.36 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 80.051 m 81.051 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.672 80.539] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 147.03 73.754 m 146.36 73.754 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 73.754 m 81.051 73.754 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 74.242] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 147.03 67.457 m 146.36 67.457 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 67.457 m 81.051 67.457 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 67.944] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 147.03 61.171 m 146.36 61.171 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 61.171 m 81.051 61.171 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 61.658] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 147.03 54.874 m 146.36 54.874 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 54.874 m 81.051 54.874 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 55.361] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 147.03 48.577 m 146.36 48.577 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 48.577 m 81.051 48.577 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 49.064] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 147.03 42.28 m 146.36 42.28 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 42.28 m 81.051 42.28 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 42.767] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 147.03 35.993 m 146.36 35.993 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 35.993 m 81.051 35.993 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 77.848 36.48] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 147.03 29.696 m 146.36 29.696 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 29.696 m 81.051 29.696 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 29.696 m 80.384 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 80.384 80.051 m 80.384 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.973 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 95.529 29.696 m 95.529 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 95.529 80.051 m 95.529 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 94.705 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 110.67 29.696 m 110.67 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 110.67 80.051 m 110.67 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 109.438 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 125.82 29.696 m 125.82 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 125.82 80.051 m 125.82 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 124.583 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 140.97 29.696 m 140.97 30.363 l
gsave
0 0 0 0.176 0 B
grestore
n 140.97 80.051 m 140.97 79.385 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 139.738 82.02] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 80.384 80.051 m 147.03 80.051 l
147.03 29.696 l
80.384 29.696 l
80.384 80.051 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 127.67 32.332] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 1) s
savemat setmatrix
n 142.94 80.051 m 145.06 80.051 l
142.94 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 140.82 80.051 m 142.94 80.051 l
140.82 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 138.7 80.051 m 140.82 80.051 l
138.7 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 136.58 80.051 m 138.7 80.051 l
136.58 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 134.45 80.051 m 136.58 80.051 l
134.45 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 132.34 80.051 m 134.45 80.051 l
132.34 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 130.21 80.051 m 132.34 80.051 l
130.21 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 128.09 80.051 m 130.21 80.051 l
128.09 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 125.98 80.051 m 128.09 80.051 l
125.98 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 123.85 80.051 m 123.85 79.946 l
125.98 79.946 l
125.98 80.051 l
123.85 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 121.73 80.051 m 123.85 80.051 l
121.73 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 119.62 80.051 m 121.73 80.051 l
119.62 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 117.49 80.051 m 117.49 80.03 l
119.62 80.03 l
119.62 80.051 l
117.49 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 115.37 80.051 m 117.49 80.051 l
115.37 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 113.26 80.051 m 115.37 80.051 l
113.26 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 111.13 80.051 m 111.13 79.49 l
113.26 79.49 l
113.26 80.051 l
111.13 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 109.01 80.051 m 109.01 79.512 l
111.13 79.512 l
111.13 80.051 l
109.01 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 106.89 80.051 m 106.89 79.385 l
109.01 79.385 l
109.01 80.051 l
106.89 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 104.77 80.051 m 104.77 79.85 l
106.89 79.85 l
106.89 80.051 l
104.77 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 102.65 80.051 m 102.65 79.3 l
104.77 79.3 l
104.77 80.051 l
102.65 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 100.52 80.051 m 100.52 78.792 l
102.65 78.792 l
102.65 80.051 l
100.52 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 98.408 80.051 m 100.52 80.051 l
98.408 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 96.291 80.051 m 96.291 78.009 l
98.408 78.009 l
98.408 80.051 l
96.291 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 94.164 80.051 m 96.291 80.051 l
94.164 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 92.047 80.051 m 92.047 77.48 l
94.164 77.48 l
94.164 80.051 l
92.047 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 89.93 80.051 m 89.93 79.163 l
92.047 79.163 l
92.047 80.051 l
89.93 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 87.803 80.051 m 87.803 78.094 l
89.93 78.094 l
89.93 80.051 l
87.803 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 85.687 80.051 m 85.687 79.702 l
87.803 79.702 l
87.803 80.051 l
85.687 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 83.57 80.051 m 83.57 77.533 l
85.687 77.533 l
85.687 80.051 l
83.57 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 81.443 80.051 m 81.443 79.216 l
83.57 79.216 l
83.57 80.051 l
81.443 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 80.384 80.051 m 80.384 75.67 l
81.443 75.67 l
81.443 80.051 l
80.384 80.051 l
gsave
0 0 0 0.088 0 B
grestore
n 142.81 31.844 m 145.47 31.844 l
gsave
0 0 0 0.088 0 B
grestore
n savemat currentmatrix pop [0 0.313 -2.18 0 88.095 72.154] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman09600960) gf
0.00 0.00 0.00 rgb 
({) s
savemat setmatrix
n 97.227 70.941 m
96.41 68.436 l
98.076 68.446 l
cl
0 0 0 F
n 103.54 61.49 m 101.62 61.845 98.852 60.982 97.8 62.557 c
97.037 63.7 97.18 66.127 97.243 68.441 c
gsave
0 0 0 0 0 B
grestore
n 105.28 40.613 m
144.44 40.613 l
144.44 63.863 l
105.28 63.863 l
cl
n savemat currentmatrix pop [1 0 0 1 105.278 43.4342] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(This delay comes from the fact ) s
0 0 m 185 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(that starting the test puts a large ) s
0 185 m 371 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(load on the test machine.  It takes ) s
0 371 m 556 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(the machine a while to allocate ) s
0 556 m 742 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(the resources needed to execute ) s
0 742 m 927 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(the test.  Expect similar delays on ) s
0 927 m 1113 ss (Times-Roman01600160) gf
0.00 0.00 0.00 rgb 
(all tests.) s
savemat setmatrix
n 103.54 38.086 m 145.01 38.086 l
145.01 66.862 l
103.54 66.862 l
103.54 38.086 l
cl gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 7.558 33.528] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 81.592 33.266] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 68.141 83.578] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 142.291 83.887] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial -83 1649 a Fo(Figure)36 b(14.)g(T)-5 b(est)36
b(case)h(1:)57 b(Connection)35 b(estab)o(lishment)g(success)i(rates)f
(and)g(a)o(vera)o(g)q(e)g(dela)n(ys)h(f)n(or)f(normal)-83
1748 y(operation)23 b(of)f(D)h(\(without)e(attac)n(k\).)-182
2098 y Fr(with)g(the)h(letter)g Fi(\013)h Fr(correspond)c(to)j(a)g
(small)g(window)f(of)g(opportu-)-182 2197 y(nity)f(that)g(the)h
(evaluation)e(program)f(has)i(when)g(the)h(attacked)e(ma-)-182
2297 y(chine)c(releases)h(the)g(\256rst)h(set)f(of)g(blocked)e(ports.)
25 b(The)16 b(delay)f(in)h(this)-182 2397 y(case)22 b(indicates)g
(that,)h(on)f(the)h(average,)e(these)h(were)h(successes)g(in)-182
2496 y(the)e(\256rst)g(TCP)h(retry)e(attempt.)29 b(The)20
b(area)h(marked)f(with)h(the)g(letter)-182 2596 y Fi(\014)31
b Fr(shows)c(how)f(once)f(the)i(attack)f(has)h(stopped)e(the)i
(connections)-182 2695 y(succeed)19 b(but)h(only)f(after)h(a)h(very)e
(lar)o(ge)g(delay)-5 b(.)-83 2805 y(In)27 b(test)h(cases)g(3)f(and)g(4)
g Fh(synkill)f Fr(protects)h(the)g(tar)o(get)f(ma-)-182
2905 y(chine)f(against)h(a)g(single)g(address)g(SYN)g(\257ooding)f
(attack)h(of)f(dif-)-182 3004 y(ferent)32 b(delays)g(and)g
(batch-sizes.)64 b(In)33 b(both)f(cases)h(similar)g(per)n(-)-182
3104 y(formance)f(results)i(can)g(be)g(observed.)66 b
Fh(Synkill)33 b Fr(learns)h(the)-182 3203 y(spoofed)19
b(address,)i(classi\256es)i(it)f(as)g Fs(bad)p Fr(,)e(and)h(releases)g
(half-open)-182 3303 y(connections)c(from)h(that)h(address)g(as)h(soon)
e(as)i(they)f(are)g(observed.)-182 3403 y(All)27 b(legitimate)f
(connections)f(succeed,)i(and)f(only)f(small)i(delays)-182
3502 y(are)20 b(observed.)-83 3612 y(T)-6 b(est)32 b(case)g(5)g
(evaluates)f(access)h(to)g(a)g(machine)e(under)g(SYN)-182
3711 y(\257ooding)g(attack)i(using)g(a)g(list)h(of)f(20)g(spoofed)e
(addresses,)35 b(400)-182 3811 y(batches,)16 b(a)h(batch-size)f(of)h(2)
f(and)g(a)h(delay)f(of)h(1)g(second.)24 b(Figure)16 b(18)-182
3911 y(shows)j(the)h(success)g(rates)f(and)g(average)g(delays)g(in)g
(this)h(test)h(case.)-182 4010 y(Note)15 b(that)h(the)g(only)f
(noticeable)g(ef)o(fect)g(the)h(attack)g(has)g(on)f(the)h(ma-)-182
4110 y(chine)22 b(protected)f(by)h Fh(synkill)g Fr(is)h(a)h(small)f
(increase)f(in)h(the)f(de-)-182 4209 y(lay)14 b(experienced)d(during)h
(connection)g(establishment.)24 b(A)15 b(load)e(in-)-182
4309 y(crease)20 b(of)g(the)g(attacked)f(machine)g(is)i(responsible)e
(for)h(this)h(delay)-5 b(.)-83 4419 y(Finally)g(,)15
b(test)g(case)g(6)f(consists)h(of)f(evaluating)f(the)h(performance)-182
4518 y(of)25 b Fh(synkill)g Fr(during)f(an)h(attack)g(in)h(which)f
(spoofed)f(addresses)-182 4618 y(are)37 b(not)g(repeated.)76
b(The)37 b(attack)g(script)h(sends)f(one)g(thousand)-182
4717 y(batches)13 b(of)g(ten)h(SYN)g(packets)f(each,)h(with)g(a)g
(delay)f(of)g(one)g(second,)-182 4817 y(using)23 b(a)h(new)g(address)f
(for)h(every)f(batch.)37 b(In)24 b(some)f(sense)i(this)f(is)-182
4917 y(the)16 b(worst)g(case)h(scenario)e(for)h Fh(synkill)p
Fr(,)g(because)f(it)i(cannot)e(uti-)-182 5016 y(lize)k(its)h(learned)e
(knowledge)e(of)j Fs(bad)f Fr(addresses)h(and)f(reset)h(future)-182
5116 y(connections)13 b(that)h(use)h(the)g Fs(bad)f Fr(addresses)h(as)g
(spoofed)e(source)h(ad-)-182 5216 y(dresses.)-83 5325
y(The)21 b(measurements)f(of)h(this)g(test)h(case)g(are)f(displayed)f
(in)h(Fig-)1974 2098 y(ure)31 b(19.)60 b(W)-7 b(e)33
b(observed)c(considerable)h(delays)h(and)g(some)g(fail-)1974
2197 y(ures)23 b(in)g(connection)e(establishment)h(attempts.)35
b(They)22 b(happened)1974 2297 y(because)31 b(the)h(attacked)f(machine)
f(ran)h(out)h(of)f(swap)h(space)g(and)1974 2397 y(empty)18
b(process)h(table)f(entries)h(to)g(handle)f(further)g(incoming)f(con-)
1974 2496 y(nections.)47 b(For)27 b(this)g(attack)g(the)g(load)g(in)g
(the)g(attacked)f(machine)1974 2596 y(increased)h(dramatically)g(and)h
(at)g(one)g(point)g(had)f(ten)h(processes)1974 2695 y(waiting)i(for)g
(attention)g(in)h(the)g(ready)f(queue.)57 b(These)31
b(observa-)1974 2795 y(tions)k(suggest)g(that)g(even)g(better)g
(performance)d(of)j Fh(synkill)1974 2895 y Fr(can)29
b(be)h(expected)e(if)i(the)g(host-based)e(con\256guration)f(optimiza-)
1974 2994 y(tions)16 b(discussed)g(in)h(Section)f(4.1.1)e(are)j(used)f
(in)g(conjunction)e(with)1974 3094 y Fh(synkill)p Fr(.)2073
3213 y(At)24 b(32)e(MB)i(or)e(RAM)i(and)e(only)g(40)g(MB)h(of)g(swap)g
(space,)g(our)1974 3313 y(test)30 b(machine)e(quickly)g(reached)g(the)i
(point)e(where)h(not)g(enough)1974 3412 y Fh(inetd)k
Fr(processes)h(could)e(be)i(started)g(to)g(handle)e(all)j(the)e(arti-)
1974 3512 y(\256cially)h(completed)d(connections.)65
b(At)35 b(\256rst)f(it)g(seems)g(like)g(no)1974 3612
y(amount)23 b(of)h(memory)f(or)h(disk)h(space)f(can)g(resist)i(the)e
(continuous)1974 3711 y(creation)13 b(of)h Fh(inetd)g
Fr(processes)g(to)h(handle)e(an)i(attack)f(of)g(this)h(type.)1974
3811 y(However)m(,)h(there)g(is)i(a)f(maximum)e(number)g(of)i
(processes)f(that)h(will)1974 3911 y(be)k(created,)g(and)g(for)f(this)i
(particular)e(attack,)i(and)e(assuming)h(that)1974 4010
y(the)f(time)f Fh(synkill)g Fr(waits)i(to)f(timeout)f(a)h(new)f(IP)h
(address)g(is)g(ten)1974 4110 y(seconds,)26 b(the)f(number)f(should)g
(be)i(roughly)d(100.)42 b(As)26 b(shown)f(in)1974 4209
y(Figure)j(13,)j(each)e(second)f(ten)h(new)g(SYN)h(packets)f(appear)f
(and)1974 4309 y(these)18 b(trigger)e(the)i(creation)f(of)g(ten)h
Fh(inetd)f Fr(processes.)26 b(After)17 b(ten)1974 4409
y(seconds,)k(IP)g(addresses)g(from)f(the)i(\256rst)g(batch)e(will)i
(time)g(out)f(and)1974 4508 y(appropriate)h(RST)k(packets)e(will)i(be)e
(generated.)39 b(These)25 b(will)g(re-)1974 4608 y(lease)g(ten)f
(processes,)h(just)f(in)h(time)f(for)g(the)g(next)g(batch)g(of)g(SYN)
1974 4708 y(packets.)2073 4827 y(T)-6 b(ypical)25 b(SYN)g(attacks)h
(have)e(low)h(packet)f(rates,)i(and)f(part)f(of)1974
4926 y(the)i(attractiveness)g(of)g(this)g(attack)g(comes)g(from)f(the)h
(fact)g(that)h(a)1974 5026 y(small)d(number)e(of)h(packets)h(per)f
(minute)g(\(as)h(little)g(as)h(10\))e(is)i(suf-)1974
5126 y(\256cient)g(for)g(a)h(successful)f(denial)g(of)g(service)g
(attack.)43 b(As)26 b(shown)1974 5225 y(here,)k(the)f
Fh(synkill)f Fr(approach)e(can)j(be)f(an)h(ef)o(fective)e(defense)1974
5325 y(for)c(SYN)h(packet)e(rates)i(close)g(to)f(a)h(thousand)e(SYN)i
(packets)f(per)p eop
%%Page: 13 13
13 12 bop 184 1375 a @beginspecial 12 @llx 513 @lly 419
@urx 668 @ury 4070 @rwi @setspecial
%%BeginDocument: test2.epsi
% 0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000ffffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffd
% 0007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000ffffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffd
% 00060000000006000000000600000000060000000006000000000600000000600000c000000000
% c000000000c000000000c000000000c000000000c00000000c
% 00060000000006000000000600000000060000000006000000000600000000600000c000000000
% c000000000c000000000c000000000c000000000c00000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060c4000000000000000000000000000000000000000c0000f1070220000600000c0e0000000
% 00000000000000000000000000000000400007080e0440000c
% 0006124000000000000000000000000000000000000001b5ebce5225a50000600000c130000000
% 000000000000000000000000000000006b69a4aaa4b4a0000d
% 0006128000000000000000000000000000000000000001769de9f72ee61ff8600000c1138e0000
% 00000000000000000000000000000000e7def4ff65dcc3ff0c
% 0006128000000000000000000000000000000000000000ddefe9d327e71ff8600000c0c45b0000
% 00000000000000000000000000000000a5dbb73ec4fce3ff0d
% 00060d00000000000000000000000000000000000000000000000000000000600000c037d00000
% 0000000000000000000000000000000000030000800000000c
% 00060170000000000000000000000000000000000000000000000000000000600000c114100000
% 0000000000000000000000000000000000000000000000000d
% 00060288000000000000000000000000000000000000000000000000000000600000c114530000
% 0000000000000000000000000000000000000000000000000c
% 00060288000000000000000000000000000000000000000000000000000000600000c0e38e4000
% 0000000000000000000000000000000000000000000000000c
% 00060470000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000000000000000000000000000000000c
% 000600000000000000000000000000000000000000000000000000000000006001d0c000000000
% 0000000000000000000000000000000000000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600068c000000000
% 0000000000000000000000000000000000000000000000000c
% 000600000000000000000000000000000000000000000000000000000000006000a8f000000000
% 0000000000000000000003fffffffff800000000000000003c
% 00060000000000000000000000000000000000000000000000000000000000600090c000000000
% 0000000000000000000002000000000800000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 00060000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 34860000000000000000000000000000000000000000000000000000000000600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 1b460000000000000000000000000000000000000000000000000000000000600000c000000000
% 00000000000000000000020000000008000000003e0000000c
% 1b478000000000000000000000000000001fffffffffffffffffffffffffffe00000c000000000
% 0000000000000000000002000000000800000000e38000000c
% 14878000000000000000000000000000001fffffffffffffffffffffffffffe00000c000000000
% 000000000000000000000200000000080000000780f000000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 000000000000000000000200000000080000000c001800000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000008000800000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 00000000000000000000020000000008000000181c0c00000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000010220400000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000030220400000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000807800020220600000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 000000000000000000000200000000083f8000202c0200000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 00000000000000000000020000000008ff800060220300000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 00000000000000000000020000000008fffffe60230300000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 000000000000000000000200000000081f800020230200000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000803800020220600000c
% 0006000000000000000000000000000000100000000040c0808181010202066000d0c000000000
% 00000000000000000000020000000008000000303e0400000c
% 0006000000000000000000008000000000100000000040c0808181010202066001a8c000000000
% 0000000000200000000002000000000800000010200400000c
% 0006000000000000004000004000000000100000000040c080818101020206600168f000000000
% 0000100000100000000002000000000800000018200c00003c
% 0006000000000000006120004000000000100000000040c080818101020206600090f000000000
% 0000184800100000000002000000000800000008000800003c
% 000600000000000000a3f71c5c00000000100000000040c080818101020206600000c000000000
% 000028fce717000000000200000000080000000c003800000c
% 000600000000000000b128965000000000100000000040c080818101020206600000c000000000
% 00002c491594000000000200000000080000000780e000000c
% 000600000000000001f121a06000000000100000000040c080818101020206600000c000000000
% 00007c4838180000000002000000000800000000e38000000c
% 0006000000000000011926a05000000000100000000040c080818101020206600000c000000000
% 00004648d81400000000020000000008000000003e0000000c
% 0006000000000000020928b25800000000100000000040c080818101020206600000c000000000
% 000082491c960000000002000000000800000000000000000c
% 0006000000000000071dbfdcfc00000000100000000040c080818101020206600000c000000000
% 0001c76dff3f0000000002000000000800000000000000000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 0006000000000000000000000000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000d
% 000600000000000000000000003fffffff900000000040c080818101020206600000c000000000
% 00000000000007fffffff2000000000800000000000000000c
% 0006000000000000000000000000000000ffe000000040c080818101020206600000c000000000
% 000000000000000000001ffc0000000800000000000000000c
% 0006000000000000000000000000000000103c00000040c080818101020206600000c000000000
% 0000000000000000000002070000000800000000000000000d
% 0e86000000000000000000000000000000100700000040c080818101020206600000c000000000
% 000000000000000000000201c000000800000000000000000c
% 054600000000000001e0000000300000001001c0000040c080818101020206600000c000000000
% 0000780000000600000002007800000800000000000000000c
% 0b47800000000000022800000010000000100070000040c080818101020207e00000c000000000
% 0000890000000200000002000c00000800000000000000000c
% 0487800000000000023ce6db1cf0000000100010000040c080818101020207e00000c000000000
% 00008bb8db671e00000002000600000800000000000000000c
% 00060000000000000189136da590000000100018000040c080818101020206600000c000000000
% 000061446db93200000002000300000800000000000000000d
% 0007c0000000000000490a28bf1000000010000c000040c080818101020206600000c000000000
% 00001142451fa200000002000100000800000000000000000c
% 000640000000000002290a28a110000000100004000040c080818101020206600000c000000000
% 0000894245182200000002000180000800000000000000000c
% 000640000000000002298a28a318000000100006000040c0808181010202066001d0c000000000
% 000089624518a300000002000080000800000000000000000c
% 000640000000000003ccf3cf1cf0000000100002000040c0808181010202066001a8c000000000
% 0000f1bc79e71e000000020000c0000800000000000000000d
% 0006400000000000000002080000000000100002000040c080818101020206600068f000000000
% 0000000041000000000002000040000800000000000000003c
% 0006400000000000000002080000000000100003000040c080818101020206600190f000000000
% 0000000041000000000002000040000800000000000000003d
% 00064000000000000000071c0000000000100001000040c080818101020206600000c000000000
% 00000000e3800000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000060000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000d
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000020000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000060000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000d
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000000000000000000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000d
% 0686400000000000000000000000000000100001000040c0808181010202066000d0c000000000
% 0000000000000000000002000040000800000000000000000c
% 0d46400000000000000000000000000000100001000040c0808181010202066000e8c000000000
% 0000000000000000000002000040000800000000000000000c
% 0b47c00000000000000000000000000000100003000040c080818101020207e001e8f000000000
% 0000000000000000000002000040000800000000000000003c
% 048640000000000000000000000000000010001fc00040c080818101020206600050c000000000
% 00000000000000000000020003f8000800000000000000000c
% 000640000000000000000000000000000010000fc00040c080818101020206600000c000000000
% 00000000000000000000020003f8000800000000000000000c
% 000640000000000000003e00000000000010000fc00040c080818101020206600000c000000000
% 00000000000000000000020003f0000800000000000000000c
% 00064000000000000000e380000000000010000fc00040c080818101020206600000c000000000
% 00000000000000000000020001f0000800000000000000000c
% 0006400000000000000780f00000000000100007800040c080818101020206600000c000000000
% 00000000000000000000020001f0000800000000000000000c
% 0006400000000000000c00180000000000100007800040c080818101020206600000c000000000
% 00000000000000000000020001e0000800000000000000000d
% 0006400000000000000800080000000000100007800040c080818101020206600000c000000000
% 00000000000000000000020000e0000800000000000000000c
% 00064000000000000018000c0000000000100003000040c080818101020206600000c000000000
% 00000000000000000000020000e0000800000000000000000c
% 0006400000000000001000040000000000100003000040c080818101020206600000c000000000
% 00000000000000000000020000c0000800000000000000000c
% 0006400000000000003000040000000000100003000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 0006400000000000002032060000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 000640000000000000206a020000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 0006400000000000006044030000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 0006400000000000006044030000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000c
% 000640000000000000204b020000000000100000000040c080818101020206600000c000000000
% 0000000000000000000002000000000800000000000000000d
% 0006400000000000002032060000000000100000000040c080818101020206600000c000000000
% 0000180000000000000002000000000800000000000000000c
% 0006400000000000003000040000000000100001000040c080818101020206600000c000000000
% 0000fe0000000000000002000040000800000000000000000c
% 0006400000000000001000040000000000100001000040c080818101020206600000c000000000
% 000383c000000000000002000040000800000000000000000c
% 00064000000000000018000c0000000000100001000040c080818101020206600000c000000000
% 000e007000000000000002000040000800000000000000000c
% 0006400000000000000800080000000000100001000040c0808181010202066001d0c000000000
% 0018001800000000000002000040000800000000000000000c
% 0006400000000000000c003c0000000000100001000040c0808181010202066000a8c000000000
% 0010000800000000000002000040000800000000000000000c
% 0006400000000000000780e60000000000100001000040c080818101020206600168f000000000
% 0010000800000000000002000040000800000000000000003c
% 00064000000000000000e3830000000000100001000040c080818101020206600190f000000000
% 0030000c00000000000002000040000800000000000000003c
% 000640000000000000003e018000000000100001000040c080818101020206600000c000000000
% 0020640400000000000002000040000800000000000000000d
% 000640000000000000000000c000000000100000000040c080818101020206600000c000000000
% 0060d40600000000000002000000000800000000000000000c
% 0006400000000000000000006000000000100000000040c080818101020206600000c000000000
% 0040880200000000000002000000000800000000000000000c
% 0686400000000000000000003000000000100001000040c080818101020206600000c000000000
% 0040880200000000000002000040000800000000000000000c
% 0746400000000000000000001800000000100001000040c080818101020206600000c000000000
% 0040960200000000000002000040000800000000000000000d
% 0f47c00000000000000000000c00000000100001000040c080818101020207e00000c000000000
% 0060640600000000000002000040000800000000000000000c
% 0287c000000000000000000007fffffffff00001000040c080818101020207e00000c000000000
% 0020000400000000000002000040000800000000000000000c
% 0006400000000000000000000700000000100001000040c080818101020206600000c000000000
% 0030000c00000000000002000040000800000000000000000c
% 0006400000000000000000000580000000100001000040c080818101020206600000c000000000
% 0010000800000000000002000040000800000000000000000c
% 00064000000000000000000004c0000000100001000040c080818101020206600000c000000000
% 0010000800000000000002000040000800000000000000000d
% 0006400000000000000000000460000000100001000040c080818101020206600000c000000000
% 0018001800000000000002000040000800000000000000000d
% 0006400000000000000000000430000000100001000040c080818101020206600000c000000000
% 000e007000000000000002000000000800000000000000000c
% 0006400000000000000000000418000000100000000040c080818101020206600000c000000000
% 0003c3c000000000000002000000000800000000000000000c
% 000640000000000000000000040d800000100000000040c080818101020206600000c000000000
% 00007e0000000000000002000000000800000000000000000d
% 0006400000000000000000000407c00000100001000040c080818101020206600000c000000000
% 0000180000000000000002000040000800000000000000000d
% 0006400000000000000000000407c00000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000d
% 000640000000000000000000040fe00000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000800000000000000000c
% 000640000000000000000000040fe00000100001000040c080818101020206600000c000000000
% 0000080000000000000002000040000800000000000000000c
% 0006400000000000000000000407f00000100001000040c080818101020206600090c000000000
% 0000080000000000000002000040000800000000000000000c
% 0006400000000000000000000401f00000100001000040c080818101020206600168c000000000
% 0000080000000000000002000040000800000000000000000c
% 000640000000000000000007fc00780000100001000040c0808181010202066001a8f000000000
% 0000080000000000000002000040000800000000000000003c
% 000640000000000000000007fc00180000100001000040c0808181010202066001d0f000000000
% 0000080000000000000002000040000800000000000000003d
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 0000080000000000000002000000000800000000000000000c
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 0000080000000000000002000000000800000000000000000d
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 0000080000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 0000080000000000000002000040000800000000000000000d
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 0000080000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00003f0000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00003f0000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00003f0000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00003e0000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00001e0000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 00001e0000000000000002000040000800000000000000000c
% 0486400000000000000000040400000000100000000040c080818101020206600000c000000000
% 00001c0000000000000002000000000800000000000000000c
% 0b46400000000000000000040400000000100000000040c080818101020206600000c000000000
% 00000c0000000000000002000000000800000000000000000c
% 0d47c00000000000000000040400000000100001000040c080818101020207e00000c000000000
% 00000c0000000000000002000040000800000000000000000c
% 0e87c00000000000000000040400000000100001000040c080818101020207e00000c000000000
% 0000080000000000000002000040000800000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 0000000000000000000002000040000ff8000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 3fffffffffff8000000002000040000ff8000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 3fffffffffff8000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600190c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c0808181010202066000a8c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100000000040c0808181010202066000a8f000000000
% 2000000000008000000002000000000818000000000000003c
% 0006400000000000000000040400000000100000000040c080818101020206600090c000000000
% 2000000000008000000002000000000818000000000000000c
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 2000000000008000000002000000000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 2000000000008000000002000000000818000000000000000c
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 2000000000008000000002000000000818000000000000000c
% 0006400000000000000000040400000000100000000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 2000000000008000000002000040000818000000000000000c
% 0006400000000000000000040400000000100001000040c080818101020206600000c000000000
% 200000000000800000000200004000081800003fffe000000c
% 0086400000000600000000060400000006100001000640c080818701020206600010c000000000
% e000000000c080000000c200004000c81800003fe07fc0000c
% 0146400000000600000000060400000006100001000640c080818701020206600028c000000000
% e000000000c080000000c200000000c81ff00030e06040000c
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00028ffffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffc
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00010ffffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffc
% 00007ffffffffffffffffffc00000000000000000000000000000000000000000000ffffffffff
% e00000000000fffffffffe0000000000001fffe000007fff80
% 00040000000064800000002480000000748000000034800000007480000000000000800000000c
% 9000000004900000000e9000000006900000000e9000000001
% 000a000000002b400000005b400000002b400000003b400000006b400000000000014000000005
% 680000000b68000000056800000007680000000d6800000000
% 000a000000002b400000006b400000005b400000007b400000001b400380000000014000000005
% 680000000d680000000b680000000f68000000036800000000
% 0004000000002480000000748000000064800000001480000000648004c0000000008000000004
% 900000000e900000000c9000000002900000000c9000380001
% 00000000000000000000000000000000000000000000000000000000044e700000000000000000
% 000000000000000000000000000000000000000000004c0000
% 000000000000000000000000000000000000000000000000000000000311d80000000000000000
% 0000000000000000000000000000000000000000000045c700
% 0000000000000000000000000000000000000000000000000000000000df800000000000000000
% 00000000000000000000000000000000000000000000322d80
% 000000000000000000000000000000000000000000000000000000000450800000000000000000
% 000000000000000000000000000000000000000000000fe800
% 000000000000000000000000000000000000000000000000000000000451980000000000000000
% 00000000000000000000000000000000000000000000460801
% 00000000000000000000000000000000000000000000000000000000038e720000000000000000
% 00000000000000000000000000000000000000000000462980
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000039c720
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 8.17 93.875 m 8.17 43.52 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 8.17 93.875 m 74.813 93.875 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 74.813 93.875 m 74.146 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 93.875 m 8.836 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.457 94.362] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 74.813 85.483 m 74.146 85.483 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 85.483 m 8.836 85.483 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.633 85.969] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 74.813 77.09 m 74.146 77.09 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 77.09 m 8.836 77.09 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.633 77.577] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 74.813 68.697 m 74.146 68.697 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 68.697 m 8.836 68.697 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.633 69.184] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 74.813 60.305 m 74.146 60.305 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 60.305 m 8.836 60.305 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.633 60.792] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 74.813 51.912 m 74.146 51.912 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 51.912 m 8.836 51.912 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 4.809 52.399] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 74.813 43.52 m 74.146 43.52 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 43.52 m 8.836 43.52 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 43.52 m 8.17 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 8.17 93.875 m 8.17 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 7.758 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 19.462 43.52 m 19.462 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 19.462 93.875 m 19.462 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 18.226 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 30.765 43.52 m 30.765 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 30.765 93.875 m 30.765 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 29.53 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 42.058 43.52 m 42.058 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 42.058 93.875 m 42.058 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 40.822 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(300) s
savemat setmatrix
n 53.35 43.52 m 53.35 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 53.35 93.875 m 53.35 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 52.114 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(400) s
savemat setmatrix
n 64.642 43.52 m 64.642 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 64.642 93.875 m 64.642 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 63.407 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(500) s
savemat setmatrix
n 8.17 93.875 m 74.813 93.875 l
74.813 43.52 l
8.17 43.52 l
8.17 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 56.031 46.155] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 2) s
savemat setmatrix
n 71.479 93.875 m 71.479 51.912 l
73.628 51.912 l
73.628 93.875 l
71.479 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 69.331 93.875 m 69.331 51.912 l
71.479 51.912 l
71.479 93.875 l
69.331 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 67.193 93.875 m 67.193 51.912 l
69.331 51.912 l
69.331 93.875 l
67.193 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 65.044 93.875 m 65.044 51.912 l
67.193 51.912 l
67.193 93.875 l
65.044 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 62.896 93.875 m 62.896 51.912 l
65.044 51.912 l
65.044 93.875 l
62.896 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 60.748 93.875 m 60.748 51.912 l
62.896 51.912 l
62.896 93.875 l
60.748 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 58.599 93.875 m 58.599 51.912 l
60.748 51.912 l
60.748 93.875 l
58.599 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 56.461 93.875 m 56.461 51.912 l
58.599 51.912 l
58.599 93.875 l
56.461 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 54.313 93.875 m 54.313 51.912 l
56.461 51.912 l
56.461 93.875 l
54.313 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 43.582 93.875 m 43.582 51.912 l
54.313 51.912 l
54.313 93.875 l
43.582 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 32.85 93.875 m 32.85 77.09 l
43.582 77.09 l
43.582 93.875 l
32.85 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 30.702 93.875 m 30.702 81.281 l
32.85 81.281 l
32.85 93.875 l
30.702 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 19.971 93.875 m 30.702 93.875 l
19.971 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 9.239 93.875 m 19.971 93.875 l
9.239 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 8.17 93.875 m 8.17 61.152 l
9.239 61.152 l
9.239 93.875 l
8.17 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 70.59 45.668 m 73.257 45.668 l
gsave
0 0 0 0.088 0 B
grestore
n 81.231 93.875 m 81.231 43.52 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 81.231 93.875 m 147.87 93.875 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 147.87 93.875 m 147.21 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 93.875 m 81.897 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.518 94.362] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 147.87 87.578 m 147.21 87.578 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 87.578 m 81.897 87.578 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 88.065] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 147.87 81.281 m 147.21 81.281 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 81.281 m 81.897 81.281 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 81.768] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 147.87 74.995 m 147.21 74.995 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 74.995 m 81.897 74.995 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 75.481] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 147.87 68.697 m 147.21 68.697 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 68.697 m 81.897 68.697 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 69.184] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 147.87 62.4 m 147.21 62.4 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 62.4 m 81.897 62.4 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 62.887] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 147.87 56.103 m 147.21 56.103 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 56.103 m 81.897 56.103 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 56.59] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 147.87 49.817 m 147.21 49.817 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 49.817 m 81.897 49.817 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 78.694 50.304] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 147.87 43.52 m 147.21 43.52 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 43.52 m 81.897 43.52 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 43.52 m 81.231 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 81.231 93.875 m 81.231 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.819 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 92.523 43.52 m 92.523 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 92.523 93.875 m 92.523 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 91.287 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 103.83 43.52 m 103.83 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 103.83 93.875 m 103.83 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 102.591 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 115.12 43.52 m 115.12 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 115.12 93.875 m 115.12 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 113.883 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(300) s
savemat setmatrix
n 126.41 43.52 m 126.41 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 126.41 93.875 m 126.41 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 125.175 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(400) s
savemat setmatrix
n 137.7 43.52 m 137.7 44.187 l
gsave
0 0 0 0.176 0 B
grestore
n 137.7 93.875 m 137.7 93.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 136.468 95.844] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(500) s
savemat setmatrix
n 81.231 93.875 m 147.87 93.875 l
147.87 43.52 l
81.231 43.52 l
81.231 93.875 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 128.516 46.155] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 2) s
savemat setmatrix
n 144.54 93.875 m 146.69 93.875 l
144.54 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 142.39 93.875 m 144.54 93.875 l
142.39 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 140.25 93.875 m 140.25 93.229 l
142.39 93.229 l
142.39 93.875 l
140.25 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 138.1 93.875 m 138.1 93.007 l
140.25 93.007 l
140.25 93.875 l
138.1 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 135.96 93.875 m 135.96 93.092 l
138.1 93.092 l
138.1 93.875 l
135.96 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 133.81 93.875 m 133.81 93.801 l
135.96 93.801 l
135.96 93.875 l
133.81 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 131.66 93.875 m 133.81 93.875 l
131.66 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 129.52 93.875 m 129.52 93.452 l
131.66 93.452 l
131.66 93.875 l
129.52 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 127.37 93.875 m 127.37 86.012 l
129.52 86.012 l
129.52 93.875 l
127.37 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 116.64 93.875 m 116.64 49.87 l
127.37 49.87 l
127.37 93.875 l
116.64 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 105.91 93.875 m 116.64 93.875 l
105.91 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 93.032 93.875 m 93.032 86.319 l
105.91 86.319 l
105.91 93.875 l
93.032 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 81.231 93.875 m 81.231 93.865 l
93.032 93.865 l
93.032 93.875 l
81.231 93.875 l
gsave
0 0 0 0.088 0 B
grestore
n 143.65 45.668 m 146.32 45.668 l
gsave
0 0 0 0.088 0 B
grestore
n 49.089 71.502 m
48.232 69.01 l
49.899 68.994 l
cl
0 0 0 F
n 34.418 58.806 m 38.932 59.277 45.515 58.101 47.96 60.217 c
49.9 61.896 49.235 65.646 49.066 69.002 c
gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 23.698 58.242] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Attack) s
0 0 m 231 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Stopped) s
savemat setmatrix
n 122 71.502 m
121.14 69.01 l
122.81 68.994 l
cl
0 0 0 F
n 107.33 58.806 m 111.85 59.277 118.43 58.101 120.87 60.217 c
122.81 61.896 122.15 65.646 121.98 69.002 c
gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 96.61 58.242] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Attack) s
0 0 m 231 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Stopped) s
savemat setmatrix
n 128.36 54.449 m
130.86 53.616 l
130.86 55.282 l
cl
0 0 0 F
n 130.86 54.449 m
134.85 54.449 l
gsave
0 0 0 0 0 B
grestore
n 98.177 85.482 m
97.344 82.982 l
99.01 82.982 l
cl
0 0 0 F
n 98.177 80.122 m
98.177 82.982 l
gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 96.766 77.3] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
() s(Symbol02000200) gf
0 0 m 0 ss 
(a) s
savemat setmatrix
n 100.92 76.313 m 100.93 77.107 100.6 77.896 100.04 78.455 c
99.478 79.019 98.689 79.345 97.895 79.342 c
97.101 79.345 96.312 79.019 95.753 78.455 c
95.189 77.896 94.863 77.107 94.866 76.313 c
94.863 75.519 95.189 74.73 95.753 74.171 c
96.312 73.607 97.101 73.281 97.895 73.284 c
98.689 73.281 99.478 73.607 100.04 74.171 c
100.6 74.73 100.93 75.519 100.92 76.313 c
cl gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 137.674 55.859] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
() s(Symbol02000200) gf
0 0 m 0 ss 
(b) s
savemat setmatrix
n 141.67 54.434 m 141.68 55.228 141.35 56.017 140.79 56.576 c
140.23 57.14 139.44 57.466 138.65 57.463 c
137.85 57.466 137.06 57.14 136.5 56.576 c
135.94 56.017 135.61 55.228 135.62 54.434 c
135.61 53.64 135.94 52.851 136.5 52.292 c
137.06 51.728 137.85 51.402 138.65 51.405 c
139.44 51.402 140.23 51.728 140.79 52.292 c
141.35 52.851 141.68 53.64 141.67 54.434 c
cl gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 26.927 73.477] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
() s(Symbol02000200) gf
0 0 m 0 ss 
(a) s
savemat setmatrix
n 31.085 72.489 m 31.088 73.283 30.762 74.072 30.198 74.631 c
29.639 75.195 28.85 75.521 28.056 75.518 c
27.262 75.521 26.473 75.195 25.914 74.631 c
25.35 74.072 25.024 73.283 25.027 72.489 c
25.024 71.695 25.35 70.906 25.914 70.347 c
26.473 69.783 27.262 69.457 28.056 69.46 c
28.85 69.457 29.639 69.783 30.198 70.347 c
30.762 70.906 31.088 71.695 31.085 72.489 c
cl gsave
0 0 0 0 0 B
grestore
n 37.099 81.391 m
34.742 80.212 l
35.92 79.034 l
cl
0 0 0 F
n 30.187 74.479 m
35.331 79.623 l
gsave
0 0 0 0 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 9.457 47.665] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 82.909 47.21] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 141.942 97.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 68.683 97.522] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n 49.227 73.453 m 49.227 94.384 l
gsave
    [2 1 2 1] 0 setdash
0 0 0 0 0 B
grestore
n 122.02 73.375 m 122.02 94.306 l
gsave
    [2 1 2 1] 0 setdash
0 0 0 0 0 B
grestore
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial -83 1640 a Fo(Figure)37 b(15.)g(T)-5 b(est)37
b(case)g(2:)60 b(Connection)35 b(estab)o(lishment)h(success)i(rates)f
(and)f(a)o(vera)o(g)q(e)i(dela)n(ys)g(while)e(D)h(is)-83
1740 y(temporaril)o(y)23 b(under)g(attac)n(k,)g(without)f(active)h(def)
o(ense)g(b)n(y)g Fh(synkill)p Fo(.)168 3340 y @beginspecial
15 @llx 534 @lly 426 @urx 692 @ury 4110 @rwi @setspecial
%%BeginDocument: test3.epsi
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 348000000000000000000000000000000000000000000000000000000000000000074000000000
% 0000000000000000000000000000000000000000000000000000
% 1b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00002a3ffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffff0
% 1d47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00005a3ffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffff0
% 1e8600000000000040000000000008000000000001800000000000100000006000024300000000
% 000060000000000004000000000000c000000000000800000030
% 000600000000000040000000000008000000000001800000000000100000006000000300000000
% 000060000000000004000000000000c000000000000800000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0006062000000000000000000000000000000000000000c0000f10702700006000000307000000
% 000000000000000000000000000000000100001c203813800030
% 0006092000000000000000000000000000000000000001b5ebce5225a200006000000309800000
% 0000000000000000000000000000000001ada692aa92d1000030
% 0006094000000000000000000000000000000000000001769de9f72ee51ff860000003089ce000
% 00000000000000000000000000000000039f7bd3fd97728ffc30
% 0006094000000000000000000000000000000000000000ddefe9d327e61ff8600000030623b000
% 0000000000000000000000000000000002976edcfb13f30ffc30
% 000606800000000000000000000000000000000000000000000000000000006000000301bf0000
% 0000000000000000000000000000000000000c00020000000030
% 000600b80000000000000000000000000000000000000000000000000000006000000308a10000
% 0000000000000000000000000000000000000000000000000030
% 000601440000000000000000000000000000000000000000000000000000006000000308a33000
% 0000000000000000000000000000000000000000000000000030
% 0006014400000000000000000000000000000000000000000000000000000060000003071ce400
% 0000000000000000000000000000000000000000000000000030
% 000602380000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000074300000000
% 0000000000000000000000000000000000000000000000000030
% 00060000000000000000000000000000000000000000000000000000000000600001a300000000
% 0000000000000000000000000000000000000000000000000030
% 00060000000000000000000000000000000000000000000000000000000000600002a3c0000000
% 00000000000000000000000000000000000000000000000000f0
% 000600000000000000000000000000000000000000000000000000000000006000024300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 348600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 1b4600000000000000000000000000000000000000000000000000000000006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 1b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffc001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 1487ffffffffffffffffffffffffffffffffffffffffffffffffffffffc001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000034300000000
% 0000000000000000000000000000000000000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600006a300000000
% 0000000000000000000000000000000000000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600005a3c0000000
% 00000000000000000000000000000000000000000000000000f0
% 0006408183020408183020408103020408103060408103060408103060400060000243c0000000
% 00000000000000000000000000000000000000000000000000f0
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0e8640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 054640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0b47c081830204081830204081030204081030604081030604081030604001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0487c081830204081830204081030204081030604081030604081030604001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000074300000000
% 0000000000000000000000000000000000000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600006a300000000
% 0000000000000000000000000000000000000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600001a3c0000000
% 00000000000000000000000000000000000000000000000000f0
% 0006408183020408183020408103020408103060408103060408103060400060000643c0000000
% 00000000000000000000000000000000000000000000000000f0
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 068640818302040818302040810302040810306040810306040810306040006000034300000000
% 0000000000000000000000000000000000000000000000000030
% 0d464081830204081830204081030204081030604081030604081030604000600003a300000000
% 0000000000000000000000000000000000000000000000000030
% 0b47c081830204081830204081030204081030604081030604081030604001e00007a3c0000000
% 00000000000000000000000000000000000000000000000000f0
% 048640818302040818302040810302040810306040810306040810306040006000014300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000380000c00000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000100000400000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000001038e3c1c780000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000104516422240000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000104234421240000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000001042d4421240000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 000000000000000000000000010e314631240000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000003f3dfbc1e7e0000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000074300000000
% 0000000000000000000000000000000000000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600002a300000000
% 0000000000000000000000000000000400000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600005a3c0000000
% 00000000000000000000000000000002000c00000000000000f0
% 0006408183020408183020408103020408103060408103060408103060400060000643c0000000
% 00000000000000000000000000088002000400000000000000f1
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000001dddc72ee3c0000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000228a25a92640000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 000000000000000000000000006886831f440000000000000031
% 068640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000001a89a8290440000000000000030
% 074640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000228a2cad1460000000000000030
% 0f47c081830204081830204081030204081030604081030604081030604001e000000300000000
% 00000000000000000000000003fcff77ee3c0000000000000030
% 0287c081830204081830204081030204081030604081030604081030604001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000002000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000001020000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000001000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 000000000000000000000000034ce39c6f1c0000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000001b312d224a40000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000122341224be0000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000024300000000
% 0000000000000000000000000122d41224a00000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600005a300000000
% 0000000000000000000000000123165224a20000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600006a3c0000000
% 00000000000000000000000003f7fbbf7fdc00000000000000f0
% 0006408183020408183020408103020408103060408103060408103060400060000743c0000000
% 00000000000000000000000000000000000000000000000000f0
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000004000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 000000000000000000000000000001e000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000000000000003ffff3ffff00000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000ffffe1ffffc0000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000001800000000060000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000001000000000020000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 048640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0b4640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0d47c081830204081830204081030204081030604081030604081030604001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 0e87c081830204081830204081030204081030604081030604081030604001e000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000000000000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000007f80000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000007f80000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000064300000000
% 0000000000000000000000000000004080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600002a300000000
% 0000000000000000000000000000004080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600002a3c0000000
% 00000000000000000000000000000040800000000000000000f0
% 000640818302040818302040810302040810306040810306040810306040006000024300000000
% 0000000000000000000000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 0000000000000000000000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000000
% 00000000000000ff800000000000004080000000000000000030
% 0006408183020408183020408103020408103060408103060408103060400060000003000001ff
% 0000000000000081800000000000004080000000000000000030
% 0006408183020408183020408103020408103060408103060408103060400060000003000001ff
% 0000000000000081800000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000181
% 0000000000000081800000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000181
% 0000000000000081800000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000181
% 0000000000000081800000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000181
% 0000000000000081800000000000004080000000000000000030
% 000640818302040818302040810302040810306040810306040810306040006000000300000181
% 00000000000000818000000000003fc080000000000000000030
% 0006408183020408183020408103020408103060408103060408103060400060000003e0000181
% 0000000000000081800000000000204080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600000032000ff81
% 0000001ff03fc081800000000000204080000000000000000030
% 0006408183020408183020408103020408103060408103060408103060400060000003207fff81
% 03fc001ff0204081800000000000204080000000000000000030
% 0006408183020408183020408103020408103060408103060408103060400060000003207fc181
% 03fc001810204081800000000000204080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600000032040c181
% 0204001810204081800000000000204080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600000032040c181
% 02040ff810204081800000000000204080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600000032040c181
% 02040ff810204081800000000000204080000000000000000030
% 00064081830204081830204081030204081030604081030604081030604000600000032040c181
% 020408181fe04081800000000000204080000000000000000030
% 00864081830204085830204081030a04081030604181030604081030604000600000432040c181
% 020468181fe0408184000000000020c080000000000800000030
% 01464081830204085830204081030a04081030604181030604081030604000600000a33fc0c181
% 0204681810207f818403fc00000020c080000000000800000030
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000a3ffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffff0
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000043ffffffff
% fffffffffffffffffffffffffffffffffffffffffffffffffff0
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 0004000000000003a00000000000c900000000001ba00000000000a40000000000000200000000
% 0001d000000000006480000000000dd000000000009200000000
% 000a0000000000035000000000005680000000000b5000000000015a0000000000000500000000
% 0001a800000000002b400000000005a800000000016d00000000
% 000a000000000000d0000000000056800000000008d00000000001da0000000000000500000000
% 00006800000000002b400000000004680000000001ad03800000
% 00040000000000032000000000004900000000000b200000000001e40700000000000200000000
% 000190000000000024800000000005900000000001d204c00000
% 000000000000000000000000000000000000000000000000000000000980000000000000000000
% 00000000000000000000000000000000000000000000045c7000
% 00000000000000000000000000000000000000000000000000000000089c700000000000000000
% 000000000000000000000000000000000000000000000322d800
% 000000000000000000000000000000000000000000000000000000000622d80000000000000000
% 0000000000000000000000000000000000000000000000fe8000
% 0000000000000000000000000000000000000000000000000000000001be800000000000000000
% 0000000000000000000000000000000000000000000004608000
% 0000000000000000000000000000000000000000000000000000000008a0800000000000000000
% 0000000000000000000000000000000000000000000004629800
% 0000000000000000000000000000000000000000000000000000000008a2980000000000000000
% 00000000000000000000000000000000000000000000039c7200
% 00000000000000000000000000000000000000000000000000000000071c720000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 9.016 86.54 m 75.659 86.54 l
9.016 86.54 m 9.016 36.185 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 9.016 86.54 m 9.683 86.54 l
75.659 86.54 m 74.993 86.54 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 7.304 87.027] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 9.016 78.148 m 9.683 78.148 l
75.659 78.148 m 74.993 78.148 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.479 78.634] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 9.016 69.755 m 9.683 69.755 l
75.659 69.755 m 74.993 69.755 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.479 70.242] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 9.016 61.362 m 9.683 61.362 l
75.659 61.362 m 74.993 61.362 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.479 61.849] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 9.016 52.97 m 9.683 52.97 l
75.659 52.97 m 74.993 52.97 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.479 53.457] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 9.016 44.577 m 9.683 44.577 l
75.659 44.577 m 74.993 44.577 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.655 45.064] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 9.016 36.185 m 9.683 36.185 l
75.659 36.185 m 74.993 36.185 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.655 36.672] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(120) s
savemat setmatrix
n 9.016 86.54 m 9.016 85.873 l
9.016 36.185 m 9.016 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 8.604 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 23.505 86.54 m 23.505 85.873 l
23.505 36.185 m 23.505 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 22.681 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 37.993 86.54 m 37.993 85.873 l
37.993 36.185 m 37.993 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 36.758 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 52.482 86.54 m 52.482 85.873 l
52.482 36.185 m 52.482 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 51.246 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 66.971 86.54 m 66.971 85.873 l
66.971 36.185 m 66.971 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 65.735 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 9.016 86.54 m 75.659 86.54 l
75.659 36.185 l
9.016 36.185 l
9.016 86.54 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 56.877 38.82] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 3) s
savemat setmatrix
n 71.436 38.333 m 74.103 38.333 l
9.016 86.54 m 9.016 44.577 l
10.032 44.577 l
10.032 86.54 l
9.016 86.54 l
10.032 86.54 m 10.032 44.577 l
12.054 44.577 l
12.054 86.54 l
10.032 86.54 l
12.054 86.54 m 12.054 44.577 l
14.085 44.577 l
14.085 86.54 l
12.054 86.54 l
14.085 86.54 m 14.085 44.577 l
16.118 44.577 l
16.118 86.54 l
14.085 86.54 l
16.118 86.54 m 16.118 44.577 l
18.139 44.577 l
18.139 86.54 l
16.118 86.54 l
18.139 86.54 m 18.139 44.577 l
20.171 44.577 l
20.171 86.54 l
18.139 86.54 l
20.171 86.54 m 20.171 44.577 l
22.203 44.577 l
22.203 86.54 l
20.171 86.54 l
22.203 86.54 m 22.203 44.577 l
24.224 44.577 l
24.224 86.54 l
22.203 86.54 l
24.224 86.54 m 24.224 44.577 l
26.256 44.577 l
26.256 86.54 l
24.224 86.54 l
26.256 86.54 m 26.256 44.577 l
28.289 44.577 l
28.289 86.54 l
26.256 86.54 l
28.289 86.54 m 28.289 44.577 l
30.31 44.577 l
30.31 86.54 l
28.289 86.54 l
30.31 86.54 m 30.31 44.577 l
32.342 44.577 l
32.342 86.54 l
30.31 86.54 l
32.342 86.54 m 32.342 44.577 l
34.374 44.577 l
34.374 86.54 l
32.342 86.54 l
34.374 86.54 m 34.374 44.577 l
36.395 44.577 l
36.395 86.54 l
34.374 86.54 l
36.395 86.54 m 36.395 44.577 l
38.427 44.577 l
38.427 86.54 l
36.395 86.54 l
38.427 86.54 m 38.427 44.577 l
40.459 44.577 l
40.459 86.54 l
38.427 86.54 l
40.459 86.54 m 40.459 44.577 l
42.48 44.577 l
42.48 86.54 l
40.459 86.54 l
42.48 86.54 m 42.48 44.577 l
44.513 44.577 l
44.513 86.54 l
42.48 86.54 l
44.513 86.54 m 44.513 44.577 l
46.534 44.577 l
46.534 86.54 l
44.513 86.54 l
46.534 86.54 m 46.534 44.577 l
48.566 44.577 l
48.566 86.54 l
46.534 86.54 l
48.566 86.54 m 48.566 44.577 l
50.598 44.577 l
50.598 86.54 l
48.566 86.54 l
50.598 86.54 m 50.598 44.577 l
52.619 44.577 l
52.619 86.54 l
50.598 86.54 l
52.619 86.54 m 52.619 44.577 l
54.651 44.577 l
54.651 86.54 l
52.619 86.54 l
54.651 86.54 m 54.651 44.577 l
56.684 44.577 l
56.684 86.54 l
54.651 86.54 l
56.684 86.54 m 56.684 44.577 l
58.705 44.577 l
58.705 86.54 l
56.684 86.54 l
58.705 86.54 m 58.705 44.577 l
60.737 44.577 l
60.737 86.54 l
58.705 86.54 l
60.737 86.54 m 60.737 44.577 l
62.769 44.577 l
62.769 86.54 l
60.737 86.54 l
62.769 86.54 m 62.769 44.577 l
64.79 44.577 l
64.79 86.54 l
62.769 86.54 l
64.79 86.54 m 64.79 44.577 l
66.822 44.577 l
66.822 86.54 l
64.79 86.54 l
66.822 86.54 m 66.822 44.577 l
68.854 44.577 l
68.854 86.54 l
66.822 86.54 l
68.854 86.54 m 68.854 44.577 l
70.875 44.577 l
70.875 86.54 l
68.854 86.54 l
gsave
0 0 0 0.088 0 B
grestore
n 83.77 86.54 m 150.41 86.54 l
83.77 86.54 m 83.77 36.185 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 83.77 86.54 m 84.436 86.54 l
150.41 86.54 m 149.75 86.54 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 82.057 87.027] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 83.77 80.243 m 84.436 80.243 l
150.41 80.243 m 149.75 80.243 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 80.73] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 83.77 73.946 m 84.436 73.946 l
150.41 73.946 m 149.75 73.946 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 74.433] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 83.77 67.66 m 84.436 67.66 l
150.41 67.66 m 149.75 67.66 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 68.146] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 83.77 61.362 m 84.436 61.362 l
150.41 61.362 m 149.75 61.362 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 61.849] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 83.77 55.065 m 84.436 55.065 l
150.41 55.065 m 149.75 55.065 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 55.552] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 83.77 48.768 m 84.436 48.768 l
150.41 48.768 m 149.75 48.768 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 49.255] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 83.77 42.482 m 84.436 42.482 l
150.41 42.482 m 149.75 42.482 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 42.969] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 83.77 36.185 m 84.436 36.185 l
150.41 36.185 m 149.75 36.185 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.233 36.672] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 83.77 86.54 m 83.77 85.873 l
83.77 36.185 m 83.77 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 83.358 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 98.259 86.54 m 98.259 85.873 l
98.259 36.185 m 98.259 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 97.435 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 112.75 86.54 m 112.75 85.873 l
112.75 36.185 m 112.75 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 111.511 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 127.24 86.54 m 127.24 85.873 l
127.24 36.185 m 127.24 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 126 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 141.72 86.54 m 141.72 85.873 l
141.72 36.185 m 141.72 36.852 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 140.488 88.509] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 83.77 86.54 m 150.41 86.54 l
150.41 36.185 l
83.77 36.185 l
83.77 86.54 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 131.055 38.82] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 3) s
savemat setmatrix
n 146.19 38.333 m 148.86 38.333 l
83.77 86.54 m 83.77 83.64 l
84.786 83.64 l
84.786 86.54 l
83.77 86.54 l
84.786 86.54 m 84.786 86.191 l
86.808 86.191 l
86.808 86.54 l
84.786 86.54 l
86.808 86.54 m 86.808 84.36 l
88.839 84.36 l
88.839 86.54 l
86.808 86.54 l
88.839 86.54 m 88.839 84.096 l
90.871 84.096 l
90.871 86.54 l
88.839 86.54 l
90.871 86.54 m 90.871 81.799 l
92.893 81.799 l
92.893 86.54 l
90.871 86.54 l
92.893 86.54 m 94.925 86.54 l
92.893 86.54 l
94.925 86.54 m 94.925 84.392 l
96.957 84.392 l
96.957 86.54 l
94.925 86.54 l
96.957 86.54 m 98.978 86.54 l
96.957 86.54 l
98.978 86.54 m 98.978 85.186 l
101.01 85.186 l
101.01 86.54 l
98.978 86.54 l
101.01 86.54 m 101.01 84.053 l
103.04 84.053 l
103.04 86.54 l
101.01 86.54 l
103.04 86.54 m 103.04 85.725 l
105.06 85.725 l
105.06 86.54 l
103.04 86.54 l
105.06 86.54 m 105.06 83.873 l
107.09 83.873 l
107.09 86.54 l
105.06 86.54 l
107.09 86.54 m 107.09 86.159 l
109.13 86.159 l
109.13 86.54 l
107.09 86.54 l
109.13 86.54 m 109.13 81.429 l
111.15 81.429 l
111.15 86.54 l
109.13 86.54 l
111.15 86.54 m 113.18 86.54 l
111.15 86.54 l
113.18 86.54 m 115.21 86.54 l
113.18 86.54 l
115.21 86.54 m 115.21 86.191 l
117.23 86.191 l
117.23 86.54 l
115.21 86.54 l
117.23 86.54 m 119.27 86.54 l
117.23 86.54 l
119.27 86.54 m 121.29 86.54 l
119.27 86.54 l
121.29 86.54 m 123.32 86.54 l
121.29 86.54 l
123.32 86.54 m 125.35 86.54 l
123.32 86.54 l
125.35 86.54 m 125.35 83.302 l
127.37 83.302 l
127.37 86.54 l
125.35 86.54 l
127.37 86.54 m 127.37 78.984 l
129.41 78.984 l
129.41 86.54 l
127.37 86.54 l
129.41 86.54 m 131.44 86.54 l
129.41 86.54 l
131.44 86.54 m 133.46 86.54 l
131.44 86.54 l
133.46 86.54 m 135.49 86.54 l
133.46 86.54 l
135.49 86.54 m 137.52 86.54 l
135.49 86.54 l
137.52 86.54 m 139.54 86.54 l
137.52 86.54 l
139.54 86.54 m 141.58 86.54 l
139.54 86.54 l
141.58 86.54 m 143.61 86.54 l
141.58 86.54 l
143.61 86.54 m 145.63 86.54 l
143.61 86.54 l
gsave
0 0 0 0.088 0 B
grestore
n savemat currentmatrix pop [0 -1.818 4.143 0 131.087 77.993] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(}) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1 121.875 65.734] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(Load on ) s
0 0 m 231 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(attacked ) s
0 231 m 463 ss (Times-Roman02000200) gf
0.00 0.00 0.00 rgb 
(machine) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1 10.5004 40.1867] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 85.1155 39.7796] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 69.3991 90.3156] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 143.933 90.1703] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial 212 3606 a(Figure)g(16.)g(T)-5 b(est)23
b(case)h(3:)32 b(Connection)21 b(estab)o(lishment)i(success)h(rates)f
(and)g(a)o(vera)o(g)q(e)h(dela)n(ys.)-182 3873 y Fr(minute)18
b(\(roughly)e(20)j(per)f(second\))g(in)h(which)g(spoofed)e(addresses)
-182 3972 y(are)24 b(not)f(repeated.)37 b(Higher)23 b(volumes)g(will)i
(result)f(in)g(a)h(denial)e(of)-182 4072 y(service)17
b(similar)g(to)h(that)f(of)g(opening)e(thousand)h(of)h(telnet)h
(connec-)-182 4172 y(tions,)d(and)f(the)g(attractiveness)g(of)g(the)g
(SYN)h(attack)f(will)h(be)f(dimin-)-182 4271 y(ished,)19
b(if)i(not)f(gone.)-182 4707 y Ft(7)o(.)25 b(Futur)n(e)i(Impr)n
(ovements)-83 5126 y Fr(This)15 b(section)f(describes)g(future)g
(improvements)e(to)j Fh(synkill)-182 5225 y Fr(that)26
b(would)f(make)g(the)i(tool)e(more)h(ef)o(fective)e(against)i(improved)
-182 5325 y(SYN)20 b(\257ooding)f(attacks.)1974 3873
y Fq(7.1)o(.)k(Connection)e(State)i(T)-7 b(racking)2073
4117 y Fr(Currently)i(,)56 b(it)50 b(is)h(possible)f(for)f(an)h
(attacker)f(to)h(\252teach\272)1974 4217 y Fh(synkill)14
b Fs(good)g Fr(addresses)h(that)g(are)g(in)g(fact)g(spoofed,)g(by)f
(spoof-)1974 4316 y(ing)25 b(ACK)h(or)g(RST)g(packets.)42
b(That)26 b(could)e(be)i(exploited)e(to)h(\256rst)1974
4416 y(teach)f Fh(synkill)g Fr(a)h(spoofed)f(address)g(and)g(then)g
(use)h(that)g(same)1974 4516 y(address)13 b(for)g(a)h(SYN)g(\257ooding)
d(attack.)25 b(Although)12 b Fh(synkill)g Fr(arti-)1974
4615 y(\256cially)i(completes)f(each)h(connection,)f(thus)h(avoiding)e
(port)h(\257ood-)1974 4715 y(ing,)21 b(the)g(attacker)g(may)f(still)j
(be)e(able)g(to)g(start)h(a)g(lar)o(ge)e(number)f(of)1974
4815 y(server)k(processes)g(in)g(the)h(tar)o(get)e(machine.)36
b(This)24 b(again)e(leads)i(to)1974 4914 y(the)19 b(degradation)d(of)i
(service)h(attack)f(described)g(in)g(Section)h(2.2.3.)2073
5026 y Fh(Synkill)40 b Fr(could)g(respond)f(to)i(this)h(improved)c
(attack)j(by)1974 5126 y(keeping)29 b(state)j(about)e(all)i(observed)d
(TCP)j(connections)d(on)i(the)1974 5225 y(LAN.)20 b(That)h(would)f
(make)g(successful)g(SYN)h(\257ooding)e(for)h(an)h(at-)1974
5325 y(tacker)g(as)i(hard)f(as)h(sequence)e(number)f(prediction)g
(attacks.)33 b(Fur)n(-)p eop
%%Page: 14 14
14 13 bop 176 1391 a @beginspecial 14 @llx 524 @lly 423
@urx 681 @ury 4090 @rwi @setspecial
%%BeginDocument: test4.epsi
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 6480000000000000000000000000000000000000000000000000000000000000003a0000000000
% 0000000000000000000000000000000000000000000000000000
% 2b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000151fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 2d47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0002d1fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 2e8600000000000000c00000000000001800000000000003000000000000006000121800000000
% 00000300000000000000600000000000000c0000000000000180
% 000600000000000000c00000000000001800000000000003000000000000006000001800000000
% 00000300000000000000600000000000000c0000000000000180
% 00060000000000000000000000000000000000000000000000000000000000600000181c000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001826000000
% 0000000000000000000000000000000000000000000000000180
% 00060c4000000000000000000000000000000000000000c0000f10702600006000001822738000
% 00000000000000000000000000000000080000e101c098000180
% 0006124000000000000000000000000000000000000001ab6bce5425a6000060000018188ec000
% 000000000000000000000000000000000ead3895549698000180
% 00061280000000000000000000000000000000000000016c9de9fe2eef1ff86000001806fc0000
% 000000000000000000000000000000001dfbdc9fecbbbcffe180
% 0006128000000000000000000000000000000000000000fb6fe9d627e21ff86000001822840000
% 00000000000000000000000000000000153b7ce7d89f88ffe180
% 00060d0000000000000000000000000000000000000000000000000000000060000018228cc000
% 0000000000000000000000000000000000006000100000000180
% 00060170000000000000000000000000000000000000000000000000000000600000181c739000
% 0000000000000000000000000000000000000000000000000180
% 000602880000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000602880000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000604700000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0006000000000000000000000000000000000000000000000000000000000060003a1800000000
% 0000000000000000000000000000000000000000000000000180
% 0006000000000000000000000000000000000000000000000000000000000060000d1800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000151e00000000
% 0000000000000000000000000000000000000000000000000780
% 000600000000000000000000000000000000000000000000000000000000006000121800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 000600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 648600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 2b4600000000000000000000000000000000000000000000000000000000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 2b47ffffffffffffffffffffffffffffffffffffffffffffffffffff000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 2487ffffffffffffffffffffffffffffffffffffffffffffffffffff000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060001a1800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000351800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060002d1e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000121e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0e868208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 05468208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0b478208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 04878208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060003a1800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000351800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060000d1e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000321e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 06868208208218618610410410410c30c2082082082086186104104100000060001a1800000000
% 0000000000000000000000000000000000000000000000000180
% 0d468208208218618610410410410c30c2082082082086186104104100000060001d1800000000
% 0000000000000000000000000000000000000000000000000180
% 0b478208208218618610410410410c30c20820820820861861041041000001e0003d1e00000000
% 0000000000000000000000000000000000000000000000000780
% 04868208208218618610410410410c30c2082082082086186104104100000060000a1800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060003a1800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000151800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060002d1e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000321e00000000
% 0000000000000000000000000000000000000000000000000781
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000181
% 06868208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 07468208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0f478208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 02878208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000121800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c2082082082086186104104100000060002d1800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000351e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c2082082082086186104104100000060003a1e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 04868208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0b468208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0d478208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 0e878208208218618610410410410c30c20820820820861861041041000001e000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000321800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000151800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000151e00000000
% 0000000000000000000000000000000000000000000000000780
% 00068208208218618610410410410c30c208208208208618610410410000006000121800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001800000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001bf8000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001bf8000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0000000000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0007f80000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0006180000000000000000000000000000000000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 00061800000000000000000000000000007f8000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08000000
% 0006180000000000000000000000000000618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a083f8000
% 0006180000000007f00000000000000000618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a0820800f
% e0061801fc0000043000000000000007f8618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a0fe08008
% 7f861801fc007f043000000000000007f8618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a0fe08008
% 61861801041fc1043003f8000000000618618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08208008
% 61861801041fc1043003f8000000000618618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a0820fe08
% 61861fff0410410430030fe0000fe00618618000000000000180
% 00068208208218618610410410410c30c208208208208618610410410000006000001a08208208
% 6186187f041041043fc308200008200618618000000000000180
% 008682082082186186d0410410410c30da0820820820861b610410410000006000021a08208208
% 61861b410410410430c36820fe082006186d8000000000000180
% 014682082082186186d0410410410c30da0820820820861b610410410000006000051a08208208
% 61861b4107f0410430ff683f82082006186d8000000000000180
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000051fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000021fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff80
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000400000000000007400000000000019200000000000037400000000000000000001000000000
% 00001d0000000000000648000000000000dd0000000000000000
% 000a00000000000006a0000000000000ad00000000000016a00000000000000000002800000000
% 00001a80000000000002b40000000000005a8000000000000000
% 000a00000000000001a0000000000000ad00000000000011a0000000001c000000002800000000
% 00000680000000000002b400000000000046800000000e000000
% 000400000000000006400000000000009200000000000016400000000026000000001000000000
% 0000190000000000000248000000000000590000000013000000
% 000000000000000000000000000000000000000000000000000000000022738000000000000000
% 000000000000000000000000000000000000000000001171c000
% 0000000000000000000000000000000000000000000000000000000000188ec000000000000000
% 000000000000000000000000000000000000000000000c8b6000
% 000000000000000000000000000000000000000000000000000000000006fc0000000000000000
% 0000000000000000000000000000000000000000000003fa0000
% 000000000000000000000000000000000000000000000000000000000022840000000000000000
% 0000000000000000000000000000000000000000000011820000
% 0000000000000000000000000000000000000000000000000000000000228cc000000000000000
% 00000000000000000000000000000000000000000000118a6000
% 00000000000000000000000000000000000000000000000000000000001c739000000000000000
% 000000000000000000000000000000000000000000000e71c800
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 8.68 90.208 m 75.324 90.208 l
8.68 90.208 m 8.68 39.853 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 8.68 90.208 m 9.347 90.208 l
75.324 90.208 m 74.657 90.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.968 90.695] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 8.68 81.815 m 9.347 81.815 l
75.324 81.815 m 74.657 81.815 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.144 82.302] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 8.68 73.423 m 9.347 73.423 l
75.324 73.423 m 74.657 73.423 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.144 73.909] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 8.68 65.03 m 9.347 65.03 l
75.324 65.03 m 74.657 65.03 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.144 65.517] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 8.68 56.638 m 9.347 56.638 l
75.324 56.638 m 74.657 56.638 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.144 57.124] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 8.68 48.245 m 9.347 48.245 l
75.324 48.245 m 74.657 48.245 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.32 48.732] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 8.68 39.853 m 9.347 39.853 l
75.324 39.853 m 74.657 39.853 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.32 40.339] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(120) s
savemat setmatrix
n 8.68 90.208 m 8.68 89.541 l
8.68 39.853 m 8.68 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 8.269 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 25.339 90.208 m 25.339 89.541 l
25.339 39.853 m 25.339 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 24.515 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 42.007 90.208 m 42.007 89.541 l
42.007 39.853 m 42.007 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 40.771 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 58.666 90.208 m 58.666 89.541 l
58.666 39.853 m 58.666 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 57.43 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 75.324 90.208 m 75.324 89.541 l
75.324 39.853 m 75.324 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n 8.68 90.208 m 75.324 90.208 l
75.324 39.853 l
8.68 39.853 l
8.68 90.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 56.542 42.488] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 4) s
savemat setmatrix
n 71.101 42.001 m 73.768 42.001 l
8.68 90.208 m 8.68 48.245 l
9.517 48.245 l
9.517 90.208 l
8.68 90.208 l
9.517 90.208 m 9.517 48.245 l
11.178 48.245 l
11.178 90.208 l
9.517 90.208 l
11.178 90.208 m 11.178 48.245 l
12.85 48.245 l
12.85 90.208 l
11.178 90.208 l
12.85 90.208 m 12.85 48.245 l
14.512 48.245 l
14.512 90.208 l
12.85 90.208 l
14.512 90.208 m 14.512 48.245 l
16.173 48.245 l
16.173 90.208 l
14.512 90.208 l
16.173 90.208 m 16.173 48.245 l
17.845 48.245 l
17.845 90.208 l
16.173 90.208 l
17.845 90.208 m 17.845 48.245 l
19.507 48.245 l
19.507 90.208 l
17.845 90.208 l
19.507 90.208 m 19.507 48.245 l
21.18 48.245 l
21.18 90.208 l
19.507 90.208 l
21.18 90.208 m 21.18 48.245 l
22.841 48.245 l
22.841 90.208 l
21.18 90.208 l
22.841 90.208 m 22.841 48.245 l
24.513 48.245 l
24.513 90.208 l
22.841 90.208 l
24.513 90.208 m 24.513 48.245 l
26.175 48.245 l
26.175 90.208 l
24.513 90.208 l
26.175 90.208 m 26.175 48.245 l
27.837 48.245 l
27.837 90.208 l
26.175 90.208 l
27.837 90.208 m 27.837 48.245 l
29.508 48.245 l
29.508 90.208 l
27.837 90.208 l
29.508 90.208 m 29.508 48.245 l
31.17 48.245 l
31.17 90.208 l
29.508 90.208 l
31.17 90.208 m 31.17 48.245 l
32.842 48.245 l
32.842 90.208 l
31.17 90.208 l
32.842 90.208 m 32.842 48.245 l
34.504 48.245 l
34.504 90.208 l
32.842 90.208 l
34.504 90.208 m 34.504 48.245 l
36.176 48.245 l
36.176 90.208 l
34.504 90.208 l
36.176 90.208 m 36.176 48.245 l
37.837 48.245 l
37.837 90.208 l
36.176 90.208 l
37.837 90.208 m 37.837 48.245 l
39.499 48.245 l
39.499 90.208 l
37.837 90.208 l
39.499 90.208 m 39.499 48.245 l
41.171 48.245 l
41.171 90.208 l
39.499 90.208 l
41.171 90.208 m 41.171 48.245 l
42.833 48.245 l
42.833 90.208 l
41.171 90.208 l
42.833 90.208 m 42.833 48.245 l
44.505 48.245 l
44.505 90.208 l
42.833 90.208 l
44.505 90.208 m 44.505 48.245 l
46.167 48.245 l
46.167 90.208 l
44.505 90.208 l
46.167 90.208 m 46.167 48.245 l
47.828 48.245 l
47.828 90.208 l
46.167 90.208 l
47.828 90.208 m 47.828 48.245 l
49.5 48.245 l
49.5 90.208 l
47.828 90.208 l
49.5 90.208 m 49.5 48.245 l
51.162 48.245 l
51.162 90.208 l
49.5 90.208 l
51.162 90.208 m 51.162 48.245 l
52.834 48.245 l
52.834 90.208 l
51.162 90.208 l
52.834 90.208 m 52.834 48.245 l
54.496 48.245 l
54.496 90.208 l
52.834 90.208 l
54.496 90.208 m 54.496 48.245 l
56.168 48.245 l
56.168 90.208 l
54.496 90.208 l
56.168 90.208 m 56.168 48.245 l
57.829 48.245 l
57.829 90.208 l
56.168 90.208 l
57.829 90.208 m 57.829 48.245 l
59.491 48.245 l
59.491 90.208 l
57.829 90.208 l
59.491 90.208 m 59.491 48.245 l
61.163 48.245 l
61.163 90.208 l
59.491 90.208 l
61.163 90.208 m 61.163 48.245 l
62.825 48.245 l
62.825 90.208 l
61.163 90.208 l
62.825 90.208 m 62.825 48.245 l
64.497 48.245 l
64.497 90.208 l
62.825 90.208 l
64.497 90.208 m 64.497 48.245 l
66.159 48.245 l
66.159 90.208 l
64.497 90.208 l
66.159 90.208 m 66.159 48.245 l
67.831 48.245 l
67.831 90.208 l
66.159 90.208 l
gsave
0 0 0 0.088 0 B
grestore
n 82.588 90.208 m 149.23 90.208 l
82.588 90.208 m 82.588 39.853 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 82.588 90.208 m 83.255 90.208 l
149.23 90.208 m 148.57 90.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.876 90.695] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 82.588 83.911 m 83.255 83.911 l
149.23 83.911 m 148.57 83.911 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 84.398] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 82.588 77.614 m 83.255 77.614 l
149.23 77.614 m 148.57 77.614 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 78.1] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 82.588 71.327 m 83.255 71.327 l
149.23 71.327 m 148.57 71.327 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 71.814] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 82.588 65.03 m 83.255 65.03 l
149.23 65.03 m 148.57 65.03 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 65.517] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 82.588 58.733 m 83.255 58.733 l
149.23 58.733 m 148.57 58.733 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 59.22] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 82.588 52.436 m 83.255 52.436 l
149.23 52.436 m 148.57 52.436 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 52.923] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 82.588 46.15 m 83.255 46.15 l
149.23 46.15 m 148.57 46.15 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 46.636] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 82.588 39.853 m 83.255 39.853 l
149.23 39.853 m 148.57 39.853 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.051 40.339] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 82.588 90.208 m 82.588 89.541 l
82.588 39.853 m 82.588 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 82.176 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 99.246 90.208 m 99.246 89.541 l
99.246 39.853 m 99.246 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 98.423 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 115.91 90.208 m 115.91 89.541 l
115.91 39.853 m 115.91 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 114.679 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 132.57 90.208 m 132.57 89.541 l
132.57 39.853 m 132.57 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 131.337 92.176] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 149.23 90.208 m 149.23 89.541 l
149.23 39.853 m 149.23 40.519 l
gsave
0 0 0 0.176 0 B
grestore
n 82.588 90.208 m 149.23 90.208 l
149.23 39.853 l
82.588 39.853 l
82.588 90.208 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 129.873 42.488] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 4) s
savemat setmatrix
n 145.01 42.001 m 147.67 42.001 l
82.588 90.208 m 82.588 90.145 l
83.424 90.145 l
83.424 90.208 l
82.588 90.208 l
83.424 90.208 m 83.424 85.181 l
85.086 85.181 l
85.086 90.208 l
83.424 90.208 l
85.086 90.208 m 85.086 88.324 l
86.758 88.324 l
86.758 90.208 l
85.086 90.208 l
86.758 90.208 m 86.758 87.657 l
88.419 87.657 l
88.419 90.208 l
86.758 90.208 l
88.419 90.208 m 88.419 89.012 l
90.081 89.012 l
90.081 90.208 l
88.419 90.208 l
90.081 90.208 m 91.753 90.208 l
90.081 90.208 l
91.753 90.208 m 91.753 87.784 l
93.415 87.784 l
93.415 90.208 l
91.753 90.208 l
93.415 90.208 m 93.415 88.229 l
95.087 88.229 l
95.087 90.208 l
93.415 90.208 l
95.087 90.208 m 96.749 90.208 l
95.087 90.208 l
96.749 90.208 m 96.749 86.482 l
98.421 86.482 l
98.421 90.208 l
96.749 90.208 l
98.421 90.208 m 98.421 89.044 l
100.08 89.044 l
100.08 90.208 l
98.421 90.208 l
100.08 90.208 m 100.08 89.128 l
101.74 89.128 l
101.74 90.208 l
100.08 90.208 l
101.74 90.208 m 101.74 88.038 l
103.42 88.038 l
103.42 90.208 l
101.74 90.208 l
103.42 90.208 m 103.42 89.89 l
105.08 89.89 l
105.08 90.208 l
103.42 90.208 l
105.08 90.208 m 105.08 88.557 l
106.75 88.557 l
106.75 90.208 l
105.08 90.208 l
106.75 90.208 m 106.75 88.208 l
108.41 88.208 l
108.41 90.208 l
106.75 90.208 l
108.41 90.208 m 110.08 90.208 l
108.41 90.208 l
110.08 90.208 m 110.08 87.689 l
111.75 87.689 l
111.75 90.208 l
110.08 90.208 l
111.75 90.208 m 111.75 89.224 l
113.41 89.224 l
113.41 90.208 l
111.75 90.208 l
113.41 90.208 m 113.41 89.827 l
115.08 89.827 l
115.08 90.208 l
113.41 90.208 l
115.08 90.208 m 115.08 88.61 l
116.74 88.61 l
116.74 90.208 l
115.08 90.208 l
116.74 90.208 m 116.74 88.97 l
118.41 88.97 l
118.41 90.208 l
116.74 90.208 l
118.41 90.208 m 118.41 89.869 l
120.07 89.869 l
120.07 90.208 l
118.41 90.208 l
120.07 90.208 m 120.07 89.488 l
121.74 89.488 l
121.74 90.208 l
120.07 90.208 l
121.74 90.208 m 123.41 90.208 l
121.74 90.208 l
123.41 90.208 m 123.41 89.012 l
125.07 89.012 l
125.07 90.208 l
123.41 90.208 l
125.07 90.208 m 126.74 90.208 l
125.07 90.208 l
126.74 90.208 m 128.4 90.208 l
126.74 90.208 l
128.4 90.208 m 128.4 88.006 l
130.08 88.006 l
130.08 90.208 l
128.4 90.208 l
130.08 90.208 m 131.74 90.208 l
130.08 90.208 l
131.74 90.208 m 131.74 87.065 l
133.4 87.065 l
133.4 90.208 l
131.74 90.208 l
133.4 90.208 m 135.07 90.208 l
133.4 90.208 l
135.07 90.208 m 136.73 90.208 l
135.07 90.208 l
136.73 90.208 m 138.41 90.208 l
136.73 90.208 l
138.41 90.208 m 140.07 90.208 l
138.41 90.208 l
140.07 90.208 m 141.74 90.208 l
140.07 90.208 l
gsave
0 0 0 0.088 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 10.1372 43.8916] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 84.1712 43.0486] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 70.6341 93.7299] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 143.109 93.7049] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial 212 1657 a Fo(Figure)23 b(17.)g(T)-5 b(est)23
b(case)h(4:)32 b(Connection)21 b(estab)o(lishment)i(success)h(rates)f
(and)g(a)o(vera)o(g)q(e)h(dela)n(ys.)180 3166 y @beginspecial
12 @llx 517 @lly 420 @urx 674 @ury 4080 @rwi @setspecial
%%BeginDocument: test5.epsi
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 648000000000000000000000000000000000000000000000000000000000000000740000000000
% 00000000000000000000000000000000000000000000000000
% 2b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0002a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff
% 2d47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0005a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff
% 2e8600000000000000c00000000000001800000000000003000000000000006000243000000000
% 00000600000000000000c00000000000001800000000000003
% 000600000000000000c00000000000001800000000000003000000000000006000003000000000
% 00000600000000000000c00000000000001800000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 00060c4000000000000000000000000000000000000000c0000f10702e00006000003070000000
% 00000000000000000000000000000000100001c20381700003
% 0006124000000000000000000000000000000000000001ab6bce5425ac00006000003098000000
% 000000000000000000000000000000001d5a712aa92d600003
% 00061280000000000000000000000000000000000000016c9de9fe2ee21ff86000003089ce0000
% 000000000000000000000000000000003bf7b93fd97711ffc3
% 0006128000000000000000000000000000000000000000fb6fe9d627ec1ff860000030623b0000
% 000000000000000000000000000000002a76f9cfb13f61ffc3
% 00060d00000000000000000000000000000000000000000000000000000000600000301bf00000
% 000000000000000000000000000000000000c0002000000003
% 00060170000000000000000000000000000000000000000000000000000000600000308a100000
% 00000000000000000000000000000000000000000000000003
% 00060288000000000000000000000000000000000000000000000000000000600000308a330000
% 00000000000000000000000000000000000000000000000003
% 000602880000000000000000000000000000000000000000000000000000006000003071ce4000
% 00000000000000000000000000000000000000000000000003
% 000604700000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000743000000000
% 00000000000000000000000000000000000000000000000003
% 0006000000000000000000000000000000000000000000000000000000000060001a3000000000
% 00000000000000000000000000000000000000000000000003
% 0006000000000000000000000000000000000000000000000000000000000060002a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000600000000000000000000000000000000000000000000000000000000006000243000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 648600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 2b4600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003
% 2b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000003000000000
% 00000000000000000000000000000000000000000000000003
% 2487ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000343000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860006a3000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860005a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000243c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 0e8640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 054640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 0b47c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 0487c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000743000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860006a3000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860001a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000643c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 068640810204000000600000020408102040c1830604081020408102060c186000343000000000
% 00000000000000000000000000000000000000000000000003
% 0d4640810204000000600000020408102040c1830604081020408102060c1860003a3000000000
% 00000000000000000000000000000000000000000000000003
% 0b47c0810204000000600000020408102040c1830604081020408102060c19e0007a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 048640810204000000600000020408102040c1830604081020408102060c186000143000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000743000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860002a3000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860005a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000643c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 068640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 074640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 0f47c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 0287c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000243000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860005a3000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860006a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000743c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 048640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 0b4640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 0d47c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 0e87c0810204000000600000020408102040c1830604081020408102060c19e000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000643000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860002a3000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860002a3c00000000
% 0000000000000000000000000000000000000000000000000f
% 000640810204000000600000020408102040c1830604081020408102060c186000243000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000000000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 000000000000003fc000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 000000000000003fc000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003000000000
% 00000000000000204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003e000ff000
% 00000000000000204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003200081000
% 000003fffffff0204000000000000000000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003207f81000
% 00000300000010204000000000003fe0000000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003204081fe0
% 000003000000102040000000001ff0207f8000000000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860000033fc081020
% 000003000000102040ff0000001ff02040ff03fc0000000003
% 000640810204000000600000020408102040c1830604081020408102060c1860000033fc081020
% 0000030000001fe040810007fc18302040ff02040000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003204081020
% 0000030000001020408100060c183020408102040000000003
% 000640810204000000600000020408102040c1830604081020408102060c186000003204081020
% 00000300000010204081fffe0c183020408102040000000003
% 008640810204000000e00000020408103840c1830604081320408102060c186000043204081020
% 00000700000010204081c2060c183020409902040000000003
% 014640810204000000e00000020408103840c1830604081320408102060c1860000a3204081020
% 00000700000010204081c2060c183020409902040000000003
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000043fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 000400000000000007400000000000019200000000000037400000000000000000002000000000
% 00003a0000000000000c90000000000001ba00000000000000
% 000a00000000000006a0000000000000ad00000000000016a00000000380000000005000000000
% 0000350000000000000568000000000000b500000000380000
% 000a00000000000001a0000000000000ad00000000000011a000000004c0000000005000000000
% 00000d00000000000005680000000000008d000000004c0000
% 00040000000000000640000000000000920000000000001640000000044e700000002000000000
% 0000320000000000000490000000000000b20000000044e700
% 000000000000000000000000000000000000000000000000000000000311d80000000000000000
% 00000000000000000000000000000000000000000000311d80
% 0000000000000000000000000000000000000000000000000000000000df800000000000000000
% 000000000000000000000000000000000000000000000df800
% 000000000000000000000000000000000000000000000000000000000450800000000000000000
% 00000000000000000000000000000000000000000000450800
% 000000000000000000000000000000000000000000000000000000000451980000000000000000
% 00000000000000000000000000000000000000000000451980
% 00000000000000000000000000000000000000000000000000000000038e720000000000000000
% 0000000000000000000000000000000000000000000038e720
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 8.116 92.747 m 74.759 92.747 l
8.116 92.747 m 8.116 42.392 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 8.116 92.747 m 8.783 92.747 l
74.759 92.747 m 74.093 92.747 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 6.404 93.234] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 8.116 84.354 m 8.783 84.354 l
74.759 84.354 m 74.093 84.354 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.579 84.841] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 8.116 75.962 m 8.783 75.962 l
74.759 75.962 m 74.093 75.962 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.579 76.448] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 8.116 67.569 m 8.783 67.569 l
74.759 67.569 m 74.093 67.569 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.579 68.056] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 8.116 59.177 m 8.783 59.177 l
74.759 59.177 m 74.093 59.177 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 5.579 59.663] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 8.116 50.784 m 8.783 50.784 l
74.759 50.784 m 74.093 50.784 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 4.756 51.271] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 8.116 42.392 m 8.783 42.392 l
74.759 42.392 m 74.093 42.392 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 4.756 42.878] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(120) s
savemat setmatrix
n 8.116 92.747 m 8.116 92.08 l
8.116 42.392 m 8.116 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 7.705 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 24.775 92.747 m 24.775 92.08 l
24.775 42.392 m 24.775 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 23.951 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 41.443 92.747 m 41.443 92.08 l
41.443 42.392 m 41.443 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 40.207 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 58.102 92.747 m 58.102 92.08 l
58.102 42.392 m 58.102 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 56.866 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 74.759 92.747 m 74.759 92.08 l
74.759 42.392 m 74.759 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n 8.116 92.747 m 74.759 92.747 l
74.759 42.392 l
8.116 42.392 l
8.116 92.747 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 55.978 45.027] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 5) s
savemat setmatrix
n 70.537 44.54 m 73.204 44.54 l
8.116 92.747 m 8.116 50.784 l
9.111 50.784 l
9.111 92.747 l
8.116 92.747 l
9.111 92.747 m 9.111 50.784 l
11.111 50.784 l
11.111 92.747 l
9.111 92.747 l
11.111 92.747 m 11.111 50.784 l
13.112 50.784 l
13.112 92.747 l
11.111 92.747 l
13.112 92.747 m 13.112 50.784 l
15.112 50.784 l
15.112 92.747 l
13.112 92.747 l
15.112 92.747 m 15.112 50.784 l
17.112 50.784 l
17.112 92.747 l
15.112 92.747 l
17.112 92.747 m 17.112 50.784 l
25.113 50.784 l
25.113 92.747 l
17.112 92.747 l
25.113 92.747 m 25.113 50.784 l
33.104 50.784 l
33.104 92.747 l
25.113 92.747 l
33.104 92.747 m 33.104 50.784 l
35.104 50.784 l
35.104 92.747 l
33.104 92.747 l
35.104 92.747 m 35.104 50.784 l
37.104 50.784 l
37.104 92.747 l
35.104 92.747 l
37.104 92.747 m 37.104 50.784 l
39.104 50.784 l
39.104 92.747 l
37.104 92.747 l
39.104 92.747 m 39.104 50.784 l
41.105 50.784 l
41.105 92.747 l
39.104 92.747 l
41.105 92.747 m 41.105 50.784 l
43.105 50.784 l
43.105 92.747 l
41.105 92.747 l
43.105 92.747 m 43.105 50.784 l
45.105 50.784 l
45.105 92.747 l
43.105 92.747 l
45.105 92.747 m 45.105 50.784 l
47.105 50.784 l
47.105 92.747 l
45.105 92.747 l
47.105 92.747 m 47.105 50.784 l
49.105 50.784 l
49.105 92.747 l
47.105 92.747 l
49.105 92.747 m 49.105 50.784 l
51.106 50.784 l
51.106 92.747 l
49.105 92.747 l
51.106 92.747 m 51.106 50.784 l
53.095 50.784 l
53.095 92.747 l
51.106 92.747 l
53.095 92.747 m 53.095 50.784 l
55.096 50.784 l
55.096 92.747 l
53.095 92.747 l
55.096 92.747 m 55.096 50.784 l
57.096 50.784 l
57.096 92.747 l
55.096 92.747 l
57.096 92.747 m 57.096 50.784 l
59.096 50.784 l
59.096 92.747 l
57.096 92.747 l
59.096 92.747 m 59.096 50.784 l
61.096 50.784 l
61.096 92.747 l
59.096 92.747 l
61.096 92.747 m 61.096 50.784 l
63.097 50.784 l
63.097 92.747 l
61.096 92.747 l
63.097 92.747 m 63.097 50.784 l
65.097 50.784 l
65.097 92.747 l
63.097 92.747 l
65.097 92.747 m 65.097 50.784 l
67.097 50.784 l
67.097 92.747 l
65.097 92.747 l
67.097 92.747 m 67.097 50.784 l
69.097 50.784 l
69.097 92.747 l
67.097 92.747 l
69.097 92.747 m 69.097 50.784 l
71.098 50.784 l
71.098 92.747 l
69.097 92.747 l
71.098 92.747 m 71.098 50.784 l
73.098 50.784 l
73.098 92.747 l
71.098 92.747 l
73.098 92.747 m 73.098 50.784 l
74.759 50.784 l
74.759 92.747 l
73.098 92.747 l
gsave
0 0 0 0.088 0 B
grestore
n 81.742 92.747 m 148.39 92.747 l
81.742 92.747 m 81.742 42.392 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 81.742 92.747 m 82.408 92.747 l
148.39 92.747 m 147.72 92.747 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 80.029 93.234] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 81.742 86.45 m 82.408 86.45 l
148.39 86.45 m 147.72 86.45 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 86.937] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 81.742 80.153 m 82.408 80.153 l
148.39 80.153 m 147.72 80.153 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 80.639] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 81.742 73.866 m 82.408 73.866 l
148.39 73.866 m 147.72 73.866 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 74.353] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 81.742 67.569 m 82.408 67.569 l
148.39 67.569 m 147.72 67.569 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 68.056] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 81.742 61.272 m 82.408 61.272 l
148.39 61.272 m 147.72 61.272 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 61.759] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 81.742 54.975 m 82.408 54.975 l
148.39 54.975 m 147.72 54.975 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 55.462] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 81.742 48.689 m 82.408 48.689 l
148.39 48.689 m 147.72 48.689 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 49.175] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 81.742 42.392 m 82.408 42.392 l
148.39 42.392 m 147.72 42.392 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 79.205 42.878] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 81.742 92.747 m 81.742 92.08 l
81.742 42.392 m 81.742 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 81.33 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 98.4 92.747 m 98.4 92.08 l
98.4 42.392 m 98.4 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 97.576 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 115.07 92.747 m 115.07 92.08 l
115.07 42.392 m 115.07 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 113.833 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 131.73 92.747 m 131.73 92.08 l
131.73 42.392 m 131.73 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 130.491 94.715] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(150) s
savemat setmatrix
n 148.39 92.747 m 148.39 92.08 l
148.39 42.392 m 148.39 43.058 l
gsave
0 0 0 0.176 0 B
grestore
n 81.742 92.747 m 148.39 92.747 l
148.39 42.392 l
81.742 42.392 l
81.742 92.747 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 129.027 45.027] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 5) s
savemat setmatrix
n 144.16 44.54 m 146.83 44.54 l
81.742 92.747 m 81.742 89.783 l
82.736 89.783 l
82.736 92.747 l
81.742 92.747 l
82.736 92.747 m 82.736 91.138 l
84.737 91.138 l
84.737 92.747 l
82.736 92.747 l
84.737 92.747 m 84.737 90.334 l
86.737 90.334 l
86.737 92.747 l
84.737 92.747 l
86.737 92.747 m 86.737 89.9 l
88.737 89.9 l
88.737 92.747 l
86.737 92.747 l
88.737 92.747 m 88.737 90.768 l
90.737 90.768 l
90.737 92.747 l
88.737 92.747 l
90.737 92.747 m 98.738 92.747 l
90.737 92.747 l
98.738 92.747 m 98.738 90.228 l
106.73 90.228 l
106.73 92.747 l
98.738 92.747 l
106.73 92.747 m 106.73 91.181 l
108.73 91.181 l
108.73 92.747 l
106.73 92.747 l
108.73 92.747 m 108.73 88.281 l
110.73 88.281 l
110.73 92.747 l
108.73 92.747 l
110.73 92.747 m 112.73 92.747 l
110.73 92.747 l
112.73 92.747 m 112.73 90.937 l
114.73 90.937 l
114.73 92.747 l
112.73 92.747 l
114.73 92.747 m 114.73 91.752 l
116.73 91.752 l
116.73 92.747 l
114.73 92.747 l
116.73 92.747 m 116.73 91.752 l
118.73 91.752 l
118.73 92.747 l
116.73 92.747 l
118.73 92.747 m 118.73 91.17 l
120.73 91.17 l
120.73 92.747 l
118.73 92.747 l
120.73 92.747 m 120.73 92.726 l
122.73 92.726 l
122.73 92.747 l
120.73 92.747 l
122.73 92.747 m 122.73 90.873 l
124.73 90.873 l
124.73 92.747 l
122.73 92.747 l
124.73 92.747 m 124.73 90.387 l
126.72 90.387 l
126.72 92.747 l
124.73 92.747 l
126.72 92.747 m 128.72 92.747 l
126.72 92.747 l
128.72 92.747 m 128.72 90.725 l
130.72 90.725 l
130.72 92.747 l
128.72 92.747 l
130.72 92.747 m 130.72 91.16 l
132.72 91.16 l
132.72 92.747 l
130.72 92.747 l
132.72 92.747 m 134.72 92.747 l
132.72 92.747 l
134.72 92.747 m 134.72 91.032 l
136.72 91.032 l
136.72 92.747 l
134.72 92.747 l
136.72 92.747 m 138.72 92.747 l
136.72 92.747 l
138.72 92.747 m 140.72 92.747 l
138.72 92.747 l
140.72 92.747 m 142.72 92.747 l
140.72 92.747 l
142.72 92.747 m 144.72 92.747 l
142.72 92.747 l
144.72 92.747 m 146.72 92.747 l
144.72 92.747 l
146.72 92.747 m 148.39 92.747 l
146.72 92.747 l
gsave
0 0 0 0.088 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 9.53096 46.4818] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 83.1291 46.0747] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 68.7203 96.0295] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 142.092 96.0295] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial 212 3432 a(Figure)f(18.)g(T)-5 b(est)23
b(case)h(5:)32 b(Connection)21 b(estab)o(lishment)i(success)h(rates)f
(and)g(a)o(vera)o(g)q(e)h(dela)n(ys.)-182 3698 y Fr(thermore,)36
b(this)f(approach)e(would)h(facilitate)h(the)f(detection)g(of)-182
3798 y(other)19 b(classes)i(of)f(network)f(based)h(attacks)g(\(see)h
(e.g.,)e([3)o(]\).)-182 4030 y Fq(7.2)o(.)j(Multiple-netw)o(ork)h
(Monitoring)-83 4263 y Fr(Currently)-5 b(,)30 b Fh(synkill)e
Fr(is)i(implemented)d(to)i(monitor)e(a)j(sin-)-182 4362
y(gle)21 b(network)g(interface.)30 b(It)22 b(may)f(be)h(desirable)f(to)
h(allow)f(the)h(tool)-182 4462 y(to)j(monitor)e(several)i(network)f
(interfaces)g(simultaneously)-5 b(,)24 b(thus)-182 4562
y(allowing)i(the)h(sharing)f(of)h(the)g(acquired)e(address)i
(classi\256cation)-182 4661 y(database.)-182 4893 y Fq(7.3)o(.)19
b(Attack)h(Inter)o(v)o(al)e(and)h(Sour)n(ce)f(Addr)n(ess)g(Pr)n
(ediction)-83 5126 y Fr(The)26 b(basic)g(idea)g(of)f(this)i(approach)c
(is)k(to)f(protect)f(against)h(at-)-182 5225 y(tacks)18
b(based)g(on)g(timing)g(or)g(random)f(number)f(generator)h(artifacts)
-182 5325 y(of)j(the)g(attack)g(scripts,)g(and)g(not)g(the)g(generic)f
(attack)h(method.)2073 3698 y(Our)31 b(analysis)h(of)f(SYN)h
(\257ooding)d(attack)i(software)g(showed)1974 3798 y(that)37
b(the)h(delays)f(between)g(successive)g(SYN)h(packets)f(in)h(one)1974
3898 y(batch,)20 b(and)h(between)f(successive)h(batches)g(are)g(almost)
g(constant.)1974 3997 y(This)j(same)h(timing)e(behavior)f(can)i(be)g
(observed)f(at)i(the)f(tar)o(geted)1974 4097 y(hosts,)16
b(because)e(all)i(spoofed)d(packets)h(travel)h(the)g(same)g(route)f
(over)1974 4197 y(the)i(internetwork)d(and)i(in)h(a)h(stable)f
(internetwork)d(only)i(little)i(jitter)1974 4296 y(is)k(introduced.)
2073 4412 y(The)32 b Fh(synkill)e Fr(software)h(could)g(therefore)f
(measure)g(inter)1974 4512 y(arrival)24 b(times)i(and)e(use)h
(statistical)h(models)f(to)g(predict)f(the)h(most)1974
4611 y(likely)32 b(arrival)g(time)h(of)f(the)g(next)g(spoofed)f(SYN)i
(packet.)63 b(All)1974 4711 y(SYN)24 b(packets)f(that)g(\256t)i(into)e
(the)g(predicted)f(arrival)h(times)h(would)1974 4811
y(be)d(considered)f(spoofed)g(and)h(immediately)f(reset.)31
b(The)21 b(obvious)1974 4910 y(response)k(of)h(the)g(attacker)g(will)h
(be)f(to)g(vary)f(the)h(delay)g(between)1974 5010 y(successive)20
b(SYN)h(packets.)2073 5126 y(Similarly)-5 b(,)26 b(the)f(random)e
(numbers)g(used)i(in)g(many)f(published)1974 5225 y(exploitation)40
b(routines)h(are)h(generated)e(by)h(cryptographically)1974
5325 y(weak)29 b(standard)e(library)h(routines.)52 b(They)28
b(do)h(not)f(follow)h(good)p eop
%%Page: 15 15
15 14 bop 147 1400 a @beginspecial 29 @llx 436 @lly 445
@urx 594 @ury 4160 @rwi @setspecial
%%BeginDocument: test6.epsi
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000007c
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000007d
% 348000000000000000000000000000000000000000000000000000000000000000740000000000
% 00000000000000000000000000000000000000000000000000007c
% 1b47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0002a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff007d
% 1d47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0005a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff007c
% 1e860000000000c000000000180000000003000000000060000000000c00006000243000000000
% 060000000000c0000000001800000000030000000000600003007d
% 00060000000000c000000000180000000003000000000060000000000c00006000003000000000
% 060000000000c0000000001800000000030000000000600003007c
% 00060000000000000000000000000000000000000000000000000000000000600000301c000000
% 000000000000000000000000000000000000000000000000030005
% 000600000000000000000000000000000000000000000000000000000000006000003026000000
% 000000000000000000000000000000000000000000000000030003
% 0006062000000000000000000000000000000000000000c0000f10702300006000003022738000
% 00000000000000000000000000000000100001c203811800030005
% 0006092000000000000000000000000000000000000001b5ebce5225a6000060000030188ec000
% 000000000000000000000000000000001ada692aa92d3000030003
% 0006094000000000000000000000000000000000000001769de9f72ee51ff86000003006fc0000
% 0000000000000000000000000000000039f7bd3fd97728ffc30005
% 0006094000000000000000000000000000000000000000ddefe9d327e21ff86000003022840000
% 000000000000000000000000000000002976edcfb13f10ffc30003
% 0006068000000000000000000000000000000000000000000000000000000060000030228cc000
% 000000000000000000000000000000000000c00020000000030005
% 000600b8000000000000000000000000000000000000000000000000000000600000301c739000
% 000000000000000000000000000000000000000000000000030004
% 000601440000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030005
% 000601440000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030003
% 000602380000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030005
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003000b
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003000c
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003000b
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003000c
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003000b
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030013
% 000600000000000000000000000000000000000000000000000000000000006000743000000000
% 000000000000000000000000000000000000000000000000030012
% 0006000000000000000000000000000000000000000000000000000000000060001a3000000000
% 000000000000000000000000000000000000000000000000030013
% 0006000000000000000000000000000000000000000000000000000000000060002a3c00000000
% 0000000000000000000000000000000000000000000000000f000b
% 000600000000000000000000000000000000000000000000000000000000006000243000000000
% 000000000000000000000000000000000000000000000000030013
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030012
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 000600000000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030019
% 348600000000000000000000000000000000000000000000000000000000006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 1b4600000000000000000000000000000000000000000000000000000000006000003000000000
% 000000000000000000000000000000000000000000000000030019
% 1b47fff801fe07fc001ff03fffc0ffff03fc000ffff03ffffffffffffff801e000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 1487fff801fe07fc001ff03fffc0ffff03fc000ffff03ffffffffffffff801e000003000000000
% 000000000000000000000000000000000000000000000000030019
% 0006400fff02060400181020604081030204000810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 000640080103fe0400181020604081030204000810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030019
% 000640080102060400181020604081030204000810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 000640080102060400181020604081030204000810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030019
% 000640080102060400181020604081030204000810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 000640080102060400181020604081030204000810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030019
% 00064008010206040018102060408103fe07fc0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003001b
% 00064008010206040018102060408103fe07fc0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030021
% 0006400801020604001810206040810302040ff810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030022
% 0006400801020604001810206040810302040ff810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030021
% 0006400801020604001810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030022
% 0006400801020604001810206040810302040c0810302040c18102060408006000343000000000
% 000000000000000000000000000000000000000000000000030021
% 0006400801020604001810206040810302040c0810302040c181020604080060006a3000000000
% 000000000000000000000000000000000000000000000000030022
% 0006400801020604001810206040810302040c0810302040c181020604080060005a3c00000000
% 0000000000000000000000000000000000000000000000000f0021
% 0006400801020604001810206040810302040c0810302040c18102060408006000243c00000000
% 0000000000000000000000000000000000000000000000000f0022
% 0006400801020604001810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030021
% 0006400801020604001810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030022
% 0006400801020604001810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030021
% 0006400801020607f81810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030028
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030029
% 0006400801020604081810206040810302040c08103fe040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030028
% 0006400801020604081810206040810302040c08103fe040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030029
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003002f
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030031
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003002f
% 0e86400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030031
% 0546400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000000000003002f
% 0b47c00801020604081810206040810302040c0810302040c1810206040801e000003000000000
% 000000000000000000000000000000000000000000000000030038
% 0487c00801020604081810206040810302040c0810302040c1810206040801e000003000000000
% 000000000000000000000000000000000000000000000000030037
% 000640080102060408181020607f810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030038
% 000640080102060408181020607f810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000000000030037
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 0000000000000000000000000000000000000000003fe000030038
% 0006400801020604081810206040810302040c0810302040c18102060408006000743000000000
% 000000000000000000000000000000000000000000302000030037
% 0006400801020604081810206040810302040c0810302040c181020604080060006a3000000000
% 00000000000000000000000000000000000000000030200003003f
% 0006400801020604081810206040810302040c0810302040c181020604080060001a3c00000000
% 0000000000000000000000000000000000000000003020000f003e
% 000640080102060408181fe06040810302040c0810302040c18102060408006000643c00000000
% 0000000000000000000000000000000000000000003020000f003f
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003003e
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003003f
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030045
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030046
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030045
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030046
% 00064008010206040ff810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030045
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030046
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030045
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003004e
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003004c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003004e
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003004d
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003005c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003005b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000000000000000000000030200003005c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030062
% 0686400801020604081810206040810302040c0810302040c18102060408006000343000000000
% 000000000000000000000000000000000000000000302000030064
% 0d46400801020604081810206040810302040c0810302040c181020604080060003a3000000000
% 000000000000000000000000000000000000000000302000030062
% 0b47c00801020604081810206040810302040c0810302040c1810206040801e0007a3c00000000
% 0000000000000000000000000000000000000000003020000f0064
% 0486400801020604081810206040810302040c0810302040c18102060408006000143000000000
% 000000000000000000000000000000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000000000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 0000000000000000000000007fc000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030064
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000000000000000000000604000000000000000302000030062
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000060400000000000000030200003006b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000060400000000000000030200003006a
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000060400000000000000030200003006b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000000000000000060400000000000000030200003006a
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000003fc0000000060400000000000000030200003006b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000002040000000060400000000000000030200003006a
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000002040000000060400000000000000030200003006b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 00000000000002040000000060400000000000000030200003006a
% 0006400801020604081810206040810302040c0810302040c18102060408006000743000000000
% 00000000000002040000000060400000000000000030200003006b
% 0006400801020604081810206040810302040c0810302040c181020604080060002a3000000000
% 00000000000002040000000060400000000000000030200003006a
% 0006400801020604081810206040810302040c0810302040c181020604080060005a3c00000000
% 0000000000000204000000006040000000000000003020000f006b
% 0006400801020604081810206040810302040c0810302040c18102060408006000643c00000000
% 000000ff80000204000000006040000000000000003020000f0071
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020400000000604000000000000000302000030000
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020400000000604000000000000000302000030000
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020400000000604000000000000000302000030071
% 0686400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800002040000000060400000000000000030200003007c
% 0746400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800002040000000060400000000000000030200003007d
% 0f47c00801020604081810206040810302040c0810302040c1810206040801e000003000000000
% 000000c0800002040000000060400000000000000030200003007c
% 0287c00801020604081810206040810302040c0810302040c1810206040801e000003000000000
% 000000c0800002040ff8000060400000000000000030200003007d
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800002040818000060400000000000000030200003007c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800002040818000060400000000000000030200003007d
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800002040818000060400000000000000030200003007c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030005
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030003
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030005
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030003
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030005
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030003
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030005
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08000020408180000604000000000000000302000030004
% 0006400801020604081810206040810302040c0810302040c18102060408006000243000000000
% 000000c08000020408180000604000000000000000302000030005
% 0006400801020604081810206040810302040c0810302040c181020604080060005a3000000000
% 000000c08000020408180000604000000000000000302000030003
% 0006400801020604081810206040810302040c0810302040c181020604080060006a3c00000000
% 000000c08003fe04081800006040000000000000003020000f0005
% 0006400801020604081810206040810302040c0810302040c18102060408006000743c00000000
% 000000c080030207f81800006040000000000000003020000f000b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c080030207f818000060400000000000000030200003000c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800302040818000060400000000000000030200003000b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800302040818000060400000000000000030200003000c
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0800302040818000060400000000000000030200003000b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08003020408180000604000000000000000302000030013
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08003020408180000604000000000000000302000030012
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08003020408180000604000000000000000302000030013
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0ff0302040818000060400000000000000030200003000b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08103020408180000604000000000000000302000030013
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08103020408180000604000000000000000302000030012
% 0006400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0810302040818000060400000000000000030200003001b
% 0486400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c08103020408180000604000000000000000302000030019
% 0b46400801020604081810206040810302040c0810302040c18102060408006000003000000000
% 000000c0810302040818000060400000000000000030200003001b
% 0d47c00801020604081810206040810302040c0810302040c1810206040801e000003000000000
% 003fc0c08103020408180000604000000000000000302000030019
% 0e87c00801020604081810206040810302040c0810302040c1810206040801e0000030007ff800
% 003fc0c0810302040818000060400000000000000030200003001b
% 0006400801020604081810206040810302040c0810302040c181020604080060000033ffc00800
% 002040c08103020408180000604000000000000000302000030019
% 0006400801020604081810206040810302040c0810302040c181020604080060000033ffc00800
% 00207fc08103020408180000604001ff0007fc000030200003001b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400800
% 002040c081030204081800006040018100040c0000302000030019
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400800
% 002040c081030204081800006040018100040c000030200003001b
% 0006400801020604081810206040810302040c0810302040c18102060408006000643200400800
% 002040c081030204081ff0006040018100040c0000302000030019
% 0006400801020604081810206040810302040c0810302040c181020604080060002a3200400ff0
% 002040c081030204081810006040018103fc0c000030200003001b
% 0006400801020604081810206040810302040c0810302040c181020604080060002a3e00400810
% 002040c081030204081810006040018102040c001ff020000f0019
% 0006400801020604081810206040810302040c0810302040c18102060408006000243200400810
% 002040c081030204081810006040018102040c001030200003001b
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 002040c08103020408181fe06040018102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 002040c08103020408181fe06040018102040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 002040c0810302040818103fe040018102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 002040c081030204081810206040018102040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c1810206040800600000320040081f
% ffe040c081030204081810206040018102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003e00400810
% 302040c081030204081810206040018102040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040018102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040ff81fe040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c08103020408181020607f818102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030021
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030022
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030028
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030029
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030028
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030029
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081ff0204081810206040818102040c001030200003002f
% 0006400801020604081810206040810302040c0810302040c18102060408006000003200400810
% 302040c081030204081810206040818102040c0010302000030031
% 00864008010206c4081810207840810302070c0810302060c18102060c08006000043200400810
% 362040c08103c204081810386040818103040c001030600003002f
% 01464008010206c4081810207840810302070c0810302060c18102060c080060000a3200400810
% 362040c08103c204081810386040818103040c0010306000030031
% 0147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000a3fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff002f
% 0087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe000043fffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffff0038
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000037
% 000400000000049000000000d2000000001a400000000748000000032480000000002000000000
% 2480000000069000000000d2000000003a40000000192400000038
% 000a000000000b6800000000ed0000000035a000000002b4000000015b40000000005000000000
% 5b40000000076800000001ad0000000015a00000000ada00000037
% 000a000000000d6800000001ed000000002da000000005b4000000015b41c00000005000000000
% 6b400000000f68000000016d000000002da00000000ada0e000038
% 0004000000000e9000000000520000000012400000000248000000012482600000002000000000
% 748000000002900000000092000000001240000000092413000037
% 000000000000000000000000000000000000000000000000000000000002273800000000000000
% 00000000000000000000000000000000000000000000001138e03f
% 00000000000000000000000000000000000000000000000000000000000188ec00000000000000
% 00000000000000000000000000000000000000000000000c45b03e
% 0000000000000000000000000000000000000000000000000000000000006fc000000000000000
% 0000000000000000000000000000000000000000000000037d003f
% 000000000000000000000000000000000000000000000000000000000002284000000000000000
% 00000000000000000000000000000000000000000000001141003e
% 00000000000000000000000000000000000000000000000000000000000228cc00000000000000
% 00000000000000000000000000000000000000000000001145303f
% 000000000000000000000000000000000000000000000000000000000001c73900000000000000
% 00000000000000000000000000000000000000000000000e38e445
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000046
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000045
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000046
% 000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000045
save /d_sv_obj exch def

userdict /IslandDrawDict 300 dict dup begin put

/bdef	{bind def} bind def
/E	{exch} bdef
/FF	{findfont} bdef
/MF	{makefont} bdef
/RO	{rotate} bdef
/SC	{scale} bdef
/SF	{setfont} bdef
/SG	{setgray} bdef
/TR	{translate} bdef
/bp	{lj lw rgb} bdef
/bpbw	{lj lw setgray} bdef
/c	{curveto} bdef
/cl	{closepath} bdef
/fi	{eofill} bdef
/g	{setgray} bdef
/gr	{grestore} bdef
/gs	{gsave} bdef
/l	{lineto} bdef
/lj	{setlinejoin} bdef
/lw	{setlinewidth} bdef
/m	{moveto} bdef
/n	{newpath} bdef
/nx	{/x E def} bdef
/r	{rmoveto} bdef
/rl	{rlineto} bdef
/rgb	{setrgbcolor} bdef
/s	{show} bdef
/sd	{setdash} bdef
/sp	{x 0 rmoveto} bdef
/ss	{currentpoint pop E m} bdef
/st	{stroke} bdef
/BPSIDE	32 def	%% pixels per pattern side
/PATFREQ 3.0 def	%% pattern pixels per mm
/dp_mat [PATFREQ 0 0 PATFREQ 0 0] def
/dp_pw	BPSIDE def	%% pattern pixel width
/dp_ph	BPSIDE def	%% pattern pixel height
/dp_w	dp_pw PATFREQ div def	%% pattern mm width
/dp_h	dp_ph PATFREQ div def	%% pattern mm height
/savemat matrix def
/topmat matrix def
/patmat matrix def

/ncpoint errordict /nocurrentpoint get def
errordict begin
/nocurrentpoint	{
	dup /pathbbox load eq
	{pop 0 0 1 1}
	{ncpoint}
	ifelse
} bdef
end
/ar	{ %% sa ea sx sy rot tx ty
	matrix currentmatrix 8 1 roll TR RO SC
	n 0 0 1 5 3 roll arc setmatrix
} bdef
/arn	{ %% sa ea sx sy rot tx ty
 TR RO SC
	matrix currentmatrix 8 1 roll
	n 0 0 1 5 3 roll arcn setmatrix
} bdef
/el	{ %% sx sy rot tx ty
	matrix currentmatrix 6 1 roll TR RO SC
	n 0 0 1 0 360 arc setmatrix cl
} bdef
/image_raster	{ %% sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	/imagebuf sw sd mul 7 add 8 idiv string def
	sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	image
} bdef
/imagemask_raster	{
	TR SC /sh E def /sw E def
	/imagebuf sw 7 add 8 idiv string def
	sw sh false [sw 0 0 sh 0 0]
	{currentfile imagebuf readhexstring pop}
	imagemask
} bdef
/dither_color_raster    { % bool sw sh sd dw dh xs ys
	TR SC /sd E def /sh E def /sw E def
	sd 8 eq and
	{
	  /imagebuf 3 string def
	  /grayval 1 string def
	  sw sh sd [sw 0 0 sh 0 0]
	  {
	    currentfile imagebuf readhexstring pop pop
	    imagebuf 0 get 0.299 mul
	    imagebuf 1 get 0.587 mul add
	    imagebuf 2 get 0.114 mul add cvi grayval exch 0 exch put grayval
	  }
	  image
	}
	{
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sh { currentfile imagebuf readhexstring pop pop } repeat
	} ifelse
} bdef
/image_color_raster	{ % bool sw sh sd dw dh xs ys
	/colorimage where not
	{ dither_color_raster }
	{
	  pop
	  TR SC /sd E def /sh E def /sw E def pop
	  /imagebuf sw 3 mul sd mul 7 add 8 idiv string def
	  sw sh sd [sw 0 0 sh 0 0] { currentfile imagebuf readhexstring pop}
	  false 3 colorimage
	} ifelse
} bdef
/patpath	{
	/inv E def
	topmat setmatrix
	pathbbox	%% get lo - hi indecies
	/hy E dp_h div floor cvi def
	/hx E dp_w div floor cvi def
	/ly E dp_h div floor cvi def
	/lx E dp_w div floor cvi def
	lx 1 hx	{
	    dp_w mul
	    ly 1 hy {
		dp_h mul
		E dup 3 1 roll E
		patmat currentmatrix pop
		TR
		dp_pw dp_ph inv
		dp_mat dp_proc imagemask
		patmat setmatrix
	    } for
	    pop
	} for
} bdef
% setpattern brush of patterns instead of gray
/setpattern	{
	/blue E def /green E def /red E def
	/freq E def /bwidth E def /bpside E def
	/bstring E def
	/onbits 0 def /offbits 0 def
	freq 0 {/y E def /x E def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		bstring yindex bwidth mul xindex 8 idiv add get not
		1 7 xindex 8 mod sub bitshift and 0 ne
		{/onbits onbits 1 add def 1}
		{/offbits offbits 1 add def 0}
		ifelse
	} setscreen {} settransfer
	systemdict /setcmykcolor known
	{ /fact 1 onbits offbits onbits add div sub def
	1 red sub fact mul 1 green sub fact mul 1 blue sub fact mul 0
		setcmykcolor
	}
	{ offbits offbits onbits add div setgray}
	ifelse
} bdef
/dmatrix matrix def
/dpi 72 0 dmatrix defaultmatrix dtransform
	dup mul E dup mul add sqrt
def

/B	{gs bp st gr} bdef %% brush: gr lw lj
/Bbw	{gs bpbw st gr} bdef %% brush: gr lw lj
/F	{gs rgb eofill gr} bdef %% fill: gr
/Fbw	{gs setgray eofill gr} bdef %% fill: gr
/PB	{gs lj lw setpattern st gr} bdef
/PF	{gs eoclip patpath gr} bdef
/BB	{gs rgb lj lw strokepath clip patpath gr} bdef
/xdef {exch def} bdef
/clip_region {
  /ht xdef
  /wd xdef
  /bm xdef
  /lm xdef
  newpath
      lm bm moveto
      0 ht rlineto
      wd 0 rlineto
      0 ht neg rlineto
  closepath clip
} bdef
/reencode_small_dict 12 dict def
/ReencodeSmall {
reencode_small_dict begin
/new_codes_and_names exch def
/new_font_name exch def
/base_font_name exch def
/base_font_dict base_font_name findfont def
/newfont base_font_dict maxlength dict def
base_font_dict {
exch dup /FID ne
{ dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put }
ifelse
}
{ pop pop }
ifelse
} forall
newfont /FontName new_font_name put
new_codes_and_names aload pop
new_codes_and_names length 2 idiv
{ newfont /Encoding get 3 1 roll put }
repeat
new_font_name newfont definefont pop
end     %reencode_small_dict
} def
/extended_Zapf [
8#223 /a89
8#224 /a90
8#225 /a93
8#226 /a94
8#227 /a91
8#230 /a92
8#231 /a205
8#232 /a85
8#233 /a206
8#234 /a86
8#235 /a87
8#236 /a88
8#237 /a95
8#240 /a96
] def
/extended_Standard [
29 /thorn
30 /yacute
31 /divide
128 /Acircumflex
129 /Adieresis
130 /Agrave
131 /Aring
132 /Atilde
133 /Ccedilla
134 /Eacute
135 /Ecircumflex
136 /Edieresis
137 /Egrave
138 /Iacute
139 /Icircumflex
140 /Idieresis
141 /Igrave
142 /Ntilde
143 /Oacute
144 /Ocircumflex
145 /Odieresis
146 /Ograve
147 /Otilde
148 /Scaron
149 /Uacute
150 /Ucircumflex
151 /Udieresis
152 /Ugrave
153 /Ydieresis
154 /Zcaron
155 /aacute
156 /acircumflex
157 /adieresis
158 /agrave
159 /aring
160 /atilde
161 /exclamdown
162 /cent
163 /sterling
164 /fraction
165 /yen
166 /florin
167 /section
168 /currency
169 /quotesingle
170 /quotedblleft
171 /guillemotleft
172 /guilsinglleft
173 /guilsinglright
174 /fi
175 /fl
176 /plusminus
177 /endash
178 /dagger
179 /daggerdbl
180 /periodcentered
181 /twosuperior
182 /paragraph
183 /bullet
184 /quotesinglbase
185 /quotedblbase
186 /quotedblright
187 /guillemotright
188 /ellipsis
189 /perthousand
190 /threesuperior
191 /questiondown
192 /mu
193 /grave
194 /acute
195 /circumflex
196 /tilde
197 /macron
198 /breve
199 /dotaccent
200 /dieresis
201 /onesuperior
202 /ring
203 /cedilla
204 /onequarter
205 /hungarumlaut
206 /ogonek
207 /caron
208 /emdash
209 /ccedilla
210 /copyright
211 /eacute
212 /ecircumflex
213 /edieresis
214 /egrave
215 /iacute
216 /icircumflex
217 /idieresis
218 /igrave
219 /logicalnot
220 /minus
221 /ntilde
222 /oacute
223 /ocircumflex
224 /odieresis
225 /AE
226 /onehalf
227 /ordfeminine
228 /ograve
229 /otilde
230 /registered
231 /scaron
232 /Lslash
233 /Oslash
234 /OE
235 /ordmasculine
236 /trademark
237 /uacute
238 /ucircumflex
239 /udieresis
240 /ugrave
241 /ae
242 /ydieresis
243 /zcaron
244 /Aacute
245 /dotlessi
246 /threequarters
247 /Eth
248 /lslash
249 /oslash
250 /oe
251 /germandbls
252 /multiply
253 /Yacute
254 /Thorn
255 /eth
] def
/extended_Symbol [
] def
/extend_font {  % stack: fontname newfontname
exch dup (ZapfDingbats) eq
{ cvn exch cvn extended_Zapf ReencodeSmall }
{ dup (Symbol) eq
{ cvn exch cvn extended_Symbol ReencodeSmall }
{ cvn exch cvn extended_Standard ReencodeSmall }
ifelse
}
ifelse
} bind def
/extend_font_name { % stack: font_name_string
dup length 1 add string /extended_font_name exch def
extended_font_name 0 (_) putinterval
extended_font_name 1 3 -1 roll putinterval
extended_font_name
} bind def
/gf {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval dup
/localfont exch extend_font_name def
localfont extend_font
localfont findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/gfns {
/f exch def f cvn where
{ f exch begin cvn load exec setfont end }
{ f 0 f length 8 sub getinterval cvn findfont
/xsz f f length 4 sub 4 getinterval cvi def
/ysz f f length 8 sub 4 getinterval cvi def
[ xsz 0 0 ysz neg 0 0 ] makefont dup f cvn exch def
setfont
}
ifelse
} bind def
/ul { % space drop thickness
gs currentpoint currentlinewidth 
currentpoint n m 6 -3 roll 
lw 0 exch r
0 rl st lw m
gr 
} bind def
/nxtab { currentpoint pop 1000.0 mul cvi tab mod
	tab exch sub 1000.0 div 0 rmoveto } bind def
/nx { /x exch def } bind def
0. nx
gsave
2.83465 -2.83465 scale 0 -279.4 translate
topmat currentmatrix pop
n 14.094 120.96 m 80.737 120.96 l
14.094 120.96 m 14.094 70.603 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 14.094 120.96 m 14.761 120.96 l
80.737 120.96 m 80.071 120.96 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 12.382 121.446] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 14.094 112.57 m 14.761 112.57 l
80.737 112.57 m 80.071 112.57 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 11.557 113.053] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 14.094 104.17 m 14.761 104.17 l
80.737 104.17 m 80.071 104.17 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 11.557 104.66] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 14.094 95.781 m 14.761 95.781 l
80.737 95.781 m 80.071 95.781 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 11.557 96.268] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 14.094 87.388 m 14.761 87.388 l
80.737 87.388 m 80.071 87.388 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 11.557 87.875] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 14.094 78.996 m 14.761 78.996 l
80.737 78.996 m 80.071 78.996 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 10.734 79.483] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(100) s
savemat setmatrix
n 14.094 70.603 m 14.761 70.603 l
80.737 70.603 m 80.071 70.603 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 10.734 71.09] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(120) s
savemat setmatrix
n 14.094 120.96 m 14.094 120.29 l
14.094 70.603 m 14.094 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 13.683 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 26.212 120.96 m 26.212 120.29 l
26.212 70.603 m 26.212 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 24.976 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 38.33 120.96 m 38.33 120.29 l
38.33 70.603 m 38.33 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 37.095 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(400) s
savemat setmatrix
n 50.448 120.96 m 50.448 120.29 l
50.448 70.603 m 50.448 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 49.212 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(600) s
savemat setmatrix
n 62.566 120.96 m 62.566 120.29 l
62.566 70.603 m 62.566 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 61.33 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(800) s
savemat setmatrix
n 74.684 120.96 m 74.684 120.29 l
74.684 70.603 m 74.684 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 73.036 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(1000) s
savemat setmatrix
n 14.094 120.96 m 80.737 120.96 l
80.737 70.603 l
14.094 70.603 l
14.094 120.96 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 61.956 73.239] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Success Rate Test 6) s
savemat setmatrix
n 76.515 72.751 m 79.182 72.751 l
14.094 120.96 m 14.094 78.996 l
15.121 78.996 l
15.121 120.96 l
14.094 120.96 l
15.121 120.96 m 15.121 78.996 l
18.211 78.996 l
18.211 120.96 l
15.121 120.96 l
18.211 120.96 m 18.211 79.472 l
21.301 79.472 l
21.301 120.96 l
18.211 120.96 l
21.301 120.96 m 21.301 78.996 l
23.365 78.996 l
23.365 120.96 l
21.301 120.96 l
23.365 120.96 m 23.365 79.673 l
25.419 79.673 l
25.419 120.96 l
23.365 120.96 l
25.419 120.96 m 25.419 78.996 l
27.482 78.996 l
27.482 120.96 l
25.419 120.96 l
27.482 120.96 m 27.482 84.499 l
29.546 84.499 l
29.546 120.96 l
27.482 120.96 l
29.546 120.96 m 29.546 91.579 l
31.599 91.579 l
31.599 120.96 l
29.546 120.96 l
31.599 120.96 m 31.599 78.996 l
33.663 78.996 l
33.663 120.96 l
31.599 120.96 l
33.663 120.96 m 33.663 89.484 l
35.727 89.484 l
35.727 120.96 l
33.663 120.96 l
35.727 120.96 m 35.727 78.996 l
37.78 78.996 l
37.78 120.96 l
35.727 120.96 l
37.78 120.96 m 37.78 78.996 l
39.844 78.996 l
39.844 120.96 l
37.78 120.96 l
39.844 120.96 m 39.844 87.991 l
41.907 87.991 l
41.907 120.96 l
39.844 120.96 l
41.907 120.96 m 41.907 78.996 l
43.96 78.996 l
43.96 120.96 l
41.907 120.96 l
43.96 120.96 m 43.96 78.996 l
46.024 78.996 l
46.024 120.96 l
43.96 120.96 l
46.024 120.96 m 46.024 81.208 l
48.078 81.208 l
48.078 120.96 l
46.024 120.96 l
48.078 120.96 m 48.078 78.996 l
50.141 78.996 l
50.141 120.96 l
48.078 120.96 l
50.141 120.96 m 50.141 81.208 l
52.205 81.208 l
52.205 120.96 l
50.141 120.96 l
52.205 120.96 m 52.205 81.79 l
54.258 81.79 l
54.258 120.96 l
52.205 120.96 l
54.258 120.96 m 54.258 78.996 l
56.322 78.996 l
56.322 120.96 l
54.258 120.96 l
56.322 120.96 m 56.322 78.996 l
58.386 78.996 l
58.386 120.96 l
56.322 120.96 l
58.386 120.96 m 58.386 85.452 l
60.439 85.452 l
60.439 120.96 l
58.386 120.96 l
60.439 120.96 m 60.439 78.996 l
62.502 78.996 l
62.502 120.96 l
60.439 120.96 l
62.502 120.96 m 62.502 78.996 l
64.566 78.996 l
64.566 120.96 l
62.502 120.96 l
64.566 120.96 m 64.566 78.996 l
66.619 78.996 l
66.619 120.96 l
64.566 120.96 l
66.619 120.96 m 66.619 78.996 l
68.683 78.996 l
68.683 120.96 l
66.619 120.96 l
68.683 120.96 m 68.683 78.996 l
70.736 78.996 l
70.736 120.96 l
68.683 120.96 l
70.736 120.96 m 70.736 78.996 l
72.8 78.996 l
72.8 120.96 l
70.736 120.96 l
72.8 120.96 m 72.8 78.996 l
74.864 78.996 l
74.864 120.96 l
72.8 120.96 l
74.864 120.96 m 74.864 78.996 l
76.917 78.996 l
76.917 120.96 l
74.864 120.96 l
gsave
0 0 0 0.088 0 B
grestore
n 87.72 120.96 m 154.36 120.96 l
87.72 120.96 m 87.72 70.603 l
gsave
    [2 1 2 1 2 1 2 1 2 1] 0 setdash
0 0 0 0.044 0 B
grestore
n 87.72 120.96 m 88.386 120.96 l
154.36 120.96 m 153.7 120.96 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 86.007 121.446] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 87.72 114.66 m 88.386 114.66 l
154.36 114.66 m 153.7 114.66 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 115.149] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(10) s
savemat setmatrix
n 87.72 108.36 m 88.386 108.36 l
154.36 108.36 m 153.7 108.36 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 108.851] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(20) s
savemat setmatrix
n 87.72 102.08 m 88.386 102.08 l
154.36 102.08 m 153.7 102.08 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 102.565] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(30) s
savemat setmatrix
n 87.72 95.781 m 88.386 95.781 l
154.36 95.781 m 153.7 95.781 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 96.268] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(40) s
savemat setmatrix
n 87.72 89.484 m 88.386 89.484 l
154.36 89.484 m 153.7 89.484 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 89.971] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(50) s
savemat setmatrix
n 87.72 83.187 m 88.386 83.187 l
154.36 83.187 m 153.7 83.187 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 83.674] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(60) s
savemat setmatrix
n 87.72 76.9 m 88.386 76.9 l
154.36 76.9 m 153.7 76.9 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 77.387] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(70) s
savemat setmatrix
n 87.72 70.603 m 88.386 70.603 l
154.36 70.603 m 153.7 70.603 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 85.183 71.09] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(80) s
savemat setmatrix
n 87.72 120.96 m 87.72 120.29 l
87.72 70.603 m 87.72 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 87.308 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(0) s
savemat setmatrix
n 99.838 120.96 m 99.838 120.29 l
99.838 70.603 m 99.838 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 98.602 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(200) s
savemat setmatrix
n 111.95 120.96 m 111.95 120.29 l
111.95 70.603 m 111.95 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 110.72 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(400) s
savemat setmatrix
n 124.07 120.96 m 124.07 120.29 l
124.07 70.603 m 124.07 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 122.838 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(600) s
savemat setmatrix
n 136.19 120.96 m 136.19 120.29 l
136.19 70.603 m 136.19 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 134.956 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(800) s
savemat setmatrix
n 148.31 120.96 m 148.31 120.29 l
148.31 70.603 m 148.31 71.27 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 146.662 122.927] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(1000) s
savemat setmatrix
n 87.72 120.96 m 154.36 120.96 l
154.36 70.603 l
87.72 70.603 l
87.72 120.96 l
gsave
0 0 0 0.176 0 B
grestore
n savemat currentmatrix pop [0.6 0 0 0.6 135.005 73.239] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01400140) gf
0.00 0.00 0.00 rgb 
(Average Delay Test 6) s
savemat setmatrix
n 150.14 72.751 m 152.81 72.751 l
87.72 120.96 m 87.72 116.73 l
88.746 116.73 l
88.746 120.96 l
87.72 120.96 l
88.746 120.96 m 88.746 113.15 l
91.837 113.15 l
91.837 120.96 l
88.746 120.96 l
91.837 120.96 m 91.837 112.77 l
94.927 112.77 l
94.927 120.96 l
91.837 120.96 l
94.927 120.96 m 94.927 114.45 l
96.991 114.45 l
96.991 120.96 l
94.927 120.96 l
96.991 120.96 m 96.991 116.44 l
99.044 116.44 l
99.044 120.96 l
96.991 120.96 l
99.044 120.96 m 99.044 116.4 l
101.11 116.4 l
101.11 120.96 l
99.044 120.96 l
101.11 120.96 m 101.11 112.6 l
103.17 112.6 l
103.17 120.96 l
101.11 120.96 l
103.17 120.96 m 103.17 113.32 l
105.23 113.32 l
105.23 120.96 l
103.17 120.96 l
105.23 120.96 m 105.23 102.36 l
107.29 102.36 l
107.29 120.96 l
105.23 120.96 l
107.29 120.96 m 107.29 110.78 l
109.35 110.78 l
109.35 120.96 l
107.29 120.96 l
109.35 120.96 m 109.35 119.7 l
111.41 119.7 l
111.41 120.96 l
109.35 120.96 l
111.41 120.96 m 111.41 108.16 l
113.47 108.16 l
113.47 120.96 l
111.41 120.96 l
113.47 120.96 m 113.47 100.25 l
115.53 100.25 l
115.53 120.96 l
113.47 120.96 l
115.53 120.96 m 115.53 108.58 l
117.59 108.58 l
117.59 120.96 l
115.53 120.96 l
117.59 120.96 m 117.59 104.18 l
119.65 104.18 l
119.65 120.96 l
117.59 120.96 l
119.65 120.96 m 119.65 114.21 l
121.7 114.21 l
121.7 120.96 l
119.65 120.96 l
121.7 120.96 m 121.7 115.42 l
123.77 115.42 l
123.77 120.96 l
121.7 120.96 l
123.77 120.96 m 123.77 115.82 l
125.83 115.82 l
125.83 120.96 l
123.77 120.96 l
125.83 120.96 m 125.83 96.945 l
127.88 96.945 l
127.88 120.96 l
125.83 120.96 l
127.88 120.96 m 127.88 117.47 l
129.95 117.47 l
129.95 120.96 l
127.88 120.96 l
129.95 120.96 m 129.95 117.18 l
132.01 117.18 l
132.01 120.96 l
129.95 120.96 l
132.01 120.96 m 132.01 113.29 l
134.06 113.29 l
134.06 120.96 l
132.01 120.96 l
134.06 120.96 m 134.06 117.18 l
136.13 117.18 l
136.13 120.96 l
134.06 120.96 l
136.13 120.96 m 136.13 114.4 l
138.19 114.4 l
138.19 120.96 l
136.13 120.96 l
138.19 120.96 m 138.19 113.32 l
140.25 113.32 l
140.25 120.96 l
138.19 120.96 l
140.25 120.96 m 142.31 120.96 l
140.25 120.96 l
142.31 120.96 m 144.36 120.96 l
142.31 120.96 l
144.36 120.96 m 144.36 114.66 l
146.42 114.66 l
146.42 120.96 l
144.36 120.96 l
146.42 120.96 m 146.42 88.436 l
148.49 88.436 l
148.49 120.96 l
146.42 120.96 l
148.49 120.96 m 150.54 120.96 l
148.49 120.96 l
gsave
0 0 0 0.088 0 B
grestore
n savemat currentmatrix pop [1 0 0 1 15.6081 74.6431] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica02000200) gf
0.00 0.00 0.00 rgb 
(%) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 89.6421 73.8001] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 77.1221 124.627] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
n savemat currentmatrix pop [1 0 0 1.108 150.905 124.602] concat
25.4 1440 div 1.000000 mul dup scale 0 0 m
/tab 283.00 1000.0 mul cvi def

0 0 m 0 ss (Helvetica01600160) gf
0.00 0.00 0.00 rgb 
(Sec.) s
savemat setmatrix
userdict /#copies 1 put
grestore

end d_sv_obj restore

%%EndDocument
 @endspecial 212 1665 a Fo(Figure)23 b(19.)g(T)-5 b(est)23
b(case)h(6:)32 b(Connection)21 b(estab)o(lishment)i(success)h(rates)f
(and)g(a)o(vera)o(g)q(e)h(dela)n(ys.)-182 1932 y Fr(cryptographic)10
b(practices)k(as)h(described)e(in)h([7)o(,)g(10)o(,)h(13)o(].)25
b(W)-7 b(e)15 b(could)-182 2032 y(implement)g(a)j(number)d(of)i
(algorithms)f(that)h(automatically)f(detect)-182 2132
y(and)35 b(predict)f(pseudo)h(random)e(number)h(sequences)h(generated)
-182 2231 y(by)c(simple)h(common)d(generators)h(and)h(use)h(predicted)f
(pseudo-)-182 2331 y(random)21 b(IP)i(addresses)f(to)h(identify)f
(malicious)h(packets)f(quickly)-5 b(.)-182 2430 y(Again,)16
b(there)f(is)j(an)e(obvious)e(countermeasure)g(on)h(the)i(side)f(of)g
(the)-182 2530 y(attacker)22 b(to)i(harden)e(attack)h(implementations)e
(against)i(these)h(ar)n(-)-182 2630 y(tifacts.)-182 2846
y Fq(7.4)o(.)e(T)-7 b(rusted)22 b(Addr)n(ess)f(Space)g(Ranges)-83
3063 y Fr(Once)h(the)g(source)f(address)h(\256ltering)f(mechanisms)g
(discussed)-182 3162 y(in)c(Sections)h(4.1.2)e(and)h(4.2)g(become)f
(more)h(widely)g(implemented)-182 3262 y(a)35 b(limited)g(IP)h(address)
f(space)g(will)h(be)f(available)g(for)g(spoofed)-182
3361 y(source)19 b(addresses.)26 b Fh(Synkill)20 b Fr(could)f
(incorporate)e(information)-182 3461 y(about)h(these)h(secured)f
(address)h(space)g(ranges)g(and)f(automatically)-182
3561 y(include)h(them)h(in)g(its)h(address)f(preprocessing)e(steps.)
-182 3802 y Ft(8)o(.)25 b(Conclusions)-83 4027 y Fr(This)f(paper)f(has)
h(described)f(and)g(analyzed)g(a)h(network)e(based)-182
4127 y(denial)29 b(of)g(service)g(attack,)j(called)d
Fs(SYN)h(\257ooding)p Fr(.)53 b(It)30 b(has)g(con-)-182
4226 y(tributed)23 b(a)j(detailed)e(analysis)h(of)g(this)h(attack)f
(and)f(a)h(description)-182 4326 y(and)h(discussion)h(of)h(existing)e
(and)h(proposed)f(countermeasures.)-182 4425 y(Furthermore,)15
b(it)k(has)f(introduced)d(a)j(new)g(solution)f(approach,)e(ex-)-182
4525 y(plained)k(its)i(design,)e(and)h(evaluated)f(its)i(performance.)
-83 4628 y(The)31 b(design)f(is)i(based)e(on)h(the)f(philosophy)f(that)
i(this)g(active)-182 4727 y(anomaly)22 b(detection)g(tool)h(can)g
(detect)h(the)f(conditions)f(of)h(a)h(SYN)-182 4827 y(\257ooding)c
(attack)h(and)g(react)h(appropriately)d(to)i(defeat,)h(or)f(at)h(least)
-182 4926 y(lessen)h(the)h(impact)e(of,)i(an)f(attack.)36
b Fh(Synkill)23 b Fr(neither)f(requires)-182 5026 y(any)f(special)g
(hardware)f(\(such)h(as)h(particular)e(\256rewall)i(products\),)-182
5126 y(nor)15 b(certain)h(operating)f(systems,)i(network)f(stacks,)h
(or)f(even)g(mod-)-182 5225 y(i\256cations)34 b(in)h(the)f(protected)f
(end)h(systems.)70 b(Our)34 b(software)g(is)-182 5325
y(highly)19 b(portable,)f(extensible,)h(and)h(easily)g(con\256gurable.)
2073 1932 y(Our)f(evaluation)f(of)h(the)g(tool)g(shows)h(that)f
Fh(synkill)g Fr(is)h(capa-)1974 2032 y(ble)g(of)g(ef)o(fectively)e
(protecting)g(all)j(machines)e(on)h(a)g(LAN)g(against)1974
2132 y(a)j(wide)f(range)g(of)g(attack)g(con\256gurations.)31
b(Many)22 b(of)g(the)h(lessons)1974 2231 y(learned)34
b(from)g(this)i(study)f(can)g(be)g(applied)f(to)i(the)f(protection)1974
2331 y(against)20 b(other)f(denial)h(of)g(service)g(attacks.)1974
2573 y Ft(Acknowledgments)2073 2798 y Fr(W)-7 b(e)31
b(would)e(like)h(to)f(thank)g(Gustavo)g(Rodriguez-Rivera)e(for)1974
2898 y(help)22 b(with)i(the)e(design)h(of)f(the)h(garbage)f(collector)g
(and)g(members)1974 2998 y(of)d(the)h(security)g(seminar)f(at)h(the)g
(Department)f(of)g(Computer)g(Sci-)1974 3097 y(ences)c(at)g(Purdue)f
(University)g(for)g(fruitful)f(technical)i(discussions.)1974
3197 y(Suggestions)25 b(from)g(the)i(anonymous)c(referees)j(helped)f
(improve)1974 3296 y(the)20 b(presentation.)1974 3538
y Ft(Refer)n(ences)2025 3756 y Fc([1])42 b(Cisco)24 b(Systems)g(Inc.)52
b Fb(De\256ning)26 b(Strategies)e(to)g(Pr)m(otect)g(Against)2154
3847 y(TCP)17 b(SYN)i(Denial)g(of)g(Service)g(Attacks)p
Fc(,)g(September)g(1996.)2025 3941 y([2])42 b(D.)19 b(E.)h(Comer)l(.)33
b Fb(Internetworking)22 b(with)d(TCP/IP)p Fc(.)32 b(Prentice\261Hall,)
2154 4032 y(Englewood)20 b(Clif)o(fs,)d(New)i(Jersey)-5
b(,)19 b(third)g(edition,)g(1995.)2025 4126 y([3])42
b(Computer)36 b(Emer)o(gency)g(Response)g(T)-5 b(eam)35
b(\(CER)l(T\),)e(Carnegie)2154 4217 y(Mellon)20 b(University)-5
b(,)20 b(Pittsbur)o(gh,)f(P)-7 b(A.)30 b Fb(IP)19 b(Spoo\256ng)j
(Attacks)e(and)2154 4308 y(Hijacked)f(T)-7 b(erminal)19
b(Connections)p Fc(,)h(Jan.)f(1995.)28 b(CA-95:01.)2025
4402 y([4])42 b(Computer)36 b(Emer)o(gency)g(Response)g(T)-5
b(eam)35 b(\(CER)l(T\),)e(Carnegie)2154 4493 y(Mellon)21
b(University)-5 b(,)21 b(Pittsbur)o(gh,)g(P)-7 b(A.)35
b Fb(TCP)20 b(SYN)g(Flooding)i(and)2154 4585 y(IP)c(Spoo\256ng)j
(Attacks)p Fc(,)d(Sept.)h(1996.)28 b(CA-96:21.)2025 4679
y([5])42 b(E.)22 b(Corcoran.)51 b(Hackers)24 b(strike)g(at)f(N.Y)-10
b(.)23 b(Internet)g(Access)h(Com-)2154 4770 y(pany)-5
b(.)28 b Fb(The)18 b(W)-7 b(ashington)21 b(Post)p Fc(,)d(Sep.)h(12,)g
(1996.)2025 4864 y([6])42 b(daemon9,)19 b(route,)g(and)g(in\256nity)-5
b(.)25 b(Project)18 b(neptune.)27 b Fb(Phrack)19 b(Mag-)2154
4955 y(azine)p Fc(,)g(7\(48\),)g(1996.)2025 5049 y([7])42
b(D.)30 b(E.)g(Eastlake,)j(S.)d(D.)g(Crocker)m(,)k(and)d(J.)f(I.)g
(Schiller)l(.)85 b Fb(RFC\261)2154 5140 y(1750)20 b(Randomness)g
(Recommendations)h(for)e(Security)p Fc(.)27 b(Network)2154
5231 y(W)-6 b(orking)19 b(Group,)g(Dec.)g(1994.)2025
5325 y([8])42 b(J.)13 b(Fairlane.)j(Flood)e(warning.)j
Fb(2600)p Fc(,)f(13\(2\):6\2611)m(1,)g(Summer)d(1996.)p
eop
%%Page: 16 16
16 15 bop -131 83 a Fc([9])41 b(P)-8 b(.)18 b(Fer)o(guson.)29
b(Network)19 b(ingress)h(\256ltering.)27 b(Internet)19
b(draft,)g(Cisco)-3 174 y(Systems,)g(Inc.,)f(September)i(1996.)-169
262 y([10])42 b(S.)15 b(Gar\256nkel)h(and)g(G.)f(Spaf)o(ford.)21
b Fb(Practical)16 b(UNIX)e(&)i(Internet)g(Se-)-3 353
y(curity)p Fc(.)g(O'Reilley)d(&)f(Associates,)j(Inc.)d(Sebastopol,)j
(CA.,)e(second)-3 444 y(edition,)19 b(1996.)-166 532
y([1)m(1])42 b(M.)17 b(Graf)o(f.)k Fb(Sun)c(Security)g(Bulletin)f
(00136)p Fc(.)23 b(Mountain)18 b(V)l(iew)-5 b(,)16 b(CA,)-3
623 y(Oct.)j(1996.)-169 710 y([12])42 b(Internet)1308
b(Security)-3 802 y(Systems.)42 b Fb(RealSecur)m(e)23
b(User)s(')-10 b(s)22 b(Guide)g(and)h(Refer)m(ence)f(Manual)p
Fc(,)-3 893 y(1996.)28 b(A)-6 b(vailable)20 b(at)f Fa
(http://iss.net/RealSecure)p Fc(.)-169 980 y([13])42
b(D.)18 b(E.)g(Knuth.)26 b Fb(The)18 b(Art)g(of)g(Computer)h(Pr)m
(ogramming,)g(V)-8 b(olume)18 b(2)p Fc(.)-3 1072 y(Addison\261W)-6
b(esley)20 b(Publishing)f(Company)-5 b(,)19 b(Inc.,)f(second)h
(edition,)-3 1163 y(1981.)-169 1250 y([14])42 b(L.)13
b(S.)f(Laboratories.)k Fb(Livermor)m(e)d(Softwar)m(e)h(Labs.)f
(Announces)h(De-)-3 1342 y(fense)20 b(agains)g(SYN)e(Flooding)i
(Attacks)p Fc(,)e(October)h(1996.)-169 1429 y([15])42
b(C.)15 b(P)-8 b(.)14 b(S.)g(T)-6 b(.)15 b(Ltd.)20 b
Fb(TCP)14 b(SYN)h(Flooding)h(Attack)f(and)h(the)f Fc(FireW)-6
b(all-1)-3 1520 y Fb(SYNDefender)p Fc(,)20 b(October)f(1996.)-169
1608 y([16])42 b(J.)20 b(Postel.)33 b Fb(RFC\261791)20
b(Internet)h(Pr)m(otocol)p Fc(.)33 b(Information)21 b(Science)-3
1699 y(Institute,)c(University)f(of)h(Southern)g(California,)f(CA,)g
(Sept.)f(1981.)-169 1786 y([17])42 b(J.)23 b(Postel,)g(editor)l(.)47
b Fb(RFC\261793)24 b(T)l(ransmission)f(Datagram)h(Pr)m(oto-)-3
1878 y(col)p Fc(.)j(Information)20 b(Sciences)f(Institute,)f(USC,)g
(CA,)g(Sept.)g(1981.)-169 1965 y([18])42 b(Y)-10 b(.)20
b(Rekhter)m(,)g(B.)f(Moskowitz,)h(D.)g(Karrenber)o(g,)g(and)g(G.)f(de)h
(Groot.)-3 2056 y Fb(RFC\2611597)27 b(Addr)m(ess)f(Allocation)g(for)g
(Private)f(Internets)p Fc(.)61 b(Net-)-3 2148 y(work)20
b(W)-6 b(orking)19 b(Group,)g(Mar)l(.)g(1994.)-169 2235
y([19])42 b(R.)16 b(W)-7 b(.)15 b(Stevens)i(and)g(G.)e(R.)h(W)m(right.)
21 b Fb(TCP/IP)15 b(Illustrated,)h(V)-8 b(olume)-3 2326
y(2,)29 b(The)d(Implementation)p Fc(.)67 b(Prentice\261Hall,)28
b(Englewood)g(Clif)o(fs,)-3 2418 y(New)19 b(Jersey)-5
b(,)19 b(1995.)-169 2505 y([20])42 b(B.)22 b(Ziegler)l(.)42
b(Savvy)22 b(Hacker)h(T)-5 b(angles)22 b(W)-6 b(eb)22
b(For)f(Net)h(Host.)42 b Fb(The)-3 2596 y(W)-7 b(all)19
b(Str)m(eet)h(Journal)p Fc(,)f(Sep.)g(12,)g(1996.)-182
2829 y Ft(A)99 b(TCP)25 b(State)h(Machine)-83 3045 y
Fr(Figure)14 b(20)g(depicts)h(the)f(TCP)i(state)f(machine)e(\(Figure)h
(courtesy)-182 3144 y(of)20 b(Douglas)f(E.)h(Comer)m(,)f([2]\).)1974
3775 y @beginspecial 95 @llx 416 @lly 333 @urx 706 @ury
2380 @rwi @setspecial
%%BeginDocument: tcp_state_diagram_65.epsi
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		}{}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 612 792 0 1 0 FMDOCUMENT
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 72 540 720 C
92 89 520 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 72 377 405 780 238 290 95 416 FMBEGINEPSF
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Roman@0 ENC0/Times-Roman RE
BP
219.6 51.744 21.6 DC .4 LW ST/F0 10/Times-Roman@0 SF(CLOSED)200.155
53.944 Q 219.6 120.144 21.6 DC ST(LISTEN)202.38 122.344 Q 93.6 188.544
21.6 DC ST(SYN)83.6 184.744 Q(RECVD)76.655 196.744 Q 345.6 188.544 21.6
DC ST(SYN)335.6 184.744 Q(SENT)333.1 196.744 Q 219.6 256.944 21.6 DC ST
(EST)202.565 253.144 Q(AB-)-.93 E(LISHED)201.825 265.144 Q 93.6 325.344
21.6 DC ST(FIN)85.545 321.544 Q -1.2(WA)77.445 333.544 S(IT)1.2 E(-1)
-.92 E 345.6 256.944 21.6 DC ST(CLOSE)329.765 253.144 Q -1.2(WA)333.15
265.144 S(IT)1.2 E 219.6 325.344 21.6 DC ST(CLOSING)197.935 327.544 Q
93.6 393.744 21.6 DC ST(FIN)85.545 389.944 Q -1.2(WA)77.445 401.944 S
(IT)1.2 E(-2)-.92 E 219.6 393.744 21.6 DC ST(TIMED)203.77 389.944 Q -1.2
(WA)207.15 401.944 S(IT)1.2 E 345.6 325.344 21.6 DC ST(LAST)333.1
321.544 Q -.4(AC)335.245 333.544 S(K).4 E .44 LW 227.232 19.632 227.232
30.432 DL 219.6 19.632 7.632 -0.0000 -90.0000 DA 219.6 19.632 7.632
-90.0000 180.0000 DA 211.968 30.432 211.968 19.632 DL 211.968 30.432 MT
-1.8 -7.2 RL 3.6 0 RL CL BL 211.968 30.432 MT -1.8 -7.2 RL 3.6 0 RL CL
ST/F1 11/Times-Italic@0 SF(anything)231.552 27.452 Q/F2 11/Times-Roman@0
SF 1.833(/r)1.833 G(eset)-1.833 E 198 51.744 154.8 51.744 DL 198 51.744
MT -7.2 1.8 RL 0 -3.6 RL CL BL 198 51.744 MT -7.2 1.8 RL 0 -3.6 RL CL ST
F1(be)126.478 54.164 Q(gin)-.44 E 330.984 172.704 234.216 67.656 DL
330.984 172.632 MT -6.192 -4.104 RL 2.664 -2.448 RL CL BL 330.984
172.632 MT -6.192 -4.104 RL 2.664 -2.448 RL CL ST(active open)291.24
122.564 Q F2 1.833(/s)1.833 G(yn)-1.833 E 215.136 72.912 MT -1.368 6.516
RL -.912 4.344 -.912 8.688 0 13.032 RC 1.368 6.516 RL ST 215.136 99.048
MT -3.24 -6.696 RL 3.528 -.72 RL CL BL 215.136 99.048 MT -3.24 -6.696 RL
3.528 -.72 RL CL ST F1(close)228.24 94.7 Q 215.136 72.912 MT -1.368
6.516 RL -.912 4.344 -.912 8.688 0 13.032 RC 1.368 6.516 RL ST 215.136
99.048 MT -3.24 -6.696 RL 3.528 -.72 RL CL BL 215.136 99.048 MT -3.24
-6.696 RL 3.528 -.72 RL CL ST(passive open)151.562 94.7 Q 326.664
178.248 238.608 130.44 DL 326.592 178.248 MT -7.2 -1.872 RL 1.728 -3.168
RL CL BL 326.592 178.248 MT -7.2 -1.872 RL 1.728 -3.168 RL CL ST(send)
231.794 156.764 Q F2 1.833(/s)1.833 G(yn)-1.833 E 224.064 99.048 MT
1.368 -6.516 RL .912 -4.344 .912 -8.688 0 -13.032 RC -1.368 -6.516 RL ST
224.064 72.912 MT 3.24 6.696 RL -3.528 .72 RL CL BL 224.064 72.912 MT
3.24 6.696 RL -3.528 .72 RL CL ST 198.936 126.336 MT -24.768 7.38 RL
-16.512 4.92 -31.32 12.96 -44.424 24.12 RC -19.656 16.74 RL ST 110.088
174.576 MT 4.32 -6.048 RL 2.304 2.736 RL CL BL 110.088 174.576 MT 4.32
-6.048 RL 2.304 2.736 RL CL ST -.917(syn / syn)76.506 143.516 R 2.75(+a)
2.75 G(ck)-2.75 E 114.264 182.352 MT 24.768 -7.38 RL 16.512 -4.92 31.32
-12.96 44.424 -24.12 RC 19.656 -16.74 RL ST 203.112 134.184 MT -4.32
6.048 RL -2.304 -2.736 RL CL BL 203.112 134.184 MT -4.32 6.048 RL -2.304
-2.736 RL CL ST(reset)172.44 170.012 Q 200.664 246.648 112.608 198.84 DL
200.592 246.648 MT -7.2 -1.872 RL 1.728 -3.168 RL CL BL 200.592 246.648
MT -7.2 -1.872 RL 1.728 -3.168 RL CL ST(ack)165.24 225.164 Q 93.6
303.744 93.6 210.144 DL 93.6 303.744 MT -1.8 -7.2 RL 3.6 0 RL CL BL 93.6
303.744 MT -1.8 -7.2 RL 3.6 0 RL CL ST F1(close)97.92 259.364 Q F2 1.833
<2f8c>1.833 G(n)-1.833 E 115.2 188.544 324 188.544 DL 115.2 188.544 MT
7.2 -1.8 RL 0 3.6 RL CL BL 115.2 188.544 MT 7.2 -1.8 RL 0 3.6 RL CL ST
-.917(syn / syn)187.473 186.644 R 2.75(+a)2.75 G(ck)-2.75 E 238.536
246.648 326.592 198.84 DL 238.608 246.648 MT 5.472 -5.04 RL 1.728 3.168
RL CL BL 238.608 246.648 MT 5.472 -5.04 RL 1.728 3.168 RL CL ST
(syn + ack)291.24 225.164 Q 1.833(/a)1.833 G(ck)-1.833 E 112.536 315.048
200.592 267.24 DL 112.608 315.048 MT 5.472 -5.04 RL 1.728 3.168 RL CL BL
112.608 315.048 MT 5.472 -5.04 RL 1.728 3.168 RL CL ST F1(close)124.655
283.988 Q F2 1.833<2f8c>1.833 G(n)-1.833 E 324 256.944 241.2 256.944 DL
324 256.944 MT -7.2 1.8 RL 0 -3.6 RL CL BL 324 256.944 MT -7.2 1.8 RL 0
-3.6 RL CL ST -.917(\214n / ack)265.796 255.044 R 198 325.344 115.2
325.344 DL 198 325.344 MT -7.2 1.8 RL 0 -3.6 RL CL BL 198 325.344 MT
-7.2 1.8 RL 0 -3.6 RL CL ST -.917(\214n / ack)139.796 323.444 R 93.6
372.144 93.6 346.944 DL 93.6 372.144 MT -1.8 -7.2 RL 3.6 0 RL CL BL 93.6
372.144 MT -1.8 -7.2 RL 3.6 0 RL CL ST -.917(ack /)97.92 361.964 R
200.664 383.448 112.608 335.64 DL 200.592 383.448 MT -7.2 -1.872 RL
1.728 -3.168 RL CL BL 200.592 383.448 MT -7.2 -1.872 RL 1.728 -3.168 RL
CL ST -.917(\214n-ack / ack)156.456 357.212 R 198 393.744 115.2 393.744
DL 198 393.744 MT -7.2 1.8 RL 0 -3.6 RL CL BL 198 393.744 MT -7.2 1.8 RL
0 -3.6 RL CL ST -.917(\214n / ack)139.796 391.844 R 219.6 372.144 219.6
346.944 DL 219.6 372.144 MT -1.8 -7.2 RL 3.6 0 RL CL BL 219.6 372.144 MT
-1.8 -7.2 RL 3.6 0 RL CL ST -.917(ack /)223.92 361.964 R 345.6 303.744
345.6 278.544 DL 345.6 303.744 MT -1.8 -7.2 RL 3.6 0 RL CL BL 345.6
303.744 MT -1.8 -7.2 RL 3.6 0 RL CL ST F1(close)300.335 293.564 Q F2
1.833<2f8c>1.833 G(n)-1.833 E 385.2 393.744 241.2 393.744 DL 385.2
375.744 18 90.0000 0.0000 DA 403.2 69.744 403.2 375.744 DL 385.2 69.744
18 -0.0000 -90.0000 DA 241.2 51.744 385.2 51.744 DL 241.2 51.744 MT 7.2
-1.8 RL 0 3.6 RL CL BL 241.2 51.744 MT 7.2 -1.8 RL 0 3.6 RL CL ST 403.2
325.344 367.2 325.344 DL 403.2 325.344 MT -7.2 1.8 RL 0 -3.6 RL CL BL
403.2 325.344 MT -7.2 1.8 RL 0 -3.6 RL CL ST -.917(ack /)375.121 323.444
R 403.2 188.544 367.2 188.544 DL 403.2 188.544 MT -7.2 1.8 RL 0 -3.6 RL
CL BL 403.2 188.544 MT -7.2 1.8 RL 0 -3.6 RL CL ST F1 -.917(close /)
371.452 186.644 R(timeout)366.255 198.084 Q F2(/)1.833 E(reset)374.816
206.084 Q F1(timeout after 2 se)263.218 368.764 Q(gment lifetimes)-.44 E
.36 LW 349.2 362.024 349.2 362.024 DL 351.936 359.576 351.936 359.576 DL
354.744 357.128 354.744 357.128 DL 357.48 354.608 357.48 354.608 DL
360.288 352.16 360.288 352.16 DL 363.024 349.712 363.024 349.712 DL
365.832 347.264 365.832 347.264 DL 368.568 344.816 368.568 344.816 DL
371.376 342.296 371.376 342.296 DL 374.112 339.848 374.112 339.848 DL
376.92 337.4 376.92 337.4 DL 379.656 334.952 379.656 334.952 DL 382.464
332.432 382.464 332.432 DL 385.2 329.984 385.2 329.984 DL 385.2 329.984
MT -4.176 6.12 RL -2.376 -2.664 RL CL BL 385.2 329.984 MT -4.176 6.12 RL
-2.376 -2.664 RL CL ST 345.6 370.664 345.6 370.664 DL 345.6 374.48 345.6
374.48 DL 345.6 378.296 345.6 378.296 DL 345.6 382.112 345.6 382.112 DL
345.6 385.928 345.6 385.928 DL 345.6 389.744 345.6 389.744 DL 345.6
389.744 MT -1.8 -7.2 RL 3.6 0 RL CL BL 345.6 389.744 MT -1.8 -7.2 RL 3.6
0 RL CL ST EP
end

FMENDEPSF
72 72 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 2184 4040 a Fo(Figure)j(20.)i(The)f(TCP)g(\256nite)f
(state)h(mac)o(hine)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
